{"id":"node_modules/abcjs/src/write/draw/sprintf.js","dependencies":[{"name":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\package.json","includedInParent":true,"mtime":1648705913118},{"name":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\package.json","includedInParent":true,"mtime":1648703408663}],"generated":{"js":"/**\n * sprintf() for JavaScript v.0.4\n *\n Copyright (c) 2007-present, Alexandru Mărășteanu <hello@alexei.ro>\n All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright\n notice, this list of conditions and the following disclaimer in the\n documentation and/or other materials provided with the distribution.\n * Neither the name of this software nor the names of its contributors may be\n used to endorse or promote products derived from this software without\n specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR\n ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n//function str_repeat(i, m) { for (var o = []; m > 0; o[--m] = i); return(o.join('')); }\n\nvar sprintf = function() {\n  var i = 0, a, f = arguments[i++], o = [], m, p, c, x;\n  while (f) {\n    if (m = /^[^\\x25]+/.exec(f)) o.push(m[0]);\n    else if (m = /^\\x25{2}/.exec(f)) o.push('%');\n    else if (m = /^\\x25(?:(\\d+)\\$)?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(f)) {\n      if (((a = arguments[m[1] || i++]) == null) || (a == undefined)) throw(\"Too few arguments.\");\n      if (/[^s]/.test(m[7]) && (typeof(a) != 'number'))\n        throw(\"Expecting number but found \" + typeof(a));\n      switch (m[7]) {\n        case 'b': a = a.toString(2); break;\n        case 'c': a = String.fromCharCode(a); break;\n        case 'd': a = parseInt(a); break;\n        case 'e': a = m[6] ? a.toExponential(m[6]) : a.toExponential(); break;\n        case 'f': a = m[6] ? parseFloat(a).toFixed(m[6]) : parseFloat(a); break;\n        case 'o': a = a.toString(8); break;\n        case 's': a = ((a = String(a)) && m[6] ? a.substring(0, m[6]) : a); break;\n        case 'u': a = Math.abs(a); break;\n        case 'x': a = a.toString(16); break;\n        case 'X': a = a.toString(16).toUpperCase(); break;\n      }\n      a = (/[def]/.test(m[7]) && m[2] && a > 0 ? '+' + a : a);\n      c = m[3] ? m[3] == '0' ? '0' : m[3].charAt(1) : ' ';\n      x = m[5] - String(a).length;\n      p = m[5] ? str_repeat(c, x) : '';\n      o.push(m[4] ? a + p : p + a);\n    }\n    else throw (\"Huh ?!\");\n    f = f.substring(m[0].length);\n  }\n  return o.join('');\n};\n\nmodule.exports = sprintf;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/abcjs/src/write/draw/sprintf.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}}],"sources":{"node_modules/abcjs/src/write/draw/sprintf.js":"/**\n * sprintf() for JavaScript v.0.4\n *\n Copyright (c) 2007-present, Alexandru Mărășteanu <hello@alexei.ro>\n All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright\n notice, this list of conditions and the following disclaimer in the\n documentation and/or other materials provided with the distribution.\n * Neither the name of this software nor the names of its contributors may be\n used to endorse or promote products derived from this software without\n specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR\n ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n//function str_repeat(i, m) { for (var o = []; m > 0; o[--m] = i); return(o.join('')); }\n\nvar sprintf = function() {\n  var i = 0, a, f = arguments[i++], o = [], m, p, c, x;\n  while (f) {\n    if (m = /^[^\\x25]+/.exec(f)) o.push(m[0]);\n    else if (m = /^\\x25{2}/.exec(f)) o.push('%');\n    else if (m = /^\\x25(?:(\\d+)\\$)?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(f)) {\n      if (((a = arguments[m[1] || i++]) == null) || (a == undefined)) throw(\"Too few arguments.\");\n      if (/[^s]/.test(m[7]) && (typeof(a) != 'number'))\n        throw(\"Expecting number but found \" + typeof(a));\n      switch (m[7]) {\n        case 'b': a = a.toString(2); break;\n        case 'c': a = String.fromCharCode(a); break;\n        case 'd': a = parseInt(a); break;\n        case 'e': a = m[6] ? a.toExponential(m[6]) : a.toExponential(); break;\n        case 'f': a = m[6] ? parseFloat(a).toFixed(m[6]) : parseFloat(a); break;\n        case 'o': a = a.toString(8); break;\n        case 's': a = ((a = String(a)) && m[6] ? a.substring(0, m[6]) : a); break;\n        case 'u': a = Math.abs(a); break;\n        case 'x': a = a.toString(16); break;\n        case 'X': a = a.toString(16).toUpperCase(); break;\n      }\n      a = (/[def]/.test(m[7]) && m[2] && a > 0 ? '+' + a : a);\n      c = m[3] ? m[3] == '0' ? '0' : m[3].charAt(1) : ' ';\n      x = m[5] - String(a).length;\n      p = m[5] ? str_repeat(c, x) : '';\n      o.push(m[4] ? a + p : p + a);\n    }\n    else throw (\"Huh ?!\");\n    f = f.substring(m[0].length);\n  }\n  return o.join('');\n};\n\nmodule.exports = sprintf;\n"},"lineCount":66}},"error":null,"hash":"f917a6f1e5d56df474bcbbe37c1d124b","cacheData":{"env":{}}}