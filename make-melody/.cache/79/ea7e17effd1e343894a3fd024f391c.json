{"id":"node_modules/abcjs/src/write/draw/print-stem.js","dependencies":[{"name":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\package.json","includedInParent":true,"mtime":1648705913118},{"name":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\package.json","includedInParent":true,"mtime":1648703408663},{"name":"./group-elements","loc":{"line":1,"column":27,"index":27},"parent":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\src\\write\\draw\\print-stem.js","resolved":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\src\\write\\draw\\group-elements.js"},{"name":"./round-number","loc":{"line":2,"column":26,"index":74},"parent":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\src\\write\\draw\\print-stem.js","resolved":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\src\\write\\draw\\round-number.js"}],"generated":{"js":"var elementGroup = require('./group-elements');\nvar roundNumber = require(\"./round-number\");\n\nfunction printStem(renderer, x, dx, y1, y2, klass, name) {\n\tif (dx<0 || y1<y2) { // correct path \"handedness\" for intersection with other elements\n\t\tvar tmp = roundNumber(y2);\n\t\ty2 = roundNumber(y1);\n\t\ty1 = tmp;\n\t} else {\n\t\ty1 = roundNumber(y1);\n\t\ty2 = roundNumber(y2);\n\t}\n\tx = roundNumber(x);\n\tvar x2 = roundNumber(x+dx);\n\tvar pathArray = [[\"M\",x,y1],[\"L\", x, y2],[\"L\", x2, y2],[\"L\",x2,y1],[\"z\"]];\n\tvar attr = { path: \"\"};\n\tfor (var i = 0; i < pathArray.length; i++)\n\t\tattr.path += pathArray[i].join(\" \");\n\tif (klass)\n\t\tattr['class'] = klass;\n\tif (name)\n\t\tattr['data-name'] = name;\n\tif (!elementGroup.isInGroup()) {\n\t\tattr.stroke =\"none\";\n\t\tattr.fill = renderer.foregroundColor;\n\t}\n\treturn renderer.paper.pathToBack(attr);\n}\n\nmodule.exports = printStem;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/abcjs/src/write/draw/print-stem.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}}],"sources":{"node_modules/abcjs/src/write/draw/print-stem.js":"var elementGroup = require('./group-elements');\nvar roundNumber = require(\"./round-number\");\n\nfunction printStem(renderer, x, dx, y1, y2, klass, name) {\n\tif (dx<0 || y1<y2) { // correct path \"handedness\" for intersection with other elements\n\t\tvar tmp = roundNumber(y2);\n\t\ty2 = roundNumber(y1);\n\t\ty1 = tmp;\n\t} else {\n\t\ty1 = roundNumber(y1);\n\t\ty2 = roundNumber(y2);\n\t}\n\tx = roundNumber(x);\n\tvar x2 = roundNumber(x+dx);\n\tvar pathArray = [[\"M\",x,y1],[\"L\", x, y2],[\"L\", x2, y2],[\"L\",x2,y1],[\"z\"]];\n\tvar attr = { path: \"\"};\n\tfor (var i = 0; i < pathArray.length; i++)\n\t\tattr.path += pathArray[i].join(\" \");\n\tif (klass)\n\t\tattr['class'] = klass;\n\tif (name)\n\t\tattr['data-name'] = name;\n\tif (!elementGroup.isInGroup()) {\n\t\tattr.stroke =\"none\";\n\t\tattr.fill = renderer.foregroundColor;\n\t}\n\treturn renderer.paper.pathToBack(attr);\n}\n\nmodule.exports = printStem;\n"},"lineCount":31}},"error":null,"hash":"226246737fb02e34d594e091c0be0876","cacheData":{"env":{}}}