{"id":"node_modules/abcjs/src/tablatures/transposer.js","dependencies":[{"name":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\package.json","includedInParent":true,"mtime":1648705913118},{"name":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\package.json","includedInParent":true,"mtime":1648703408663},{"name":"./instruments/tab-note","loc":{"line":6,"column":22,"index":58},"parent":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\src\\tablatures\\transposer.js","resolved":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\src\\tablatures\\instruments\\tab-note.js"}],"generated":{"js":"/**\n *\n * generic transposer\n *\n */\nvar TabNote = require('./instruments/tab-note');\n\n\n\nfunction buildAccEquiv(acc,note) {\n  var equiv = note.getAccidentalEquiv();\n  if (acc.note.toUpperCase() == equiv.name.toUpperCase()) {\n    equiv.isSharp = false;\n    equiv.isFlat = false;\n    return equiv;\n  }\n  return note;\n}\n\nfunction adjustNoteToKey(acc, note) {\n  if (acc.acc == 'sharp') {\n    if (note.isFlat) {\n      return buildAccEquiv(acc, note);\n    } else if (note.isSharp) {\n      if (acc.note.toUpperCase() == note.name.toUpperCase()) {\n        note.isSharp = false;\n        note.isKeySharp = true;\n      } else {\n        if (acc.note.toUpperCase() == note.name.toUpperCase()) {\n          note.natural = true;\n        }\n      }\n    }\n  } else if (acc.acc == 'flat') {\n    if (note.isSharp) {\n      return buildAccEquiv(acc, note);\n    } else if (note.isFlat) {\n      if (acc.note.toUpperCase() == note.name.toUpperCase()) {\n        note.isFlat = false;\n        note.isKeyFlat = true;\n      }\n    } else {\n      if (acc.note.toUpperCase() == note.name.toUpperCase()) {\n        note.natural = true;\n      }\n    }\n  }\n  return note;\n}\n\n\nfunction replaceNote(self, newNote, start, end) {\n  if (self.lastEnd) {\n    while (start > self.lastEnd) {\n      self.updatedSrc.push(self.abcSrc[self.lastEnd]);\n      self.lastEnd++;\n    }\n  }\n  var nNote = newNote.split('');\n  for (var ii = 0; ii < nNote.length; ii++) {\n    self.updatedSrc.push(nNote[ii]);\n  }\n  var curPos = start + ii;\n  while (end >= curPos) {\n    self.updatedSrc.push(nNote[curPos]);\n    curPos++;\n  }\n  self.lastEnd = end;\n}\n\n\nfunction checkKeys(self, note) {\n  var accs = self.transposedKey;\n  for (var ii = 0; ii < accs.length; ii++) {\n    note = adjustNoteToKey(accs[ii], note);\n  }\n  return note;\n}\n\nTransposer.prototype.transposeNote = function (note) {\n  var returned = note;\n  var curNote = new TabNote.TabNote(returned.name);\n  if (this.transposeBy > 0) {\n    for (var ii = 0; ii < this.transposeBy; ii++) {\n      curNote = checkKeys(this,curNote.nextNote());\n    }  \n    \n  } else if ( this.transposeBy < 0) {\n    for (var jj = this.transposeBy; jj < 0; jj++) {\n      curNote = checkKeys(this,curNote.prevNote());\n    }\n  }\n  returned.name = curNote.emit();\n  return returned;\n};\n\nTransposer.prototype.upgradeSource = function (note, startChar, endChar ) {\n  var n = new TabNote.TabNote(note.name);\n  var newNote = n.emit();\n  replaceNote(this, newNote, startChar, endChar-1);\n};\n\nfunction Transposer(transposedKey , transposeBy ) {\n  this.transposeBy = transposeBy;\n  this.transposedKey = transposedKey;\n  this.lastEnd = this.kEnd+1;\n}\n\n\nmodule.exports = Transposer;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/abcjs/src/tablatures/transposer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}}],"sources":{"node_modules/abcjs/src/tablatures/transposer.js":"/**\n *\n * generic transposer\n *\n */\nvar TabNote = require('./instruments/tab-note');\n\n\n\nfunction buildAccEquiv(acc,note) {\n  var equiv = note.getAccidentalEquiv();\n  if (acc.note.toUpperCase() == equiv.name.toUpperCase()) {\n    equiv.isSharp = false;\n    equiv.isFlat = false;\n    return equiv;\n  }\n  return note;\n}\n\nfunction adjustNoteToKey(acc, note) {\n  if (acc.acc == 'sharp') {\n    if (note.isFlat) {\n      return buildAccEquiv(acc, note);\n    } else if (note.isSharp) {\n      if (acc.note.toUpperCase() == note.name.toUpperCase()) {\n        note.isSharp = false;\n        note.isKeySharp = true;\n      } else {\n        if (acc.note.toUpperCase() == note.name.toUpperCase()) {\n          note.natural = true;\n        }\n      }\n    }\n  } else if (acc.acc == 'flat') {\n    if (note.isSharp) {\n      return buildAccEquiv(acc, note);\n    } else if (note.isFlat) {\n      if (acc.note.toUpperCase() == note.name.toUpperCase()) {\n        note.isFlat = false;\n        note.isKeyFlat = true;\n      }\n    } else {\n      if (acc.note.toUpperCase() == note.name.toUpperCase()) {\n        note.natural = true;\n      }\n    }\n  }\n  return note;\n}\n\n\nfunction replaceNote(self, newNote, start, end) {\n  if (self.lastEnd) {\n    while (start > self.lastEnd) {\n      self.updatedSrc.push(self.abcSrc[self.lastEnd]);\n      self.lastEnd++;\n    }\n  }\n  var nNote = newNote.split('');\n  for (var ii = 0; ii < nNote.length; ii++) {\n    self.updatedSrc.push(nNote[ii]);\n  }\n  var curPos = start + ii;\n  while (end >= curPos) {\n    self.updatedSrc.push(nNote[curPos]);\n    curPos++;\n  }\n  self.lastEnd = end;\n}\n\n\nfunction checkKeys(self, note) {\n  var accs = self.transposedKey;\n  for (var ii = 0; ii < accs.length; ii++) {\n    note = adjustNoteToKey(accs[ii], note);\n  }\n  return note;\n}\n\nTransposer.prototype.transposeNote = function (note) {\n  var returned = note;\n  var curNote = new TabNote.TabNote(returned.name);\n  if (this.transposeBy > 0) {\n    for (var ii = 0; ii < this.transposeBy; ii++) {\n      curNote = checkKeys(this,curNote.nextNote());\n    }  \n    \n  } else if ( this.transposeBy < 0) {\n    for (var jj = this.transposeBy; jj < 0; jj++) {\n      curNote = checkKeys(this,curNote.prevNote());\n    }\n  }\n  returned.name = curNote.emit();\n  return returned;\n};\n\nTransposer.prototype.upgradeSource = function (note, startChar, endChar ) {\n  var n = new TabNote.TabNote(note.name);\n  var newNote = n.emit();\n  replaceNote(this, newNote, startChar, endChar-1);\n};\n\nfunction Transposer(transposedKey , transposeBy ) {\n  this.transposeBy = transposeBy;\n  this.transposedKey = transposedKey;\n  this.lastEnd = this.kEnd+1;\n}\n\n\nmodule.exports = Transposer;"},"lineCount":110}},"error":null,"hash":"9a3c5291bb79bdbb4e5f60bb27256814","cacheData":{"env":{}}}