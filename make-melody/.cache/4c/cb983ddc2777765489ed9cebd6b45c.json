{"id":"node_modules/abcjs/src/parse/abc_tokenizer.js","dependencies":[{"name":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\package.json","includedInParent":true,"mtime":1649031657578},{"name":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\package.json","includedInParent":true,"mtime":1649031653004},{"name":"./abc_common","loc":{"line":3,"column":26,"index":112},"parent":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\src\\parse\\abc_tokenizer.js","resolved":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\src\\parse\\abc_common.js"}],"generated":{"js":"//    abc_tokenizer.js: tokenizes an ABC Music Notation string to support abc_parse.\n\nvar parseCommon = require('./abc_common');\n\n// this is a series of functions that get a particular element out of the passed stream.\n// the return is the number of characters consumed, so 0 means that the element wasn't found.\n// also returned is the element found. This may be a different length because spaces may be consumed that aren't part of the string.\n// The return structure for most calls is { len: num_chars_consumed, token: str }\nvar Tokenizer = function(lines, multilineVars) {\n\tthis.lineIndex = 0\n\tthis.lines = lines\n\tthis.multilineVars = multilineVars;\n\n\tthis.skipWhiteSpace = function(str) {\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t  if (!this.isWhiteSpace(str.charAt(i)))\n\t\t\t\treturn i;\n\t\t}\n\t\treturn str.length;\t// It must have been all white space\n\t};\n\tvar finished = function(str, i) {\n\t\treturn i >= str.length;\n\t};\n\tthis.eatWhiteSpace = function(line, index) {\n\t\tfor (var i = index; i < line.length; i++) {\n\t\t  if (!this.isWhiteSpace(line.charAt(i)))\n\t\t\t\treturn i-index;\n\t\t}\n\t\treturn i-index;\n\t};\n\n\t// This just gets the basic pitch letter, ignoring leading spaces, and normalizing it to a capital\n\tthis.getKeyPitch = function(str) {\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn {len: 0};\n\t\tswitch (str.charAt(i)) {\n\t\t\tcase 'A':return {len: i+1, token: 'A'};\n\t\t\tcase 'B':return {len: i+1, token: 'B'};\n\t\t\tcase 'C':return {len: i+1, token: 'C'};\n\t\t\tcase 'D':return {len: i+1, token: 'D'};\n\t\t\tcase 'E':return {len: i+1, token: 'E'};\n\t\t\tcase 'F':return {len: i+1, token: 'F'};\n\t\t\tcase 'G':return {len: i+1, token: 'G'};\n//\t\t\tcase 'a':return {len: i+1, token: 'A'};\n//\t\t\tcase 'b':return {len: i+1, token: 'B'};\n//\t\t\tcase 'c':return {len: i+1, token: 'C'};\n//\t\t\tcase 'd':return {len: i+1, token: 'D'};\n//\t\t\tcase 'e':return {len: i+1, token: 'E'};\n//\t\t\tcase 'f':return {len: i+1, token: 'F'};\n//\t\t\tcase 'g':return {len: i+1, token: 'G'};\n\t\t}\n\t\treturn {len: 0};\n\t};\n\n\t// This just gets the basic accidental, ignoring leading spaces, and only the ones that appear in a key\n\tthis.getSharpFlat = function(str) {\n\t\tif (str === 'bass')\n\t\t\treturn {len: 0};\n\t\tswitch (str.charAt(0)) {\n\t\t\tcase '#':return {len: 1, token: '#'};\n\t\t\tcase 'b':return {len: 1, token: 'b'};\n\t\t}\n\t\treturn {len: 0};\n\t};\n\n\tthis.getMode = function(str) {\n\t\tvar skipAlpha = function(str, start) {\n\t\t\t// This returns the index of the next non-alphabetic char, or the entire length of the string if not found.\n\t\t  while (start < str.length && ((str.charAt(start) >= 'a' && str.charAt(start) <= 'z') || (str.charAt(start) >= 'A' && str.charAt(start) <= 'Z')))\n\t\t\t\tstart++;\n\t\t\treturn start;\n\t\t};\n\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn {len: 0};\n\t\tvar firstThree = str.substring(i,i+3).toLowerCase();\n\t\tif (firstThree.length > 1 && firstThree.charAt(1) === ' ' || firstThree.charAt(1) === '^' || firstThree.charAt(1) === '_' || firstThree.charAt(1) === '=') firstThree = firstThree.charAt(0);\t// This will handle the case of 'm'\n\t\tswitch (firstThree) {\n\t\t\tcase 'mix':return {len: skipAlpha(str, i), token: 'Mix'};\n\t\t\tcase 'dor':return {len: skipAlpha(str, i), token: 'Dor'};\n\t\t\tcase 'phr':return {len: skipAlpha(str, i), token: 'Phr'};\n\t\t\tcase 'lyd':return {len: skipAlpha(str, i), token: 'Lyd'};\n\t\t\tcase 'loc':return {len: skipAlpha(str, i), token: 'Loc'};\n\t\t\tcase 'aeo':return {len: skipAlpha(str, i), token: 'm'};\n\t\t\tcase 'maj':return {len: skipAlpha(str, i), token: ''};\n\t\t\tcase 'ion':return {len: skipAlpha(str, i), token: ''};\n\t\t\tcase 'min':return {len: skipAlpha(str, i), token: 'm'};\n\t\t\tcase 'm':return {len: skipAlpha(str, i), token: 'm'};\n\t\t}\n\t\treturn {len: 0};\n\t};\n\n\tthis.getClef = function(str, bExplicitOnly) {\n\t\tvar strOrig = str;\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn {len: 0};\n\t\t// The word 'clef' is optional, but if it appears, a clef MUST appear\n\t\tvar needsClef = false;\n\t\tvar strClef = str.substring(i);\n\t\tif (parseCommon.startsWith(strClef, 'clef=')) {\n\t\t\tneedsClef = true;\n\t\t\tstrClef = strClef.substring(5);\n\t\t\ti += 5;\n\t\t}\n\t\tif (strClef.length === 0 && needsClef)\n\t\t\treturn {len: i+5, warn: \"No clef specified: \" + strOrig};\n\n\t\tvar j = this.skipWhiteSpace(strClef);\n\t\tif (finished(strClef, j))\n\t\t\treturn {len: 0};\n\t\tif (j > 0) {\n\t\t\ti += j;\n\t\t\tstrClef = strClef.substring(j);\n\t\t}\n\t\tvar name = null;\n\t\tif (parseCommon.startsWith(strClef, 'treble'))\n\t\t\tname = 'treble';\n\t\telse if (parseCommon.startsWith(strClef, 'bass3'))\n\t\t\tname = 'bass3';\n\t\telse if (parseCommon.startsWith(strClef, 'bass'))\n\t\t\tname = 'bass';\n\t\telse if (parseCommon.startsWith(strClef, 'tenor'))\n\t\t\tname = 'tenor';\n\t\telse if (parseCommon.startsWith(strClef, 'alto2'))\n\t\t\tname = 'alto2';\n\t\telse if (parseCommon.startsWith(strClef, 'alto1'))\n\t\t\tname = 'alto1';\n\t\telse if (parseCommon.startsWith(strClef, 'alto'))\n\t\t\tname = 'alto';\n\t\telse if (!bExplicitOnly && (needsClef && parseCommon.startsWith(strClef, 'none')))\n\t\t\tname = 'none';\n\t\telse if (parseCommon.startsWith(strClef, 'perc'))\n\t\t\tname = 'perc';\n\t\telse if (!bExplicitOnly && (needsClef && parseCommon.startsWith(strClef, 'C')))\n\t\t\tname = 'tenor';\n\t\telse if (!bExplicitOnly && (needsClef && parseCommon.startsWith(strClef, 'F')))\n\t\t\tname = 'bass';\n\t\telse if (!bExplicitOnly && (needsClef && parseCommon.startsWith(strClef, 'G')))\n\t\t\tname = 'treble';\n\t\telse\n\t\t\treturn {len: i+5, warn: \"Unknown clef specified: \" + strOrig};\n\n\t\tstrClef = strClef.substring(name.length);\n\t\tj = this.isMatch(strClef, '+8');\n\t\tif (j > 0)\n\t\t\tname += \"+8\";\n\t\telse {\n\t\t\tj = this.isMatch(strClef, '-8');\n\t\t\tif (j > 0)\n\t\t\t\tname += \"-8\";\n\t\t}\n\t\treturn {len: i+name.length, token: name, explicit: needsClef};\n\t};\n\n\t// This returns one of the legal bar lines\n\t// This is called alot and there is no obvious tokenable items, so this is broken apart.\n\tthis.getBarLine = function(line, i) {\n\t\tswitch (line.charAt(i)) {\n\t\t\tcase ']':\n\t\t\t\t++i;\n\t\t\t\tswitch (line.charAt(i)) {\n\t\t\t\t\tcase '|': return {len: 2, token: \"bar_thick_thin\"};\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tif ((line.charAt(i) >= '1' && line.charAt(i) <= '9') || line.charAt(i) === '\"')\n\t\t\t\t\t\t\treturn {len: 2, token: \"bar_invisible\"};\n\t\t\t\t\t\treturn {len: 1, warn: \"Unknown bar symbol\"};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn {len: 1, token: \"bar_invisible\"};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase ':':\n\t\t\t\t++i;\n\t\t\t\tswitch (line.charAt(i)) {\n\t\t\t\t\tcase ':': return {len: 2, token: \"bar_dbl_repeat\"};\n\t\t\t\t\tcase '|':\t// :|\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tswitch (line.charAt(i)) {\n\t\t\t\t\t\t\tcase ']':\t// :|]\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tswitch (line.charAt(i)) {\n\t\t\t\t\t\t\t\t\tcase '|':\t// :|]|\n\t\t\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\t\t\tif (line.charAt(i) === ':')  return {len: 5, token: \"bar_dbl_repeat\"};\n\t\t\t\t\t\t\t\t\t\treturn {len: 3, token: \"bar_right_repeat\"};\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\treturn {len: 3, token: \"bar_right_repeat\"};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase '|':\t// :||\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tif (line.charAt(i) === ':')  return {len: 4, token: \"bar_dbl_repeat\"};\n\t\t\t\t\t\t\t\treturn {len: 3, token: \"bar_right_repeat\"};\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn {len: 2, token: \"bar_right_repeat\"};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn {len: 1, warn: \"Unknown bar symbol\"};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '[':\t// [\n\t\t\t\t++i;\n\t\t\t\tif (line.charAt(i) === '|') {\t// [|\n\t\t\t\t\t++i;\n\t\t\t\t\tswitch (line.charAt(i)) {\n\t\t\t\t\t\tcase ':': return {len: 3, token: \"bar_left_repeat\"};\n\t\t\t\t\t\tcase ']': return {len: 3, token: \"bar_invisible\"};\n\t\t\t\t\t\tdefault: return {len: 2, token: \"bar_thick_thin\"};\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ((line.charAt(i) >= '1' && line.charAt(i) <= '9') || line.charAt(i) === '\"')\n\t\t\t\t\t\treturn {len: 1, token: \"bar_invisible\"};\n\t\t\t\t\treturn {len: 0};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '|':\t// |\n\t\t\t\t++i;\n\t\t\t\tswitch (line.charAt(i)) {\n\t\t\t\t\tcase ']': return {len: 2, token: \"bar_thin_thick\"};\n\t\t\t\t\tcase '|': // ||\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tif (line.charAt(i) === ':') return {len: 3, token: \"bar_left_repeat\"};\n\t\t\t\t\t\treturn {len: 2, token: \"bar_thin_thin\"};\n\t\t\t\t\tcase ':':\t// |:\n\t\t\t\t\t\tvar colons = 0;\n\t\t\t\t\t\twhile (line.charAt(i+colons) === ':') colons++;\n\t\t\t\t\t\treturn { len: 1+colons, token: \"bar_left_repeat\"};\n\t\t\t\t\tdefault: return {len: 1, token: \"bar_thin\"};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\treturn {len: 0};\n\t};\n\n\t// this returns all the characters in the string that match one of the characters in the legalChars string\n\tthis.getTokenOf = function(str, legalChars) {\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\tif (legalChars.indexOf(str.charAt(i)) < 0)\n\t\t\t\treturn {len: i, token: str.substring(0, i)};\n\t\t}\n\t\treturn {len: i, token: str};\n\t};\n\n\tthis.getToken = function(str, start, end) {\n\t\t// This returns the next set of chars that doesn't contain spaces\n\t\tvar i = start;\n\t\twhile (i < end && !this.isWhiteSpace(str.charAt(i)))\n\t\t\ti++;\n\t\treturn str.substring(start, i);\n\t};\n\n\t// This just sees if the next token is the word passed in, with possible leading spaces\n\tthis.isMatch = function(str, match) {\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn 0;\n\t\tif (parseCommon.startsWith(str.substring(i), match))\n\t\t\treturn i+match.length;\n\t\treturn 0;\n\t};\n\n\tthis.getPitchFromTokens = function(tokens) {\n\t\tvar ret = { };\n\t\tvar pitches = {A: 5, B: 6, C: 0, D: 1, E: 2, F: 3, G: 4, a: 12, b: 13, c: 7, d: 8, e: 9, f: 10, g: 11};\n\t\tret.position = pitches[tokens[0].token];\n\t\tif (ret.position === undefined)\n\t\t\treturn { warn: \"Pitch expected. Found: \" + tokens[0].token };\n\t\ttokens.shift();\n\t\twhile (tokens.length) {\n\t\t\tswitch (tokens[0].token) {\n\t\t\t\tcase ',': ret.position -= 7; tokens.shift(); break;\n\t\t\t\tcase '\\'': ret.position += 7; tokens.shift(); break;\n\t\t\t\tdefault: return ret;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t};\n\n\tthis.getKeyAccidentals2 = function(tokens) {\n\t\tvar accs;\n\t\t// find and strip off all accidentals in the token list\n\t\twhile (tokens.length > 0) {\n\t\t\tvar acc;\n\t\t\tif (tokens[0].token === '^') {\n\t\t\t\tacc = 'sharp';\n\t\t\t\ttokens.shift();\n\t\t\t\tif (tokens.length === 0) return {accs: accs, warn: 'Expected note name after ' + acc};\n\t\t\t\tswitch (tokens[0].token) {\n\t\t\t\t\tcase '^': acc = 'dblsharp'; tokens.shift(); break;\n\t\t\t\t\tcase '/': acc = 'quartersharp'; tokens.shift(); break;\n\t\t\t\t}\n\t\t\t} else if (tokens[0].token === '=') {\n\t\t\t\tacc = 'natural';\n\t\t\t\ttokens.shift();\n\t\t\t} else if (tokens[0].token === '_') {\n\t\t\t\tacc = 'flat';\n\t\t\t\ttokens.shift();\n\t\t\t\tif (tokens.length === 0) return {accs: accs, warn: 'Expected note name after ' + acc};\n\t\t\t\tswitch (tokens[0].token) {\n\t\t\t\t\tcase '_': acc = 'dblflat'; tokens.shift(); break;\n\t\t\t\t\tcase '/': acc = 'quarterflat'; tokens.shift(); break;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Not an accidental, we'll assume that a later parse will recognize it.\n\t\t\t\treturn { accs: accs };\n\t\t\t}\n\t\t\tif (tokens.length === 0) return {accs: accs, warn: 'Expected note name after ' + acc};\n\t\t\tswitch (tokens[0].token.charAt(0))\n\t\t\t{\n\t\t\t\tcase 'a':\n\t\t\t\tcase 'b':\n\t\t\t\tcase 'c':\n\t\t\t\tcase 'd':\n\t\t\t\tcase 'e':\n\t\t\t\tcase 'f':\n\t\t\t\tcase 'g':\n\t\t\t\tcase 'A':\n\t\t\t\tcase 'B':\n\t\t\t\tcase 'C':\n\t\t\t\tcase 'D':\n\t\t\t\tcase 'E':\n\t\t\t\tcase 'F':\n\t\t\t\tcase 'G':\n\t\t\t\t\tif (accs === undefined)\n\t\t\t\t\t\taccs = [];\n\t\t\t\t\taccs.push({ acc: acc, note: tokens[0].token.charAt(0) });\n\t\t\t\t\tif (tokens[0].token.length === 1)\n\t\t\t\t\t\ttokens.shift();\n\t\t\t\t\telse\n\t\t\t\t\t\ttokens[0].token = tokens[0].token.substring(1);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn {accs: accs, warn: 'Expected note name after ' + acc + ' Found: ' + tokens[0].token };\n\t\t\t}\n\t\t}\n\t\treturn { accs: accs };\n\t};\n\n\t// This gets an accidental marking for the key signature. It has the accidental then the pitch letter.\n\tthis.getKeyAccidental = function(str) {\n\t\tvar accTranslation = {\n\t\t\t'^': 'sharp',\n\t\t\t'^^': 'dblsharp',\n\t\t\t'=': 'natural',\n\t\t\t'_': 'flat',\n\t\t\t'__': 'dblflat',\n\t\t\t'_/': 'quarterflat',\n\t\t\t'^/': 'quartersharp'\n\t\t};\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn {len: 0};\n\t\tvar acc = null;\n\t\tswitch (str.charAt(i))\n\t\t{\n\t\t\tcase '^':\n\t\t\tcase '_':\n\t\t\tcase '=':\n\t\t\t\tacc = str.charAt(i);\n\t\t\t\tbreak;\n\t\t\tdefault:return {len: 0};\n\t\t}\n\t\ti++;\n\t\tif (finished(str, i))\n\t\t\treturn {len: 1, warn: 'Expected note name after accidental'};\n\t\tswitch (str.charAt(i))\n\t\t{\n\t\t\tcase 'a':\n\t\t\tcase 'b':\n\t\t\tcase 'c':\n\t\t\tcase 'd':\n\t\t\tcase 'e':\n\t\t\tcase 'f':\n\t\t\tcase 'g':\n\t\t\tcase 'A':\n\t\t\tcase 'B':\n\t\t\tcase 'C':\n\t\t\tcase 'D':\n\t\t\tcase 'E':\n\t\t\tcase 'F':\n\t\t\tcase 'G':\n\t\t\t\treturn {len: i+1, token: {acc: accTranslation[acc], note: str.charAt(i)}};\n\t\t\tcase '^':\n\t\t\tcase '_':\n\t\t\tcase '/':\n\t\t\t\tacc += str.charAt(i);\n\t\t\t\ti++;\n\t\t\t\tif (finished(str, i))\n\t\t\t\t\treturn {len: 2, warn: 'Expected note name after accidental'};\n\t\t\t\tswitch (str.charAt(i))\n\t\t\t\t{\n\t\t\t\t\tcase 'a':\n\t\t\t\t\tcase 'b':\n\t\t\t\t\tcase 'c':\n\t\t\t\t\tcase 'd':\n\t\t\t\t\tcase 'e':\n\t\t\t\t\tcase 'f':\n\t\t\t\t\tcase 'g':\n\t\t\t\t\tcase 'A':\n\t\t\t\t\tcase 'B':\n\t\t\t\t\tcase 'C':\n\t\t\t\t\tcase 'D':\n\t\t\t\t\tcase 'E':\n\t\t\t\t\tcase 'F':\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\treturn {len: i+1, token: {acc: accTranslation[acc], note: str.charAt(i)}};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn {len: 2, warn: 'Expected note name after accidental'};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn {len: 1, warn: 'Expected note name after accidental'};\n\t\t}\n\t};\n\n\tthis.isWhiteSpace = function(ch) {\n\t\treturn ch === ' ' || ch === '\\t' || ch === '\\x12';\n\t};\n\n\tthis.getMeat = function(line, start, end) {\n\t\t// This removes any comments starting with '%' and trims the ends of the string so that there are no leading or trailing spaces.\n\t\t// it returns just the start and end characters that contain the meat.\n\t\tvar comment = line.indexOf('%', start);\n\t\tif (comment >= 0 && comment < end)\n\t\t\tend = comment;\n\t\twhile (start < end && (line.charAt(start) === ' ' || line.charAt(start) === '\\t' || line.charAt(start) === '\\x12'))\n\t\t\tstart++;\n\t\twhile (start < end && (line.charAt(end-1) === ' ' || line.charAt(end-1) === '\\t' || line.charAt(end-1) === '\\x12'))\n\t\t\tend--;\n\t\treturn {start: start, end: end};\n\t};\n\n\tvar isLetter = function(ch) {\n\t\treturn (ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z');\n\t};\n\n\tvar isNumber = function(ch) {\n\t\treturn (ch >= '0' && ch <= '9');\n\t};\n\n\tthis.tokenize = function(line, start, end, alphaUntilWhiteSpace) {\n\t\t// this returns all the tokens inside the passed string. A token is a punctuation mark, a string of digits, a string of letters.\n\t\t//  Quoted strings are one token.\n\t\t//  If there is a minus sign next to a number, then it is included in the number.\n\t\t// If there is a period immediately after a number, with a number immediately following, then a float is returned.\n\t\t// The type of token is returned: quote, alpha, number, punct\n\t\t// If alphaUntilWhiteSpace is true, then the behavior of the alpha token changes.\n\n\t\tvar ret = this.getMeat(line, start, end);\n\t\tstart = ret.start;\n\t\tend = ret.end;\n\t\tvar tokens = [];\n\t\tvar i;\n\t\twhile (start < end) {\n\t\t\tif (line.charAt(start) === '\"') {\n\t\t\t\ti = start+1;\n\t\t\t\twhile (i < end && line.charAt(i) !== '\"') i++;\n\t\t\t\ttokens.push({ type: 'quote', token: line.substring(start+1, i), start: start+1, end: i});\n\t\t\t\ti++;\n\t\t\t} else if (isLetter(line.charAt(start))) {\n\t\t\t\ti = start+1;\n\t\t\t\tif (alphaUntilWhiteSpace)\n\t\t\t\t\twhile (i < end && !this.isWhiteSpace(line.charAt(i))) i++;\n\t\t\t\telse\n\t\t\t\t\twhile (i < end && isLetter(line.charAt(i))) i++;\n\t\t\t\ttokens.push({ type: 'alpha', token: line.substring(start, i), continueId: isNumber(line.charAt(i)), start: start, end: i});\n\t\t\t\tstart = i + 1;\n\t\t\t} else if (line.charAt(start) === '.' && isNumber(line.charAt(i+1))) {\n\t\t\t\ti = start+1;\n\t\t\t\tvar int2 = null;\n\t\t\t\tvar float2 = null;\n\t\t\t\twhile (i < end && isNumber(line.charAt(i))) i++;\n\n\t\t\t\tfloat2 = parseFloat(line.substring(start, i));\n\t\t\t\ttokens.push({ type: 'number', token: line.substring(start, i), intt: int2, floatt: float2, continueId: isLetter(line.charAt(i)), start: start, end: i});\n\t\t\t\tstart = i + 1;\n\t\t\t} else if (isNumber(line.charAt(start)) || (line.charAt(start) === '-' && isNumber(line.charAt(i+1)))) {\n\t\t\t\ti = start+1;\n\t\t\t\tvar intt = null;\n\t\t\t\tvar floatt = null;\n\t\t\t\twhile (i < end && isNumber(line.charAt(i))) i++;\n\t\t\t\tif (line.charAt(i) === '.' && isNumber(line.charAt(i+1))) {\n\t\t\t\t\ti++;\n\t\t\t\t\twhile (i < end && isNumber(line.charAt(i))) i++;\n\t\t\t\t} else\n\t\t\t\t\tintt = parseInt(line.substring(start, i));\n\n\t\t\t\tfloatt = parseFloat(line.substring(start, i));\n\t\t\t\ttokens.push({ type: 'number', token: line.substring(start, i), intt: intt, floatt: floatt, continueId: isLetter(line.charAt(i)), start: start, end: i});\n\t\t\t\tstart = i + 1;\n\t\t\t} else if (line.charAt(start) === ' ' || line.charAt(start) === '\\t') {\n\t\t\t\ti = start+1;\n\t\t\t} else {\n\t\t\t\ttokens.push({ type: 'punct', token: line.charAt(start), start: start, end: start+1});\n\t\t\t\ti = start+1;\n\t\t\t}\n\t\t\tstart = i;\n\t\t}\n\t\treturn tokens;\n\t};\n\n\tthis.getVoiceToken = function(line, start, end) {\n\t\t// This finds the next token. A token is delimited by a space or an equal sign. If it starts with a quote, then the portion between the quotes is returned.\n\t\tvar i = start;\n\t\twhile (i < end && this.isWhiteSpace(line.charAt(i)) || line.charAt(i) === '=')\n\t\t\ti++;\n\n\t\tif (line.charAt(i) === '\"') {\n\t\t\tvar close = line.indexOf('\"', i+1);\n\t\t\tif (close === -1 || close >= end)\n\t\t\t\treturn {len: 1, err: \"Missing close quote\"};\n\t\t\treturn {len: close-start+1, token: this.translateString(line.substring(i+1, close))};\n\t\t} else {\n\t\t\tvar ii = i;\n\t\t\twhile (ii < end && !this.isWhiteSpace(line.charAt(ii)) && line.charAt(ii) !== '=')\n\t\t\t\tii++;\n\t\t\treturn {len: ii-start+1, token: line.substring(i, ii)};\n\t\t}\n\t};\n\n\tvar charMap = {\n\t\t\"`a\": 'à', \"'a\": \"á\", \"^a\": \"â\", \"~a\": \"ã\", \"\\\"a\": \"ä\", \"oa\": \"å\", \"aa\": \"å\", \"=a\": \"ā\", \"ua\": \"ă\", \";a\": \"ą\",\n\t\t\"`e\": 'è', \"'e\": \"é\", \"^e\": \"ê\", \"\\\"e\": \"ë\", \"=e\": \"ē\", \"ue\": \"ĕ\", \";e\": \"ę\", \".e\": \"ė\",\n\t\t\"`i\": 'ì', \"'i\": \"í\", \"^i\": \"î\", \"\\\"i\": \"ï\", \"=i\": \"ī\", \"ui\": \"ĭ\", \";i\": \"į\",\n\t\t\"`o\": 'ò', \"'o\": \"ó\", \"^o\": \"ô\", \"~o\": \"õ\", \"\\\"o\": \"ö\", \"=o\": \"ō\", \"uo\": \"ŏ\", \"/o\": \"ø\",\n\t\t\"`u\": 'ù', \"'u\": \"ú\", \"^u\": \"û\", \"~u\": \"ũ\", \"\\\"u\": \"ü\", \"ou\": \"ů\", \"=u\": \"ū\", \"uu\": \"ŭ\", \";u\": \"ų\",\n\t\t\"`A\": 'À', \"'A\": \"Á\", \"^A\": \"Â\", \"~A\": \"Ã\", \"\\\"A\": \"Ä\", \"oA\": \"Å\", \"AA\": \"Å\", \"=A\": \"Ā\", \"uA\": \"Ă\", \";A\": \"Ą\",\n\t\t\"`E\": 'È', \"'E\": \"É\", \"^E\": \"Ê\", \"\\\"E\": \"Ë\", \"=E\": \"Ē\", \"uE\": \"Ĕ\", \";E\": \"Ę\", \".E\": \"Ė\",\n\t\t\"`I\": 'Ì', \"'I\": \"Í\", \"^I\": \"Î\", \"~I\": \"Ĩ\", \"\\\"I\": \"Ï\", \"=I\": \"Ī\", \"uI\": \"Ĭ\", \";I\": \"Į\", \".I\": \"İ\",\n\t\t\"`O\": 'Ò', \"'O\": \"Ó\", \"^O\": \"Ô\", \"~O\": \"Õ\", \"\\\"O\": \"Ö\", \"=O\": \"Ō\", \"uO\": \"Ŏ\", \"/O\": \"Ø\",\n\t\t\"`U\": 'Ù', \"'U\": \"Ú\", \"^U\": \"Û\", \"~U\": \"Ũ\", \"\\\"U\": \"Ü\", \"oU\": \"Ů\", \"=U\": \"Ū\", \"uU\": \"Ŭ\", \";U\": \"Ų\",\n\t\t\"ae\": \"æ\", \"AE\": \"Æ\", \"oe\": \"œ\", \"OE\": \"Œ\", \"ss\": \"ß\",\n\t\t\"'c\": \"ć\", \"^c\": \"ĉ\", \"uc\": \"č\", \"cc\": \"ç\", \".c\": \"ċ\", \"cC\": \"Ç\", \"'C\": \"Ć\", \"^C\": \"Ĉ\", \"uC\": \"Č\", \".C\": \"Ċ\",\n\t\t\"~N\": \"Ñ\", \"~n\": \"ñ\",\n\t\t\"=s\": \"š\", \"vs\": \"š\",\n\t\t\"DH\": \"Ð\", \"dh\": \"ð\",\n\t\t\"HO\": \"Ő\", \"Ho\": \"ő\", \"HU\": \"Ű\", \"Hu\": \"ű\",\n\t\t\"'Y\": \"Ý\", \"'y\": \"ý\", \"^Y\": \"Ŷ\", \"^y\": \"ŷ\", \"\\\"Y\": \"Ÿ\", \"\\\"y\": \"ÿ\",\n\t\t\"vS\": \"Š\", \"vZ\": \"Ž\", \"vz\": 'ž'\n\n// More chars: Ĳ ĳ Ď ď Đ đ Ĝ ĝ Ğ ğ Ġ ġ Ģ ģ Ĥ ĥ Ħ ħ Ĵ ĵ Ķ ķ ĸ Ĺ ĺ Ļ ļ Ľ ľ Ŀ ŀ Ł ł Ń ń Ņ ņ Ň ň ŉ Ŋ ŋ Ŕ ŕ Ŗ ŗ Ř ř Ś ś Ŝ ŝ Ş ş Š Ţ ţ Ť ť Ŧ ŧ Ŵ ŵ Ź ź Ż ż Ž\n\t};\n\tvar charMap1 = {\n\t\t\"#\": \"♯\",\n\t\t\"b\": \"♭\",\n\t\t\"=\": \"♮\"\n\t};\n\tvar charMap2 = {\n\t\t\"201\": \"♯\",\n\t\t\"202\": \"♭\",\n\t\t\"203\": \"♮\",\n\t\t\"241\": \"¡\",\n\t\t\"242\": \"¢\", \"252\": \"a\", \"262\": \"2\", \"272\": \"o\", \"302\": \"Â\", \"312\": \"Ê\", \"322\": \"Ò\", \"332\": \"Ú\", \"342\": \"â\", \"352\": \"ê\", \"362\": \"ò\", \"372\": \"ú\",\n\t\t\"243\": \"£\", \"253\": \"«\", \"263\": \"3\", \"273\": \"»\", \"303\": \"Ã\", \"313\": \"Ë\", \"323\": \"Ó\", \"333\": \"Û\", \"343\": \"ã\", \"353\": \"ë\", \"363\": \"ó\", \"373\": \"û\",\n\t\t\"244\": \"¤\", \"254\": \"¬\", \"264\": \"  ́\", \"274\": \"1⁄4\", \"304\": \"Ä\", \"314\": \"Ì\", \"324\": \"Ô\", \"334\": \"Ü\", \"344\": \"ä\", \"354\": \"ì\", \"364\": \"ô\", \"374\": \"ü\",\n\t\t\"245\": \"¥\", \"255\": \"-\", \"265\": \"μ\", \"275\": \"1⁄2\", \"305\": \"Å\", \"315\": \"Í\", \"325\": \"Õ\", \"335\": \"Ý\",  \"345\": \"å\", \"355\": \"í\", \"365\": \"õ\", \"375\": \"ý\",\n\t\t\"246\": \"¦\", \"256\": \"®\", \"266\": \"¶\", \"276\": \"3⁄4\", \"306\": \"Æ\", \"316\": \"Î\", \"326\": \"Ö\", \"336\": \"Þ\", \"346\": \"æ\", \"356\": \"î\", \"366\": \"ö\", \"376\": \"þ\",\n\t\t\"247\": \"§\", \"257\": \" ̄\", \"267\": \"·\", \"277\": \"¿\", \"307\": \"Ç\", \"317\": \"Ï\", \"327\": \"×\", \"337\": \"ß\", \"347\": \"ç\", \"357\": \"ï\", \"367\": \"÷\", \"377\": \"ÿ\",\n\t\t\"250\": \" ̈\", \"260\": \"°\", \"270\": \" ̧\", \"300\": \"À\", \"310\": \"È\", \"320\": \"Ð\", \"330\": \"Ø\", \"340\": \"à\", \"350\": \"è\", \"360\": \"ð\", \"370\": \"ø\",\n\t\t\"251\": \"©\", \"261\": \"±\", \"271\": \"1\", \"301\": \"Á\", \"311\": \"É\", \"321\": \"Ñ\", \"331\": \"Ù\", \"341\": \"á\", \"351\": \"é\", \"361\": \"ñ\", \"371\": \"ù\" };\n\tthis.translateString = function(str) {\n\t\tvar arr = str.split('\\\\');\n\t\tif (arr.length === 1) return str;\n\t\tvar out = null;\n\t\tparseCommon.each(arr, function(s) {\n\t\t\tif (out === null)\n\t\t\t\tout = s;\n\t\t\telse {\n\t\t\t\tvar c = charMap[s.substring(0, 2)];\n\t\t\t\tif (c !== undefined)\n\t\t\t\t\tout += c + s.substring(2);\n\t\t\t\telse {\n\t\t\t\t\tc = charMap2[s.substring(0, 3)];\n\t\t\t\t\tif (c !== undefined)\n\t\t\t\t\t\tout += c + s.substring(3);\n\t\t\t\t\telse {\n\t\t\t\t\t\tc = charMap1[s.substring(0, 1)];\n\t\t\t\t\t\tif (c !== undefined)\n\t\t\t\t\t\t\tout += c + s.substring(1);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tout += \"\\\\\" + s;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn out;\n\t};\n\tthis.getNumber = function(line, index) {\n\t\tvar num = 0;\n\t\twhile (index < line.length) {\n\t\t\tswitch (line.charAt(index)) {\n\t\t\t\tcase '0':num = num*10;index++;break;\n\t\t\t\tcase '1':num = num*10+1;index++;break;\n\t\t\t\tcase '2':num = num*10+2;index++;break;\n\t\t\t\tcase '3':num = num*10+3;index++;break;\n\t\t\t\tcase '4':num = num*10+4;index++;break;\n\t\t\t\tcase '5':num = num*10+5;index++;break;\n\t\t\t\tcase '6':num = num*10+6;index++;break;\n\t\t\t\tcase '7':num = num*10+7;index++;break;\n\t\t\t\tcase '8':num = num*10+8;index++;break;\n\t\t\t\tcase '9':num = num*10+9;index++;break;\n\t\t\t\tdefault:\n\t\t\t\t\treturn {num: num, index: index};\n\t\t\t}\n\t\t}\n\t\treturn {num: num, index: index};\n\t};\n\n\tthis.getFraction = function(line, index) {\n\t\tvar num = 1;\n\t\tvar den = 1;\n\t\tif (line.charAt(index) !== '/') {\n\t\t\tvar ret = this.getNumber(line, index);\n\t\t\tnum = ret.num;\n\t\t\tindex = ret.index;\n\t\t}\n\t\tif (line.charAt(index) === '/') {\n\t\t\tindex++;\n\t\t\tif (line.charAt(index) === '/') {\n\t\t\t\tvar div = 0.5;\n\t\t\t\twhile (line.charAt(index++) === '/')\n\t\t\t\t\tdiv = div /2;\n\t\t\t\treturn {value: num * div, index: index-1};\n\t\t\t} else {\n\t\t\t\tvar iSave = index;\n\t\t\t\tvar ret2 = this.getNumber(line, index);\n\t\t\t\tif (ret2.num === 0 && iSave === index)\t// If we didn't use any characters, it is an implied 2\n\t\t\t\t\tret2.num = 2;\n\t\t\t\tif (ret2.num !== 0)\n\t\t\t\t\tden = ret2.num;\n\t\t\t\tindex = ret2.index;\n\t\t\t}\n\t\t}\n\n\t\treturn {value: num/den, index: index};\n\t};\n\n\tthis.theReverser = function(str) {\n\t\tif (parseCommon.endsWith(str, \", The\"))\n\t\t\treturn \"The \" + str.substring(0, str.length-5);\n\t\tif (parseCommon.endsWith(str, \", A\"))\n\t\t\treturn \"A \" + str.substring(0, str.length-3);\n\t\treturn str;\n\t};\n\n\tthis.stripComment = function(str) {\n\t\tvar i = str.indexOf('%');\n\t\tif (i >= 0)\n\t\t\treturn parseCommon.strip(str.substring(0, i));\n\t\treturn parseCommon.strip(str);\n\t};\n\n\tthis.getInt = function(str) {\n\t\t// This parses the beginning of the string for a number and returns { value: num, digits: num }\n\t\t// If digits is 0, then the string didn't point to a number.\n\t\tvar x = parseInt(str);\n\t\tif (isNaN(x))\n\t\t\treturn {digits: 0};\n\t\tvar s = \"\" + x;\n\t\tvar i = str.indexOf(s);\t// This is to account for leading spaces\n\t\treturn {value: x, digits: i+s.length};\n\t};\n\n\tthis.getFloat = function(str) {\n\t\t// This parses the beginning of the string for a number and returns { value: num, digits: num }\n\t\t// If digits is 0, then the string didn't point to a number.\n\t\tvar x = parseFloat(str);\n\t\tif (isNaN(x))\n\t\t\treturn {digits: 0};\n\t\tvar s = \"\" + x;\n\t\tvar i = str.indexOf(s);\t// This is to account for leading spaces\n\t\treturn {value: x, digits: i+s.length};\n\t};\n\n\tthis.getMeasurement = function(tokens) {\n\t\tif (tokens.length === 0) return { used: 0 };\n\t\tvar used = 1;\n\t\tvar num = '';\n\t\tif (tokens[0].token === '-') {\n\t\t\ttokens.shift();\n\t\t\tnum = '-';\n\t\t\tused++;\n\t\t}\n\t\telse if (tokens[0].type !== 'number') return { used: 0 };\n\t\tnum += tokens.shift().token;\n\t\tif (tokens.length === 0) return { used: 1, value: parseInt(num) };\n\t\tvar x = tokens.shift();\n\t\tif (x.token === '.') {\n\t\t\tused++;\n\t\t\tif (tokens.length === 0) return { used: used, value: parseInt(num) };\n\t\t\tif (tokens[0].type === 'number') {\n\t\t\t\tx = tokens.shift();\n\t\t\t\tnum = num + '.' + x.token;\n\t\t\t\tused++;\n\t\t\t\tif (tokens.length === 0) return { used: used, value: parseFloat(num) };\n\t\t\t}\n\t\t\tx = tokens.shift();\n\t\t}\n\t\tswitch (x.token) {\n\t\t\tcase 'pt': return { used: used+1, value: parseFloat(num) };\n\t\t\tcase 'cm': return { used: used+1, value: parseFloat(num)/2.54*72 };\n\t\t\tcase 'in': return { used: used+1, value: parseFloat(num)*72 };\n\t\t\tdefault: tokens.unshift(x); return { used: used, value: parseFloat(num) };\n\t\t}\n\t\treturn { used: 0 };\n\t};\n\tvar substInChord = function(str)\n\t{\n\t\twhile ( str.indexOf(\"\\\\n\") !== -1)\n\t\t{\n\t\t\tstr = str.replace(\"\\\\n\", \"\\n\");\n\t\t}\n\t\treturn str;\n\t};\n\tthis.getBrackettedSubstring = function(line, i, maxErrorChars, _matchChar)\n\t{\n\t\t// This extracts the sub string by looking at the first character and searching for that\n\t\t// character later in the line (or search for the optional _matchChar).\n\t\t// For instance, if the first character is a quote it will look for\n\t\t// the end quote. If the end of the line is reached, then only up to the default number\n\t\t// of characters are returned, so that a missing end quote won't eat up the entire line.\n\t\t// It returns the substring and the number of characters consumed.\n\t\t// The number of characters consumed is normally two more than the size of the substring,\n\t\t// but in the error case it might not be.\n\t\tvar matchChar = _matchChar || line.charAt(i);\n\t\tvar pos = i+1;\n\t\twhile ((pos < line.length) && (line.charAt(pos) !== matchChar))\n\t\t\t++pos;\n\t\tif (line.charAt(pos) === matchChar)\n\t\t\treturn [pos-i+1,substInChord(line.substring(i+1, pos)), true];\n\t\telse\t// we hit the end of line, so we'll just pick an arbitrary num of chars so the line doesn't disappear.\n\t\t{\n\t\t\tpos = i+maxErrorChars;\n\t\t\tif (pos > line.length-1)\n\t\t\t\tpos = line.length-1;\n\t\t\treturn [pos-i+1, substInChord(line.substring(i+1, pos)), false];\n\t\t}\n\t};\n};\n\nTokenizer.prototype.peekLine = function() {\n\treturn this.lines[this.lineIndex]\n}\n\nTokenizer.prototype.nextLine = function() {\n\tif (this.lineIndex > 0) {\n\t\tthis.multilineVars.iChar += this.lines[this.lineIndex-1].length + 1;\n\t}\n\tif (this.lineIndex < this.lines.length) {\n\t\tvar result = this.lines[this.lineIndex]\n\t\tthis.lineIndex++\n\t\treturn result\n\t}\n\treturn null\n}\n\nmodule.exports = Tokenizer;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_tokenizer.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}}],"sources":{"node_modules/abcjs/src/parse/abc_tokenizer.js":"//    abc_tokenizer.js: tokenizes an ABC Music Notation string to support abc_parse.\n\nvar parseCommon = require('./abc_common');\n\n// this is a series of functions that get a particular element out of the passed stream.\n// the return is the number of characters consumed, so 0 means that the element wasn't found.\n// also returned is the element found. This may be a different length because spaces may be consumed that aren't part of the string.\n// The return structure for most calls is { len: num_chars_consumed, token: str }\nvar Tokenizer = function(lines, multilineVars) {\n\tthis.lineIndex = 0\n\tthis.lines = lines\n\tthis.multilineVars = multilineVars;\n\n\tthis.skipWhiteSpace = function(str) {\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t  if (!this.isWhiteSpace(str.charAt(i)))\n\t\t\t\treturn i;\n\t\t}\n\t\treturn str.length;\t// It must have been all white space\n\t};\n\tvar finished = function(str, i) {\n\t\treturn i >= str.length;\n\t};\n\tthis.eatWhiteSpace = function(line, index) {\n\t\tfor (var i = index; i < line.length; i++) {\n\t\t  if (!this.isWhiteSpace(line.charAt(i)))\n\t\t\t\treturn i-index;\n\t\t}\n\t\treturn i-index;\n\t};\n\n\t// This just gets the basic pitch letter, ignoring leading spaces, and normalizing it to a capital\n\tthis.getKeyPitch = function(str) {\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn {len: 0};\n\t\tswitch (str.charAt(i)) {\n\t\t\tcase 'A':return {len: i+1, token: 'A'};\n\t\t\tcase 'B':return {len: i+1, token: 'B'};\n\t\t\tcase 'C':return {len: i+1, token: 'C'};\n\t\t\tcase 'D':return {len: i+1, token: 'D'};\n\t\t\tcase 'E':return {len: i+1, token: 'E'};\n\t\t\tcase 'F':return {len: i+1, token: 'F'};\n\t\t\tcase 'G':return {len: i+1, token: 'G'};\n//\t\t\tcase 'a':return {len: i+1, token: 'A'};\n//\t\t\tcase 'b':return {len: i+1, token: 'B'};\n//\t\t\tcase 'c':return {len: i+1, token: 'C'};\n//\t\t\tcase 'd':return {len: i+1, token: 'D'};\n//\t\t\tcase 'e':return {len: i+1, token: 'E'};\n//\t\t\tcase 'f':return {len: i+1, token: 'F'};\n//\t\t\tcase 'g':return {len: i+1, token: 'G'};\n\t\t}\n\t\treturn {len: 0};\n\t};\n\n\t// This just gets the basic accidental, ignoring leading spaces, and only the ones that appear in a key\n\tthis.getSharpFlat = function(str) {\n\t\tif (str === 'bass')\n\t\t\treturn {len: 0};\n\t\tswitch (str.charAt(0)) {\n\t\t\tcase '#':return {len: 1, token: '#'};\n\t\t\tcase 'b':return {len: 1, token: 'b'};\n\t\t}\n\t\treturn {len: 0};\n\t};\n\n\tthis.getMode = function(str) {\n\t\tvar skipAlpha = function(str, start) {\n\t\t\t// This returns the index of the next non-alphabetic char, or the entire length of the string if not found.\n\t\t  while (start < str.length && ((str.charAt(start) >= 'a' && str.charAt(start) <= 'z') || (str.charAt(start) >= 'A' && str.charAt(start) <= 'Z')))\n\t\t\t\tstart++;\n\t\t\treturn start;\n\t\t};\n\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn {len: 0};\n\t\tvar firstThree = str.substring(i,i+3).toLowerCase();\n\t\tif (firstThree.length > 1 && firstThree.charAt(1) === ' ' || firstThree.charAt(1) === '^' || firstThree.charAt(1) === '_' || firstThree.charAt(1) === '=') firstThree = firstThree.charAt(0);\t// This will handle the case of 'm'\n\t\tswitch (firstThree) {\n\t\t\tcase 'mix':return {len: skipAlpha(str, i), token: 'Mix'};\n\t\t\tcase 'dor':return {len: skipAlpha(str, i), token: 'Dor'};\n\t\t\tcase 'phr':return {len: skipAlpha(str, i), token: 'Phr'};\n\t\t\tcase 'lyd':return {len: skipAlpha(str, i), token: 'Lyd'};\n\t\t\tcase 'loc':return {len: skipAlpha(str, i), token: 'Loc'};\n\t\t\tcase 'aeo':return {len: skipAlpha(str, i), token: 'm'};\n\t\t\tcase 'maj':return {len: skipAlpha(str, i), token: ''};\n\t\t\tcase 'ion':return {len: skipAlpha(str, i), token: ''};\n\t\t\tcase 'min':return {len: skipAlpha(str, i), token: 'm'};\n\t\t\tcase 'm':return {len: skipAlpha(str, i), token: 'm'};\n\t\t}\n\t\treturn {len: 0};\n\t};\n\n\tthis.getClef = function(str, bExplicitOnly) {\n\t\tvar strOrig = str;\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn {len: 0};\n\t\t// The word 'clef' is optional, but if it appears, a clef MUST appear\n\t\tvar needsClef = false;\n\t\tvar strClef = str.substring(i);\n\t\tif (parseCommon.startsWith(strClef, 'clef=')) {\n\t\t\tneedsClef = true;\n\t\t\tstrClef = strClef.substring(5);\n\t\t\ti += 5;\n\t\t}\n\t\tif (strClef.length === 0 && needsClef)\n\t\t\treturn {len: i+5, warn: \"No clef specified: \" + strOrig};\n\n\t\tvar j = this.skipWhiteSpace(strClef);\n\t\tif (finished(strClef, j))\n\t\t\treturn {len: 0};\n\t\tif (j > 0) {\n\t\t\ti += j;\n\t\t\tstrClef = strClef.substring(j);\n\t\t}\n\t\tvar name = null;\n\t\tif (parseCommon.startsWith(strClef, 'treble'))\n\t\t\tname = 'treble';\n\t\telse if (parseCommon.startsWith(strClef, 'bass3'))\n\t\t\tname = 'bass3';\n\t\telse if (parseCommon.startsWith(strClef, 'bass'))\n\t\t\tname = 'bass';\n\t\telse if (parseCommon.startsWith(strClef, 'tenor'))\n\t\t\tname = 'tenor';\n\t\telse if (parseCommon.startsWith(strClef, 'alto2'))\n\t\t\tname = 'alto2';\n\t\telse if (parseCommon.startsWith(strClef, 'alto1'))\n\t\t\tname = 'alto1';\n\t\telse if (parseCommon.startsWith(strClef, 'alto'))\n\t\t\tname = 'alto';\n\t\telse if (!bExplicitOnly && (needsClef && parseCommon.startsWith(strClef, 'none')))\n\t\t\tname = 'none';\n\t\telse if (parseCommon.startsWith(strClef, 'perc'))\n\t\t\tname = 'perc';\n\t\telse if (!bExplicitOnly && (needsClef && parseCommon.startsWith(strClef, 'C')))\n\t\t\tname = 'tenor';\n\t\telse if (!bExplicitOnly && (needsClef && parseCommon.startsWith(strClef, 'F')))\n\t\t\tname = 'bass';\n\t\telse if (!bExplicitOnly && (needsClef && parseCommon.startsWith(strClef, 'G')))\n\t\t\tname = 'treble';\n\t\telse\n\t\t\treturn {len: i+5, warn: \"Unknown clef specified: \" + strOrig};\n\n\t\tstrClef = strClef.substring(name.length);\n\t\tj = this.isMatch(strClef, '+8');\n\t\tif (j > 0)\n\t\t\tname += \"+8\";\n\t\telse {\n\t\t\tj = this.isMatch(strClef, '-8');\n\t\t\tif (j > 0)\n\t\t\t\tname += \"-8\";\n\t\t}\n\t\treturn {len: i+name.length, token: name, explicit: needsClef};\n\t};\n\n\t// This returns one of the legal bar lines\n\t// This is called alot and there is no obvious tokenable items, so this is broken apart.\n\tthis.getBarLine = function(line, i) {\n\t\tswitch (line.charAt(i)) {\n\t\t\tcase ']':\n\t\t\t\t++i;\n\t\t\t\tswitch (line.charAt(i)) {\n\t\t\t\t\tcase '|': return {len: 2, token: \"bar_thick_thin\"};\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tif ((line.charAt(i) >= '1' && line.charAt(i) <= '9') || line.charAt(i) === '\"')\n\t\t\t\t\t\t\treturn {len: 2, token: \"bar_invisible\"};\n\t\t\t\t\t\treturn {len: 1, warn: \"Unknown bar symbol\"};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn {len: 1, token: \"bar_invisible\"};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase ':':\n\t\t\t\t++i;\n\t\t\t\tswitch (line.charAt(i)) {\n\t\t\t\t\tcase ':': return {len: 2, token: \"bar_dbl_repeat\"};\n\t\t\t\t\tcase '|':\t// :|\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tswitch (line.charAt(i)) {\n\t\t\t\t\t\t\tcase ']':\t// :|]\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tswitch (line.charAt(i)) {\n\t\t\t\t\t\t\t\t\tcase '|':\t// :|]|\n\t\t\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\t\t\tif (line.charAt(i) === ':')  return {len: 5, token: \"bar_dbl_repeat\"};\n\t\t\t\t\t\t\t\t\t\treturn {len: 3, token: \"bar_right_repeat\"};\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\treturn {len: 3, token: \"bar_right_repeat\"};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase '|':\t// :||\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tif (line.charAt(i) === ':')  return {len: 4, token: \"bar_dbl_repeat\"};\n\t\t\t\t\t\t\t\treturn {len: 3, token: \"bar_right_repeat\"};\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn {len: 2, token: \"bar_right_repeat\"};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn {len: 1, warn: \"Unknown bar symbol\"};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '[':\t// [\n\t\t\t\t++i;\n\t\t\t\tif (line.charAt(i) === '|') {\t// [|\n\t\t\t\t\t++i;\n\t\t\t\t\tswitch (line.charAt(i)) {\n\t\t\t\t\t\tcase ':': return {len: 3, token: \"bar_left_repeat\"};\n\t\t\t\t\t\tcase ']': return {len: 3, token: \"bar_invisible\"};\n\t\t\t\t\t\tdefault: return {len: 2, token: \"bar_thick_thin\"};\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ((line.charAt(i) >= '1' && line.charAt(i) <= '9') || line.charAt(i) === '\"')\n\t\t\t\t\t\treturn {len: 1, token: \"bar_invisible\"};\n\t\t\t\t\treturn {len: 0};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '|':\t// |\n\t\t\t\t++i;\n\t\t\t\tswitch (line.charAt(i)) {\n\t\t\t\t\tcase ']': return {len: 2, token: \"bar_thin_thick\"};\n\t\t\t\t\tcase '|': // ||\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tif (line.charAt(i) === ':') return {len: 3, token: \"bar_left_repeat\"};\n\t\t\t\t\t\treturn {len: 2, token: \"bar_thin_thin\"};\n\t\t\t\t\tcase ':':\t// |:\n\t\t\t\t\t\tvar colons = 0;\n\t\t\t\t\t\twhile (line.charAt(i+colons) === ':') colons++;\n\t\t\t\t\t\treturn { len: 1+colons, token: \"bar_left_repeat\"};\n\t\t\t\t\tdefault: return {len: 1, token: \"bar_thin\"};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\treturn {len: 0};\n\t};\n\n\t// this returns all the characters in the string that match one of the characters in the legalChars string\n\tthis.getTokenOf = function(str, legalChars) {\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\tif (legalChars.indexOf(str.charAt(i)) < 0)\n\t\t\t\treturn {len: i, token: str.substring(0, i)};\n\t\t}\n\t\treturn {len: i, token: str};\n\t};\n\n\tthis.getToken = function(str, start, end) {\n\t\t// This returns the next set of chars that doesn't contain spaces\n\t\tvar i = start;\n\t\twhile (i < end && !this.isWhiteSpace(str.charAt(i)))\n\t\t\ti++;\n\t\treturn str.substring(start, i);\n\t};\n\n\t// This just sees if the next token is the word passed in, with possible leading spaces\n\tthis.isMatch = function(str, match) {\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn 0;\n\t\tif (parseCommon.startsWith(str.substring(i), match))\n\t\t\treturn i+match.length;\n\t\treturn 0;\n\t};\n\n\tthis.getPitchFromTokens = function(tokens) {\n\t\tvar ret = { };\n\t\tvar pitches = {A: 5, B: 6, C: 0, D: 1, E: 2, F: 3, G: 4, a: 12, b: 13, c: 7, d: 8, e: 9, f: 10, g: 11};\n\t\tret.position = pitches[tokens[0].token];\n\t\tif (ret.position === undefined)\n\t\t\treturn { warn: \"Pitch expected. Found: \" + tokens[0].token };\n\t\ttokens.shift();\n\t\twhile (tokens.length) {\n\t\t\tswitch (tokens[0].token) {\n\t\t\t\tcase ',': ret.position -= 7; tokens.shift(); break;\n\t\t\t\tcase '\\'': ret.position += 7; tokens.shift(); break;\n\t\t\t\tdefault: return ret;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t};\n\n\tthis.getKeyAccidentals2 = function(tokens) {\n\t\tvar accs;\n\t\t// find and strip off all accidentals in the token list\n\t\twhile (tokens.length > 0) {\n\t\t\tvar acc;\n\t\t\tif (tokens[0].token === '^') {\n\t\t\t\tacc = 'sharp';\n\t\t\t\ttokens.shift();\n\t\t\t\tif (tokens.length === 0) return {accs: accs, warn: 'Expected note name after ' + acc};\n\t\t\t\tswitch (tokens[0].token) {\n\t\t\t\t\tcase '^': acc = 'dblsharp'; tokens.shift(); break;\n\t\t\t\t\tcase '/': acc = 'quartersharp'; tokens.shift(); break;\n\t\t\t\t}\n\t\t\t} else if (tokens[0].token === '=') {\n\t\t\t\tacc = 'natural';\n\t\t\t\ttokens.shift();\n\t\t\t} else if (tokens[0].token === '_') {\n\t\t\t\tacc = 'flat';\n\t\t\t\ttokens.shift();\n\t\t\t\tif (tokens.length === 0) return {accs: accs, warn: 'Expected note name after ' + acc};\n\t\t\t\tswitch (tokens[0].token) {\n\t\t\t\t\tcase '_': acc = 'dblflat'; tokens.shift(); break;\n\t\t\t\t\tcase '/': acc = 'quarterflat'; tokens.shift(); break;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Not an accidental, we'll assume that a later parse will recognize it.\n\t\t\t\treturn { accs: accs };\n\t\t\t}\n\t\t\tif (tokens.length === 0) return {accs: accs, warn: 'Expected note name after ' + acc};\n\t\t\tswitch (tokens[0].token.charAt(0))\n\t\t\t{\n\t\t\t\tcase 'a':\n\t\t\t\tcase 'b':\n\t\t\t\tcase 'c':\n\t\t\t\tcase 'd':\n\t\t\t\tcase 'e':\n\t\t\t\tcase 'f':\n\t\t\t\tcase 'g':\n\t\t\t\tcase 'A':\n\t\t\t\tcase 'B':\n\t\t\t\tcase 'C':\n\t\t\t\tcase 'D':\n\t\t\t\tcase 'E':\n\t\t\t\tcase 'F':\n\t\t\t\tcase 'G':\n\t\t\t\t\tif (accs === undefined)\n\t\t\t\t\t\taccs = [];\n\t\t\t\t\taccs.push({ acc: acc, note: tokens[0].token.charAt(0) });\n\t\t\t\t\tif (tokens[0].token.length === 1)\n\t\t\t\t\t\ttokens.shift();\n\t\t\t\t\telse\n\t\t\t\t\t\ttokens[0].token = tokens[0].token.substring(1);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn {accs: accs, warn: 'Expected note name after ' + acc + ' Found: ' + tokens[0].token };\n\t\t\t}\n\t\t}\n\t\treturn { accs: accs };\n\t};\n\n\t// This gets an accidental marking for the key signature. It has the accidental then the pitch letter.\n\tthis.getKeyAccidental = function(str) {\n\t\tvar accTranslation = {\n\t\t\t'^': 'sharp',\n\t\t\t'^^': 'dblsharp',\n\t\t\t'=': 'natural',\n\t\t\t'_': 'flat',\n\t\t\t'__': 'dblflat',\n\t\t\t'_/': 'quarterflat',\n\t\t\t'^/': 'quartersharp'\n\t\t};\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn {len: 0};\n\t\tvar acc = null;\n\t\tswitch (str.charAt(i))\n\t\t{\n\t\t\tcase '^':\n\t\t\tcase '_':\n\t\t\tcase '=':\n\t\t\t\tacc = str.charAt(i);\n\t\t\t\tbreak;\n\t\t\tdefault:return {len: 0};\n\t\t}\n\t\ti++;\n\t\tif (finished(str, i))\n\t\t\treturn {len: 1, warn: 'Expected note name after accidental'};\n\t\tswitch (str.charAt(i))\n\t\t{\n\t\t\tcase 'a':\n\t\t\tcase 'b':\n\t\t\tcase 'c':\n\t\t\tcase 'd':\n\t\t\tcase 'e':\n\t\t\tcase 'f':\n\t\t\tcase 'g':\n\t\t\tcase 'A':\n\t\t\tcase 'B':\n\t\t\tcase 'C':\n\t\t\tcase 'D':\n\t\t\tcase 'E':\n\t\t\tcase 'F':\n\t\t\tcase 'G':\n\t\t\t\treturn {len: i+1, token: {acc: accTranslation[acc], note: str.charAt(i)}};\n\t\t\tcase '^':\n\t\t\tcase '_':\n\t\t\tcase '/':\n\t\t\t\tacc += str.charAt(i);\n\t\t\t\ti++;\n\t\t\t\tif (finished(str, i))\n\t\t\t\t\treturn {len: 2, warn: 'Expected note name after accidental'};\n\t\t\t\tswitch (str.charAt(i))\n\t\t\t\t{\n\t\t\t\t\tcase 'a':\n\t\t\t\t\tcase 'b':\n\t\t\t\t\tcase 'c':\n\t\t\t\t\tcase 'd':\n\t\t\t\t\tcase 'e':\n\t\t\t\t\tcase 'f':\n\t\t\t\t\tcase 'g':\n\t\t\t\t\tcase 'A':\n\t\t\t\t\tcase 'B':\n\t\t\t\t\tcase 'C':\n\t\t\t\t\tcase 'D':\n\t\t\t\t\tcase 'E':\n\t\t\t\t\tcase 'F':\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\treturn {len: i+1, token: {acc: accTranslation[acc], note: str.charAt(i)}};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn {len: 2, warn: 'Expected note name after accidental'};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn {len: 1, warn: 'Expected note name after accidental'};\n\t\t}\n\t};\n\n\tthis.isWhiteSpace = function(ch) {\n\t\treturn ch === ' ' || ch === '\\t' || ch === '\\x12';\n\t};\n\n\tthis.getMeat = function(line, start, end) {\n\t\t// This removes any comments starting with '%' and trims the ends of the string so that there are no leading or trailing spaces.\n\t\t// it returns just the start and end characters that contain the meat.\n\t\tvar comment = line.indexOf('%', start);\n\t\tif (comment >= 0 && comment < end)\n\t\t\tend = comment;\n\t\twhile (start < end && (line.charAt(start) === ' ' || line.charAt(start) === '\\t' || line.charAt(start) === '\\x12'))\n\t\t\tstart++;\n\t\twhile (start < end && (line.charAt(end-1) === ' ' || line.charAt(end-1) === '\\t' || line.charAt(end-1) === '\\x12'))\n\t\t\tend--;\n\t\treturn {start: start, end: end};\n\t};\n\n\tvar isLetter = function(ch) {\n\t\treturn (ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z');\n\t};\n\n\tvar isNumber = function(ch) {\n\t\treturn (ch >= '0' && ch <= '9');\n\t};\n\n\tthis.tokenize = function(line, start, end, alphaUntilWhiteSpace) {\n\t\t// this returns all the tokens inside the passed string. A token is a punctuation mark, a string of digits, a string of letters.\n\t\t//  Quoted strings are one token.\n\t\t//  If there is a minus sign next to a number, then it is included in the number.\n\t\t// If there is a period immediately after a number, with a number immediately following, then a float is returned.\n\t\t// The type of token is returned: quote, alpha, number, punct\n\t\t// If alphaUntilWhiteSpace is true, then the behavior of the alpha token changes.\n\n\t\tvar ret = this.getMeat(line, start, end);\n\t\tstart = ret.start;\n\t\tend = ret.end;\n\t\tvar tokens = [];\n\t\tvar i;\n\t\twhile (start < end) {\n\t\t\tif (line.charAt(start) === '\"') {\n\t\t\t\ti = start+1;\n\t\t\t\twhile (i < end && line.charAt(i) !== '\"') i++;\n\t\t\t\ttokens.push({ type: 'quote', token: line.substring(start+1, i), start: start+1, end: i});\n\t\t\t\ti++;\n\t\t\t} else if (isLetter(line.charAt(start))) {\n\t\t\t\ti = start+1;\n\t\t\t\tif (alphaUntilWhiteSpace)\n\t\t\t\t\twhile (i < end && !this.isWhiteSpace(line.charAt(i))) i++;\n\t\t\t\telse\n\t\t\t\t\twhile (i < end && isLetter(line.charAt(i))) i++;\n\t\t\t\ttokens.push({ type: 'alpha', token: line.substring(start, i), continueId: isNumber(line.charAt(i)), start: start, end: i});\n\t\t\t\tstart = i + 1;\n\t\t\t} else if (line.charAt(start) === '.' && isNumber(line.charAt(i+1))) {\n\t\t\t\ti = start+1;\n\t\t\t\tvar int2 = null;\n\t\t\t\tvar float2 = null;\n\t\t\t\twhile (i < end && isNumber(line.charAt(i))) i++;\n\n\t\t\t\tfloat2 = parseFloat(line.substring(start, i));\n\t\t\t\ttokens.push({ type: 'number', token: line.substring(start, i), intt: int2, floatt: float2, continueId: isLetter(line.charAt(i)), start: start, end: i});\n\t\t\t\tstart = i + 1;\n\t\t\t} else if (isNumber(line.charAt(start)) || (line.charAt(start) === '-' && isNumber(line.charAt(i+1)))) {\n\t\t\t\ti = start+1;\n\t\t\t\tvar intt = null;\n\t\t\t\tvar floatt = null;\n\t\t\t\twhile (i < end && isNumber(line.charAt(i))) i++;\n\t\t\t\tif (line.charAt(i) === '.' && isNumber(line.charAt(i+1))) {\n\t\t\t\t\ti++;\n\t\t\t\t\twhile (i < end && isNumber(line.charAt(i))) i++;\n\t\t\t\t} else\n\t\t\t\t\tintt = parseInt(line.substring(start, i));\n\n\t\t\t\tfloatt = parseFloat(line.substring(start, i));\n\t\t\t\ttokens.push({ type: 'number', token: line.substring(start, i), intt: intt, floatt: floatt, continueId: isLetter(line.charAt(i)), start: start, end: i});\n\t\t\t\tstart = i + 1;\n\t\t\t} else if (line.charAt(start) === ' ' || line.charAt(start) === '\\t') {\n\t\t\t\ti = start+1;\n\t\t\t} else {\n\t\t\t\ttokens.push({ type: 'punct', token: line.charAt(start), start: start, end: start+1});\n\t\t\t\ti = start+1;\n\t\t\t}\n\t\t\tstart = i;\n\t\t}\n\t\treturn tokens;\n\t};\n\n\tthis.getVoiceToken = function(line, start, end) {\n\t\t// This finds the next token. A token is delimited by a space or an equal sign. If it starts with a quote, then the portion between the quotes is returned.\n\t\tvar i = start;\n\t\twhile (i < end && this.isWhiteSpace(line.charAt(i)) || line.charAt(i) === '=')\n\t\t\ti++;\n\n\t\tif (line.charAt(i) === '\"') {\n\t\t\tvar close = line.indexOf('\"', i+1);\n\t\t\tif (close === -1 || close >= end)\n\t\t\t\treturn {len: 1, err: \"Missing close quote\"};\n\t\t\treturn {len: close-start+1, token: this.translateString(line.substring(i+1, close))};\n\t\t} else {\n\t\t\tvar ii = i;\n\t\t\twhile (ii < end && !this.isWhiteSpace(line.charAt(ii)) && line.charAt(ii) !== '=')\n\t\t\t\tii++;\n\t\t\treturn {len: ii-start+1, token: line.substring(i, ii)};\n\t\t}\n\t};\n\n\tvar charMap = {\n\t\t\"`a\": 'à', \"'a\": \"á\", \"^a\": \"â\", \"~a\": \"ã\", \"\\\"a\": \"ä\", \"oa\": \"å\", \"aa\": \"å\", \"=a\": \"ā\", \"ua\": \"ă\", \";a\": \"ą\",\n\t\t\"`e\": 'è', \"'e\": \"é\", \"^e\": \"ê\", \"\\\"e\": \"ë\", \"=e\": \"ē\", \"ue\": \"ĕ\", \";e\": \"ę\", \".e\": \"ė\",\n\t\t\"`i\": 'ì', \"'i\": \"í\", \"^i\": \"î\", \"\\\"i\": \"ï\", \"=i\": \"ī\", \"ui\": \"ĭ\", \";i\": \"į\",\n\t\t\"`o\": 'ò', \"'o\": \"ó\", \"^o\": \"ô\", \"~o\": \"õ\", \"\\\"o\": \"ö\", \"=o\": \"ō\", \"uo\": \"ŏ\", \"/o\": \"ø\",\n\t\t\"`u\": 'ù', \"'u\": \"ú\", \"^u\": \"û\", \"~u\": \"ũ\", \"\\\"u\": \"ü\", \"ou\": \"ů\", \"=u\": \"ū\", \"uu\": \"ŭ\", \";u\": \"ų\",\n\t\t\"`A\": 'À', \"'A\": \"Á\", \"^A\": \"Â\", \"~A\": \"Ã\", \"\\\"A\": \"Ä\", \"oA\": \"Å\", \"AA\": \"Å\", \"=A\": \"Ā\", \"uA\": \"Ă\", \";A\": \"Ą\",\n\t\t\"`E\": 'È', \"'E\": \"É\", \"^E\": \"Ê\", \"\\\"E\": \"Ë\", \"=E\": \"Ē\", \"uE\": \"Ĕ\", \";E\": \"Ę\", \".E\": \"Ė\",\n\t\t\"`I\": 'Ì', \"'I\": \"Í\", \"^I\": \"Î\", \"~I\": \"Ĩ\", \"\\\"I\": \"Ï\", \"=I\": \"Ī\", \"uI\": \"Ĭ\", \";I\": \"Į\", \".I\": \"İ\",\n\t\t\"`O\": 'Ò', \"'O\": \"Ó\", \"^O\": \"Ô\", \"~O\": \"Õ\", \"\\\"O\": \"Ö\", \"=O\": \"Ō\", \"uO\": \"Ŏ\", \"/O\": \"Ø\",\n\t\t\"`U\": 'Ù', \"'U\": \"Ú\", \"^U\": \"Û\", \"~U\": \"Ũ\", \"\\\"U\": \"Ü\", \"oU\": \"Ů\", \"=U\": \"Ū\", \"uU\": \"Ŭ\", \";U\": \"Ų\",\n\t\t\"ae\": \"æ\", \"AE\": \"Æ\", \"oe\": \"œ\", \"OE\": \"Œ\", \"ss\": \"ß\",\n\t\t\"'c\": \"ć\", \"^c\": \"ĉ\", \"uc\": \"č\", \"cc\": \"ç\", \".c\": \"ċ\", \"cC\": \"Ç\", \"'C\": \"Ć\", \"^C\": \"Ĉ\", \"uC\": \"Č\", \".C\": \"Ċ\",\n\t\t\"~N\": \"Ñ\", \"~n\": \"ñ\",\n\t\t\"=s\": \"š\", \"vs\": \"š\",\n\t\t\"DH\": \"Ð\", \"dh\": \"ð\",\n\t\t\"HO\": \"Ő\", \"Ho\": \"ő\", \"HU\": \"Ű\", \"Hu\": \"ű\",\n\t\t\"'Y\": \"Ý\", \"'y\": \"ý\", \"^Y\": \"Ŷ\", \"^y\": \"ŷ\", \"\\\"Y\": \"Ÿ\", \"\\\"y\": \"ÿ\",\n\t\t\"vS\": \"Š\", \"vZ\": \"Ž\", \"vz\": 'ž'\n\n// More chars: Ĳ ĳ Ď ď Đ đ Ĝ ĝ Ğ ğ Ġ ġ Ģ ģ Ĥ ĥ Ħ ħ Ĵ ĵ Ķ ķ ĸ Ĺ ĺ Ļ ļ Ľ ľ Ŀ ŀ Ł ł Ń ń Ņ ņ Ň ň ŉ Ŋ ŋ Ŕ ŕ Ŗ ŗ Ř ř Ś ś Ŝ ŝ Ş ş Š Ţ ţ Ť ť Ŧ ŧ Ŵ ŵ Ź ź Ż ż Ž\n\t};\n\tvar charMap1 = {\n\t\t\"#\": \"♯\",\n\t\t\"b\": \"♭\",\n\t\t\"=\": \"♮\"\n\t};\n\tvar charMap2 = {\n\t\t\"201\": \"♯\",\n\t\t\"202\": \"♭\",\n\t\t\"203\": \"♮\",\n\t\t\"241\": \"¡\",\n\t\t\"242\": \"¢\", \"252\": \"a\", \"262\": \"2\", \"272\": \"o\", \"302\": \"Â\", \"312\": \"Ê\", \"322\": \"Ò\", \"332\": \"Ú\", \"342\": \"â\", \"352\": \"ê\", \"362\": \"ò\", \"372\": \"ú\",\n\t\t\"243\": \"£\", \"253\": \"«\", \"263\": \"3\", \"273\": \"»\", \"303\": \"Ã\", \"313\": \"Ë\", \"323\": \"Ó\", \"333\": \"Û\", \"343\": \"ã\", \"353\": \"ë\", \"363\": \"ó\", \"373\": \"û\",\n\t\t\"244\": \"¤\", \"254\": \"¬\", \"264\": \"  ́\", \"274\": \"1⁄4\", \"304\": \"Ä\", \"314\": \"Ì\", \"324\": \"Ô\", \"334\": \"Ü\", \"344\": \"ä\", \"354\": \"ì\", \"364\": \"ô\", \"374\": \"ü\",\n\t\t\"245\": \"¥\", \"255\": \"-\", \"265\": \"μ\", \"275\": \"1⁄2\", \"305\": \"Å\", \"315\": \"Í\", \"325\": \"Õ\", \"335\": \"Ý\",  \"345\": \"å\", \"355\": \"í\", \"365\": \"õ\", \"375\": \"ý\",\n\t\t\"246\": \"¦\", \"256\": \"®\", \"266\": \"¶\", \"276\": \"3⁄4\", \"306\": \"Æ\", \"316\": \"Î\", \"326\": \"Ö\", \"336\": \"Þ\", \"346\": \"æ\", \"356\": \"î\", \"366\": \"ö\", \"376\": \"þ\",\n\t\t\"247\": \"§\", \"257\": \" ̄\", \"267\": \"·\", \"277\": \"¿\", \"307\": \"Ç\", \"317\": \"Ï\", \"327\": \"×\", \"337\": \"ß\", \"347\": \"ç\", \"357\": \"ï\", \"367\": \"÷\", \"377\": \"ÿ\",\n\t\t\"250\": \" ̈\", \"260\": \"°\", \"270\": \" ̧\", \"300\": \"À\", \"310\": \"È\", \"320\": \"Ð\", \"330\": \"Ø\", \"340\": \"à\", \"350\": \"è\", \"360\": \"ð\", \"370\": \"ø\",\n\t\t\"251\": \"©\", \"261\": \"±\", \"271\": \"1\", \"301\": \"Á\", \"311\": \"É\", \"321\": \"Ñ\", \"331\": \"Ù\", \"341\": \"á\", \"351\": \"é\", \"361\": \"ñ\", \"371\": \"ù\" };\n\tthis.translateString = function(str) {\n\t\tvar arr = str.split('\\\\');\n\t\tif (arr.length === 1) return str;\n\t\tvar out = null;\n\t\tparseCommon.each(arr, function(s) {\n\t\t\tif (out === null)\n\t\t\t\tout = s;\n\t\t\telse {\n\t\t\t\tvar c = charMap[s.substring(0, 2)];\n\t\t\t\tif (c !== undefined)\n\t\t\t\t\tout += c + s.substring(2);\n\t\t\t\telse {\n\t\t\t\t\tc = charMap2[s.substring(0, 3)];\n\t\t\t\t\tif (c !== undefined)\n\t\t\t\t\t\tout += c + s.substring(3);\n\t\t\t\t\telse {\n\t\t\t\t\t\tc = charMap1[s.substring(0, 1)];\n\t\t\t\t\t\tif (c !== undefined)\n\t\t\t\t\t\t\tout += c + s.substring(1);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tout += \"\\\\\" + s;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn out;\n\t};\n\tthis.getNumber = function(line, index) {\n\t\tvar num = 0;\n\t\twhile (index < line.length) {\n\t\t\tswitch (line.charAt(index)) {\n\t\t\t\tcase '0':num = num*10;index++;break;\n\t\t\t\tcase '1':num = num*10+1;index++;break;\n\t\t\t\tcase '2':num = num*10+2;index++;break;\n\t\t\t\tcase '3':num = num*10+3;index++;break;\n\t\t\t\tcase '4':num = num*10+4;index++;break;\n\t\t\t\tcase '5':num = num*10+5;index++;break;\n\t\t\t\tcase '6':num = num*10+6;index++;break;\n\t\t\t\tcase '7':num = num*10+7;index++;break;\n\t\t\t\tcase '8':num = num*10+8;index++;break;\n\t\t\t\tcase '9':num = num*10+9;index++;break;\n\t\t\t\tdefault:\n\t\t\t\t\treturn {num: num, index: index};\n\t\t\t}\n\t\t}\n\t\treturn {num: num, index: index};\n\t};\n\n\tthis.getFraction = function(line, index) {\n\t\tvar num = 1;\n\t\tvar den = 1;\n\t\tif (line.charAt(index) !== '/') {\n\t\t\tvar ret = this.getNumber(line, index);\n\t\t\tnum = ret.num;\n\t\t\tindex = ret.index;\n\t\t}\n\t\tif (line.charAt(index) === '/') {\n\t\t\tindex++;\n\t\t\tif (line.charAt(index) === '/') {\n\t\t\t\tvar div = 0.5;\n\t\t\t\twhile (line.charAt(index++) === '/')\n\t\t\t\t\tdiv = div /2;\n\t\t\t\treturn {value: num * div, index: index-1};\n\t\t\t} else {\n\t\t\t\tvar iSave = index;\n\t\t\t\tvar ret2 = this.getNumber(line, index);\n\t\t\t\tif (ret2.num === 0 && iSave === index)\t// If we didn't use any characters, it is an implied 2\n\t\t\t\t\tret2.num = 2;\n\t\t\t\tif (ret2.num !== 0)\n\t\t\t\t\tden = ret2.num;\n\t\t\t\tindex = ret2.index;\n\t\t\t}\n\t\t}\n\n\t\treturn {value: num/den, index: index};\n\t};\n\n\tthis.theReverser = function(str) {\n\t\tif (parseCommon.endsWith(str, \", The\"))\n\t\t\treturn \"The \" + str.substring(0, str.length-5);\n\t\tif (parseCommon.endsWith(str, \", A\"))\n\t\t\treturn \"A \" + str.substring(0, str.length-3);\n\t\treturn str;\n\t};\n\n\tthis.stripComment = function(str) {\n\t\tvar i = str.indexOf('%');\n\t\tif (i >= 0)\n\t\t\treturn parseCommon.strip(str.substring(0, i));\n\t\treturn parseCommon.strip(str);\n\t};\n\n\tthis.getInt = function(str) {\n\t\t// This parses the beginning of the string for a number and returns { value: num, digits: num }\n\t\t// If digits is 0, then the string didn't point to a number.\n\t\tvar x = parseInt(str);\n\t\tif (isNaN(x))\n\t\t\treturn {digits: 0};\n\t\tvar s = \"\" + x;\n\t\tvar i = str.indexOf(s);\t// This is to account for leading spaces\n\t\treturn {value: x, digits: i+s.length};\n\t};\n\n\tthis.getFloat = function(str) {\n\t\t// This parses the beginning of the string for a number and returns { value: num, digits: num }\n\t\t// If digits is 0, then the string didn't point to a number.\n\t\tvar x = parseFloat(str);\n\t\tif (isNaN(x))\n\t\t\treturn {digits: 0};\n\t\tvar s = \"\" + x;\n\t\tvar i = str.indexOf(s);\t// This is to account for leading spaces\n\t\treturn {value: x, digits: i+s.length};\n\t};\n\n\tthis.getMeasurement = function(tokens) {\n\t\tif (tokens.length === 0) return { used: 0 };\n\t\tvar used = 1;\n\t\tvar num = '';\n\t\tif (tokens[0].token === '-') {\n\t\t\ttokens.shift();\n\t\t\tnum = '-';\n\t\t\tused++;\n\t\t}\n\t\telse if (tokens[0].type !== 'number') return { used: 0 };\n\t\tnum += tokens.shift().token;\n\t\tif (tokens.length === 0) return { used: 1, value: parseInt(num) };\n\t\tvar x = tokens.shift();\n\t\tif (x.token === '.') {\n\t\t\tused++;\n\t\t\tif (tokens.length === 0) return { used: used, value: parseInt(num) };\n\t\t\tif (tokens[0].type === 'number') {\n\t\t\t\tx = tokens.shift();\n\t\t\t\tnum = num + '.' + x.token;\n\t\t\t\tused++;\n\t\t\t\tif (tokens.length === 0) return { used: used, value: parseFloat(num) };\n\t\t\t}\n\t\t\tx = tokens.shift();\n\t\t}\n\t\tswitch (x.token) {\n\t\t\tcase 'pt': return { used: used+1, value: parseFloat(num) };\n\t\t\tcase 'cm': return { used: used+1, value: parseFloat(num)/2.54*72 };\n\t\t\tcase 'in': return { used: used+1, value: parseFloat(num)*72 };\n\t\t\tdefault: tokens.unshift(x); return { used: used, value: parseFloat(num) };\n\t\t}\n\t\treturn { used: 0 };\n\t};\n\tvar substInChord = function(str)\n\t{\n\t\twhile ( str.indexOf(\"\\\\n\") !== -1)\n\t\t{\n\t\t\tstr = str.replace(\"\\\\n\", \"\\n\");\n\t\t}\n\t\treturn str;\n\t};\n\tthis.getBrackettedSubstring = function(line, i, maxErrorChars, _matchChar)\n\t{\n\t\t// This extracts the sub string by looking at the first character and searching for that\n\t\t// character later in the line (or search for the optional _matchChar).\n\t\t// For instance, if the first character is a quote it will look for\n\t\t// the end quote. If the end of the line is reached, then only up to the default number\n\t\t// of characters are returned, so that a missing end quote won't eat up the entire line.\n\t\t// It returns the substring and the number of characters consumed.\n\t\t// The number of characters consumed is normally two more than the size of the substring,\n\t\t// but in the error case it might not be.\n\t\tvar matchChar = _matchChar || line.charAt(i);\n\t\tvar pos = i+1;\n\t\twhile ((pos < line.length) && (line.charAt(pos) !== matchChar))\n\t\t\t++pos;\n\t\tif (line.charAt(pos) === matchChar)\n\t\t\treturn [pos-i+1,substInChord(line.substring(i+1, pos)), true];\n\t\telse\t// we hit the end of line, so we'll just pick an arbitrary num of chars so the line doesn't disappear.\n\t\t{\n\t\t\tpos = i+maxErrorChars;\n\t\t\tif (pos > line.length-1)\n\t\t\t\tpos = line.length-1;\n\t\t\treturn [pos-i+1, substInChord(line.substring(i+1, pos)), false];\n\t\t}\n\t};\n};\n\nTokenizer.prototype.peekLine = function() {\n\treturn this.lines[this.lineIndex]\n}\n\nTokenizer.prototype.nextLine = function() {\n\tif (this.lineIndex > 0) {\n\t\tthis.multilineVars.iChar += this.lines[this.lineIndex-1].length + 1;\n\t}\n\tif (this.lineIndex < this.lines.length) {\n\t\tvar result = this.lines[this.lineIndex]\n\t\tthis.lineIndex++\n\t\treturn result\n\t}\n\treturn null\n}\n\nmodule.exports = Tokenizer;\n"},"lineCount":762}},"error":null,"hash":"be65e47fefe35e840649aa1fa9560d93","cacheData":{"env":{}}}