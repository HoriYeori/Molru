{"id":"node_modules/abcjs/src/write/bottom-text.js","dependencies":[{"name":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\package.json","includedInParent":true,"mtime":1648705913118},{"name":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\package.json","includedInParent":true,"mtime":1648703408663},{"name":"./add-text-if","loc":{"line":1,"column":26,"index":26},"parent":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\src\\write\\bottom-text.js","resolved":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\src\\write\\add-text-if.js"}],"generated":{"js":"const addTextIf = require(\"./add-text-if\");\n\nfunction BottomText(metaText, width, isPrint, paddingLeft, spacing, getTextSize) {\n\tthis.rows = [];\n\tif (metaText.unalignedWords && metaText.unalignedWords.length > 0)\n\t\tthis.unalignedWords(metaText.unalignedWords, paddingLeft, spacing, getTextSize);\n\tthis.extraText(metaText, paddingLeft, spacing, getTextSize);\n\tif (metaText.footer && isPrint)\n\t\tthis.footer(metaText.footer, width, paddingLeft, getTextSize);\n}\n\nBottomText.prototype.unalignedWords = function (unalignedWords, paddingLeft, spacing, getTextSize) {\n\tvar indent = 50;\n\tvar klass = 'meta-bottom unaligned-words';\n\tvar defFont = 'wordsfont';\n\tthis.rows.push({startGroup: \"unalignedWords\", klass: 'abcjs-meta-bottom abcjs-unaligned-words', name: \"words\"});\n\tvar space = getTextSize.calc(\"i\", defFont, klass);\n\n\tthis.rows.push({move: spacing.words});\n\n\tfor (var j = 0; j < unalignedWords.length; j++) {\n\t\tif (unalignedWords[j] === '')\n\t\t\tthis.rows.push({move: space.height});\n\t\telse if (typeof unalignedWords[j] === 'string') {\n\t\t\taddTextIf(this.rows, { marginLeft: paddingLeft + indent, text: unalignedWords[j], font: defFont, klass: klass, inGroup: true, name: \"words\"}, getTextSize);\n\t\t} else {\n\t\t\tvar largestY = 0;\n\t\t\tvar offsetX = 0;\n\t\t\tfor (var k = 0; k < unalignedWords[j].length; k++) {\n\t\t\t\tvar thisWord = unalignedWords[j][k];\n\t\t\t\tvar font = (thisWord.font) ? thisWord.font : defFont;\n\t\t\t\tthis.rows.push({\n\t\t\t\t\tleft: paddingLeft + indent + offsetX,\n\t\t\t\t\ttext: thisWord.text,\n\t\t\t\t\tfont: font,\n\t\t\t\t\tanchor: 'start'\n\t\t\t\t});\n\t\t\t\tvar size = getTextSize.calc(thisWord.text, defFont, klass);\n\t\t\t\tlargestY = Math.max(largestY, size.height);\n\t\t\t\toffsetX += size.width;\n\t\t\t\t// If the phrase ends in a space, then that is not counted in the width, so we need to add that in ourselves.\n\t\t\t\tif (thisWord.text[thisWord.text.length - 1] === ' ') {\n\t\t\t\t\toffsetX += space.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.rows.push({move: largestY});\n\t\t}\n\t}\n\tthis.rows.push({move: space.height * 2});\n\tthis.rows.push({endGroup: \"unalignedWords\", absElemType: \"unalignedWords\", startChar: -1, endChar: -1, name: \"unalignedWords\"});\n}\n\nBottomText.prototype.extraText = function (metaText, marginLeft, spacing, getTextSize) {\n\tvar extraText = \"\";\n\tif (metaText.book) extraText += \"Book: \" + metaText.book + \"\\n\";\n\tif (metaText.source) extraText += \"Source: \" + metaText.source + \"\\n\";\n\tif (metaText.discography) extraText += \"Discography: \" + metaText.discography + \"\\n\";\n\tif (metaText.notes) extraText += \"Notes: \" + metaText.notes + \"\\n\";\n\tif (metaText.transcription) extraText += \"Transcription: \" + metaText.transcription + \"\\n\";\n\tif (metaText.history) extraText += \"History: \" + metaText.history + \"\\n\";\n\tif (metaText['abc-copyright']) extraText += \"Copyright: \" + metaText['abc-copyright'] + \"\\n\";\n\tif (metaText['abc-creator']) extraText += \"Creator: \" + metaText['abc-creator'] + \"\\n\";\n\tif (metaText['abc-edited-by']) extraText += \"Edited By: \" + metaText['abc-edited-by'] + \"\\n\";\n\tif (extraText.length > 0) {\n\t\t\taddTextIf(this.rows, { marginLeft: marginLeft, text: extraText, font: 'historyfont', klass: 'meta-bottom extra-text', marginTop: spacing.info, absElemType: \"extraText\", name: \"description\"}, getTextSize);\n\t}\n}\n\nBottomText.prototype.footer = function (footer, width, paddingLeft, getTextSize) {\n\tvar klass = 'header meta-bottom';\n\tvar font = \"footerfont\";\n\tthis.rows.push({startGroup: \"footer\", klass: klass});\n\t// Note: whether there is a footer or not doesn't change any other positioning, so this doesn't change the Y-coordinate.\n\taddTextIf(this.rows, { marginLeft: paddingLeft, text: footer.left, font: font, klass: klass, name: \"footer\"}, getTextSize);\n\taddTextIf(this.rows, { marginLeft: paddingLeft + width / 2, text: footer.center, font: font, klass: klass, anchor: 'middle', name: \"footer\"} , getTextSize);\n\taddTextIf(this.rows, { marginLeft: paddingLeft + width, text: footer.right, font: font, klass: klass, anchor: 'end', name: \"footer\"}, getTextSize);\n}\n\nmodule.exports = BottomText;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/abcjs/src/write/bottom-text.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}}],"sources":{"node_modules/abcjs/src/write/bottom-text.js":"const addTextIf = require(\"./add-text-if\");\n\nfunction BottomText(metaText, width, isPrint, paddingLeft, spacing, getTextSize) {\n\tthis.rows = [];\n\tif (metaText.unalignedWords && metaText.unalignedWords.length > 0)\n\t\tthis.unalignedWords(metaText.unalignedWords, paddingLeft, spacing, getTextSize);\n\tthis.extraText(metaText, paddingLeft, spacing, getTextSize);\n\tif (metaText.footer && isPrint)\n\t\tthis.footer(metaText.footer, width, paddingLeft, getTextSize);\n}\n\nBottomText.prototype.unalignedWords = function (unalignedWords, paddingLeft, spacing, getTextSize) {\n\tvar indent = 50;\n\tvar klass = 'meta-bottom unaligned-words';\n\tvar defFont = 'wordsfont';\n\tthis.rows.push({startGroup: \"unalignedWords\", klass: 'abcjs-meta-bottom abcjs-unaligned-words', name: \"words\"});\n\tvar space = getTextSize.calc(\"i\", defFont, klass);\n\n\tthis.rows.push({move: spacing.words});\n\n\tfor (var j = 0; j < unalignedWords.length; j++) {\n\t\tif (unalignedWords[j] === '')\n\t\t\tthis.rows.push({move: space.height});\n\t\telse if (typeof unalignedWords[j] === 'string') {\n\t\t\taddTextIf(this.rows, { marginLeft: paddingLeft + indent, text: unalignedWords[j], font: defFont, klass: klass, inGroup: true, name: \"words\"}, getTextSize);\n\t\t} else {\n\t\t\tvar largestY = 0;\n\t\t\tvar offsetX = 0;\n\t\t\tfor (var k = 0; k < unalignedWords[j].length; k++) {\n\t\t\t\tvar thisWord = unalignedWords[j][k];\n\t\t\t\tvar font = (thisWord.font) ? thisWord.font : defFont;\n\t\t\t\tthis.rows.push({\n\t\t\t\t\tleft: paddingLeft + indent + offsetX,\n\t\t\t\t\ttext: thisWord.text,\n\t\t\t\t\tfont: font,\n\t\t\t\t\tanchor: 'start'\n\t\t\t\t});\n\t\t\t\tvar size = getTextSize.calc(thisWord.text, defFont, klass);\n\t\t\t\tlargestY = Math.max(largestY, size.height);\n\t\t\t\toffsetX += size.width;\n\t\t\t\t// If the phrase ends in a space, then that is not counted in the width, so we need to add that in ourselves.\n\t\t\t\tif (thisWord.text[thisWord.text.length - 1] === ' ') {\n\t\t\t\t\toffsetX += space.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.rows.push({move: largestY});\n\t\t}\n\t}\n\tthis.rows.push({move: space.height * 2});\n\tthis.rows.push({endGroup: \"unalignedWords\", absElemType: \"unalignedWords\", startChar: -1, endChar: -1, name: \"unalignedWords\"});\n}\n\nBottomText.prototype.extraText = function (metaText, marginLeft, spacing, getTextSize) {\n\tvar extraText = \"\";\n\tif (metaText.book) extraText += \"Book: \" + metaText.book + \"\\n\";\n\tif (metaText.source) extraText += \"Source: \" + metaText.source + \"\\n\";\n\tif (metaText.discography) extraText += \"Discography: \" + metaText.discography + \"\\n\";\n\tif (metaText.notes) extraText += \"Notes: \" + metaText.notes + \"\\n\";\n\tif (metaText.transcription) extraText += \"Transcription: \" + metaText.transcription + \"\\n\";\n\tif (metaText.history) extraText += \"History: \" + metaText.history + \"\\n\";\n\tif (metaText['abc-copyright']) extraText += \"Copyright: \" + metaText['abc-copyright'] + \"\\n\";\n\tif (metaText['abc-creator']) extraText += \"Creator: \" + metaText['abc-creator'] + \"\\n\";\n\tif (metaText['abc-edited-by']) extraText += \"Edited By: \" + metaText['abc-edited-by'] + \"\\n\";\n\tif (extraText.length > 0) {\n\t\t\taddTextIf(this.rows, { marginLeft: marginLeft, text: extraText, font: 'historyfont', klass: 'meta-bottom extra-text', marginTop: spacing.info, absElemType: \"extraText\", name: \"description\"}, getTextSize);\n\t}\n}\n\nBottomText.prototype.footer = function (footer, width, paddingLeft, getTextSize) {\n\tvar klass = 'header meta-bottom';\n\tvar font = \"footerfont\";\n\tthis.rows.push({startGroup: \"footer\", klass: klass});\n\t// Note: whether there is a footer or not doesn't change any other positioning, so this doesn't change the Y-coordinate.\n\taddTextIf(this.rows, { marginLeft: paddingLeft, text: footer.left, font: font, klass: klass, name: \"footer\"}, getTextSize);\n\taddTextIf(this.rows, { marginLeft: paddingLeft + width / 2, text: footer.center, font: font, klass: klass, anchor: 'middle', name: \"footer\"} , getTextSize);\n\taddTextIf(this.rows, { marginLeft: paddingLeft + width, text: footer.right, font: font, klass: klass, anchor: 'end', name: \"footer\"}, getTextSize);\n}\n\nmodule.exports = BottomText;\n"},"lineCount":80}},"error":null,"hash":"fdcbe2bccf83c96cba8cf6c054e85d00","cacheData":{"env":{}}}