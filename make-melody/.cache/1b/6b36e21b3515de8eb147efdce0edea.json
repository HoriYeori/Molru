{"id":"node_modules/abcjs/src/parse/abc_transpose.js","dependencies":[{"name":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\package.json","includedInParent":true,"mtime":1648705913118},{"name":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\package.json","includedInParent":true,"mtime":1648703408663}],"generated":{"js":"//    abc_transpose.js: Handles the automatic transposition of key signatures, chord symbols, and notes.\n\nvar transpose = {};\n\nvar keyIndex = {\n\t'C': 0,\n\t'C#': 1,\n\t'Db': 1,\n\t'D': 2,\n\t'D#': 3,\n\t'Eb': 3,\n\t'E': 4,\n\t'F': 5,\n\t'F#': 6,\n\t'Gb': 6,\n\t'G': 7,\n\t'G#': 8,\n\t'Ab': 8,\n\t'A': 9,\n\t'A#': 10,\n\t'Bb': 10,\n\t'B': 11\n};\nvar newKey = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'];\nvar newKeyMinor = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'];\n\ntranspose.keySignature = function(multilineVars, keys, keyName, root, acc, localTranspose) {\n\tif (multilineVars.clef.type === \"perc\")\n\t\treturn { accidentals: keys[keyName], root: root, acc: acc };\n\tif (!localTranspose) localTranspose = 0;\n\tmultilineVars.localTransposeVerticalMovement = 0;\n\tmultilineVars.localTransposePreferFlats = false;\n\tvar k = keys[keyName];\n\tif (!k) return multilineVars.key; // If the key isn't in the list, it is non-standard. We won't attempt to transpose it.\n\tmultilineVars.localTranspose = (multilineVars.globalTranspose ? multilineVars.globalTranspose : 0) + localTranspose;\n\n\tif (!multilineVars.localTranspose)\n\t\treturn { accidentals: k, root: root, acc: acc };\n\tmultilineVars.globalTransposeOrigKeySig = k;\n\tif (multilineVars.localTranspose % 12 === 0) {\n\t\tmultilineVars.localTransposeVerticalMovement = (multilineVars.localTranspose / 12) * 7;\n\t\treturn { accidentals: k, root: root, acc: acc };\n\t}\n\n\tvar baseKey = keyName[0];\n\tif (keyName[1] === 'b' || keyName[1] === '#') {\n\t\tbaseKey += keyName[1];\n\t\tkeyName = keyName.substr(2);\n\t} else\n\t\tkeyName = keyName.substr(1);\n\tvar index = keyIndex[baseKey] + multilineVars.localTranspose;\n\twhile (index < 0) index += 12;\n\tif (index > 11) index = index % 12;\n\tvar newKeyName = (keyName[0] === 'm' ? newKeyMinor[index] : newKey[index]);\n\tvar transposedKey = newKeyName + keyName;\n\tvar newKeySig = keys[transposedKey];\n\tif (newKeySig.length > 0 && newKeySig[0].acc === 'flat')\n\t\tmultilineVars.localTransposePreferFlats = true;\n\tvar distance = transposedKey.charCodeAt(0) - baseKey.charCodeAt(0);\n\tif (multilineVars.localTranspose > 0) {\n\t\tif (distance < 0)\n\t\t\tdistance += 7;\n\t\telse if (distance === 0) {\n\t\t\t// There's a funny thing that happens when the key changes only an accidental's distance, for instance, from Ab to A.\n\t\t\t// If the distance is positive (we are raising pitch), and the change is higher (that is, Ab -> A), then raise an octave.\n\t\t\t// This test is easier because we know the keys are not equal (or we wouldn't get this far), so if the base key is a flat key, then\n\t\t\t// the transposed key must be higher. Likewise, if the transposed key is sharp, then the base key must be lower. And one\n\t\t\t// of those two things must be true because they are not both natural.\n\t\t\tif (baseKey[1] === '#' ||  transposedKey[1] === 'b')\n\t\t\t\tdistance += 7;\n\t\t}\n\t} else if (multilineVars.localTranspose < 0) {\n\t\tif (distance > 0)\n\t\t\tdistance -= 7;\n\t\telse if (distance === 0) {\n\t\t\t// There's a funny thing that happens when the key changes only an accidental's distance, for instance, from Ab to A.\n\t\t\t// If the distance is negative (we are dropping pitch), and the change is lower (that is, A -> Ab), then drop an octave.\n\t\t\tif (baseKey[1] === 'b' ||  transposedKey[1] === '#')\n\t\t\t\tdistance -= 7;\n\t\t}\n\t}\n\n\tif (multilineVars.localTranspose > 0)\n\t\tmultilineVars.localTransposeVerticalMovement = distance + Math.floor(multilineVars.localTranspose / 12) * 7;\n\telse\n\t\tmultilineVars.localTransposeVerticalMovement = distance + Math.ceil(multilineVars.localTranspose / 12) * 7;\n\treturn { accidentals: newKeySig, root: newKeyName[0], acc: newKeyName.length > 1 ? newKeyName[1] : \"\" };\n};\n\nvar sharpChords = [ 'C', 'C♯', 'D', \"D♯\", 'E', 'F', \"F♯\", 'G', 'G♯', 'A', 'A♯', 'B'];\nvar flatChords = [ 'C', 'D♭', 'D', 'E♭', 'E', 'F', 'G♭', 'G', 'A♭', 'A', 'B♭', 'B'];\nvar sharpChordsFree = [ 'C', 'C#', 'D', \"D#\", 'E', 'F', \"F#\", 'G', 'G#', 'A', 'A#', 'B'];\nvar flatChordsFree = [ 'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\n\ntranspose.chordName = function(multilineVars, chord) {\n\tif (multilineVars.localTranspose && (multilineVars.localTranspose % 12 !== 0)) { // The chords are the same if it is an exact octave change.\n\t\tvar transposeFactor = multilineVars.localTranspose;\n\t\twhile (transposeFactor < 0) transposeFactor += 12;\n\t\tif (transposeFactor > 11) transposeFactor = transposeFactor % 12;\n\t\tif (multilineVars.freegchord) {\n\t\t\tchord = chord.replace(/Cb/g, \"`~11`\");\n\t\t\tchord = chord.replace(/Db/g, \"`~1`\");\n\t\t\tchord = chord.replace(/Eb/g, \"`~3`\");\n\t\t\tchord = chord.replace(/Fb/g, \"`~4`\");\n\t\t\tchord = chord.replace(/Gb/g, \"`~6`\");\n\t\t\tchord = chord.replace(/Ab/g, \"`~8`\");\n\t\t\tchord = chord.replace(/Bb/g, \"`~10`\");\n\t\t\tchord = chord.replace(/C#/g, \"`~1`\");\n\t\t\tchord = chord.replace(/D#/g, \"`~3`\");\n\t\t\tchord = chord.replace(/E#/g, \"`~5`\");\n\t\t\tchord = chord.replace(/F#/g, \"`~6`\");\n\t\t\tchord = chord.replace(/G#/g, \"`~8`\");\n\t\t\tchord = chord.replace(/A#/g, \"`~10`\");\n\t\t\tchord = chord.replace(/B#/g, \"`~0`\");\n\t\t} else {\n\t\t\tchord = chord.replace(/C♭/g, \"`~11`\");\n\t\t\tchord = chord.replace(/D♭/g, \"`~1`\");\n\t\t\tchord = chord.replace(/E♭/g, \"`~3`\");\n\t\t\tchord = chord.replace(/F♭/g, \"`~4`\");\n\t\t\tchord = chord.replace(/G♭/g, \"`~6`\");\n\t\t\tchord = chord.replace(/A♭/g, \"`~8`\");\n\t\t\tchord = chord.replace(/B♭/g, \"`~10`\");\n\t\t\tchord = chord.replace(/C♯/g, \"`~1`\");\n\t\t\tchord = chord.replace(/D♯/g, \"`~3`\");\n\t\t\tchord = chord.replace(/E♯/g, \"`~5`\");\n\t\t\tchord = chord.replace(/F♯/g, \"`~6`\");\n\t\t\tchord = chord.replace(/G♯/g, \"`~8`\");\n\t\t\tchord = chord.replace(/A♯/g, \"`~10`\");\n\t\t\tchord = chord.replace(/B♯/g, \"`~0`\");\n\t\t}\n\t\tchord = chord.replace(/C/g, \"`~0`\");\n\t\tchord = chord.replace(/D/g, \"`~2`\");\n\t\tchord = chord.replace(/E/g, \"`~4`\");\n\t\tchord = chord.replace(/F/g, \"`~5`\");\n\t\tchord = chord.replace(/G/g, \"`~7`\");\n\t\tchord = chord.replace(/A/g, \"`~9`\");\n\t\tchord = chord.replace(/B/g, \"`~11`\");\n\t\tvar arr = chord.split(\"`\");\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (arr[i][0] === '~') {\n\t\t\t\tvar chordNum = parseInt(arr[i].substr(1),10);\n\t\t\t\tchordNum += transposeFactor;\n\t\t\t\tif (chordNum > 11) chordNum -= 12;\n\t\t\t\tif (multilineVars.freegchord)\n\t\t\t\t\tarr[i] = multilineVars.localTransposePreferFlats ? flatChordsFree[chordNum] : sharpChordsFree[chordNum];\n\t\t\t\telse\n\t\t\t\t\tarr[i] = multilineVars.localTransposePreferFlats ? flatChords[chordNum] : sharpChords[chordNum];\n\t\t\t}\n\t\t}\n\t\tchord = arr.join(\"\");\n\t}\n\treturn chord;\n};\n\nvar pitchToLetter = [ 'c', 'd', 'e', 'f', 'g', 'a', 'b' ];\nfunction accidentalChange(origPitch, newPitch, accidental, origKeySig, newKeySig) {\n\tvar origPitchLetter = pitchToLetter[(origPitch + 49) % 7]; // Make sure it is a positive pitch before normalizing.\n\tvar origAccidental = 0;\n\tfor (var i = 0; i < origKeySig.length; i++) {\n\t\tif (origKeySig[i].note.toLowerCase() === origPitchLetter)\n\t\t\torigAccidental = accidentals[origKeySig[i].acc];\n\t}\n\n\tvar currentAccidental = accidentals[accidental];\n\tvar delta = currentAccidental - origAccidental;\n\n\tvar newPitchLetter = pitchToLetter[(newPitch + 49) % 7]; // Make sure it is a positive pitch before normalizing.\n\tvar newAccidental = 0;\n\tfor (var j = 0; j < newKeySig.accidentals.length; j++) {\n\t\tif (newKeySig.accidentals[j].note.toLowerCase() === newPitchLetter)\n\t\t\tnewAccidental = accidentals[newKeySig.accidentals[j].acc];\n\t}\n\tvar calcAccidental = delta + newAccidental;\n\tif (calcAccidental < -2) {\n\t\tnewPitch--;\n\t\tcalcAccidental += (newPitchLetter === 'c' || newPitchLetter === 'f') ? 1 : 2;\n\t}\n\tif (calcAccidental > 2) {\n\t\tnewPitch++;\n\t\tcalcAccidental -= (newPitchLetter === 'b' || newPitchLetter === 'e') ? 1 : 2;\n\t}\n\treturn [newPitch, calcAccidental];\n}\n\nvar accidentals = {\n\tdblflat: -2,\n\tflat: -1,\n\tnatural: 0,\n\tsharp: 1,\n\tdblsharp: 2\n};\nvar accidentals2 = {\n\t\"-2\": \"dblflat\",\n\t\"-1\": \"flat\",\n\t\"0\": \"natural\",\n\t\"1\": \"sharp\",\n\t\"2\": \"dblsharp\"\n};\ntranspose.note = function(multilineVars, el) {\n\t// the \"el\" that is passed in has el.accidental, and el.pitch. \"pitch\" is the vertical position (0=middle C)\n\t// localTranspose is the number of half steps\n\t// localTransposeVerticalMovement is the vertical distance to move.\n\tif (!multilineVars.localTranspose || multilineVars.clef.type === \"perc\")\n\t\treturn;\n\tvar origPitch = el.pitch;\n\tel.pitch = el.pitch + multilineVars.localTransposeVerticalMovement;\n\n\tif (el.accidental) {\n\t\tvar ret = accidentalChange(origPitch, el.pitch, el.accidental, multilineVars.globalTransposeOrigKeySig, multilineVars.targetKey);\n\t\tel.pitch = ret[0];\n\t\tel.accidental = accidentals2[ret[1]];\n\t}\n\n};\n\nmodule.exports = transpose;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/abcjs/src/parse/abc_transpose.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}}],"sources":{"node_modules/abcjs/src/parse/abc_transpose.js":"//    abc_transpose.js: Handles the automatic transposition of key signatures, chord symbols, and notes.\n\nvar transpose = {};\n\nvar keyIndex = {\n\t'C': 0,\n\t'C#': 1,\n\t'Db': 1,\n\t'D': 2,\n\t'D#': 3,\n\t'Eb': 3,\n\t'E': 4,\n\t'F': 5,\n\t'F#': 6,\n\t'Gb': 6,\n\t'G': 7,\n\t'G#': 8,\n\t'Ab': 8,\n\t'A': 9,\n\t'A#': 10,\n\t'Bb': 10,\n\t'B': 11\n};\nvar newKey = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'];\nvar newKeyMinor = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'];\n\ntranspose.keySignature = function(multilineVars, keys, keyName, root, acc, localTranspose) {\n\tif (multilineVars.clef.type === \"perc\")\n\t\treturn { accidentals: keys[keyName], root: root, acc: acc };\n\tif (!localTranspose) localTranspose = 0;\n\tmultilineVars.localTransposeVerticalMovement = 0;\n\tmultilineVars.localTransposePreferFlats = false;\n\tvar k = keys[keyName];\n\tif (!k) return multilineVars.key; // If the key isn't in the list, it is non-standard. We won't attempt to transpose it.\n\tmultilineVars.localTranspose = (multilineVars.globalTranspose ? multilineVars.globalTranspose : 0) + localTranspose;\n\n\tif (!multilineVars.localTranspose)\n\t\treturn { accidentals: k, root: root, acc: acc };\n\tmultilineVars.globalTransposeOrigKeySig = k;\n\tif (multilineVars.localTranspose % 12 === 0) {\n\t\tmultilineVars.localTransposeVerticalMovement = (multilineVars.localTranspose / 12) * 7;\n\t\treturn { accidentals: k, root: root, acc: acc };\n\t}\n\n\tvar baseKey = keyName[0];\n\tif (keyName[1] === 'b' || keyName[1] === '#') {\n\t\tbaseKey += keyName[1];\n\t\tkeyName = keyName.substr(2);\n\t} else\n\t\tkeyName = keyName.substr(1);\n\tvar index = keyIndex[baseKey] + multilineVars.localTranspose;\n\twhile (index < 0) index += 12;\n\tif (index > 11) index = index % 12;\n\tvar newKeyName = (keyName[0] === 'm' ? newKeyMinor[index] : newKey[index]);\n\tvar transposedKey = newKeyName + keyName;\n\tvar newKeySig = keys[transposedKey];\n\tif (newKeySig.length > 0 && newKeySig[0].acc === 'flat')\n\t\tmultilineVars.localTransposePreferFlats = true;\n\tvar distance = transposedKey.charCodeAt(0) - baseKey.charCodeAt(0);\n\tif (multilineVars.localTranspose > 0) {\n\t\tif (distance < 0)\n\t\t\tdistance += 7;\n\t\telse if (distance === 0) {\n\t\t\t// There's a funny thing that happens when the key changes only an accidental's distance, for instance, from Ab to A.\n\t\t\t// If the distance is positive (we are raising pitch), and the change is higher (that is, Ab -> A), then raise an octave.\n\t\t\t// This test is easier because we know the keys are not equal (or we wouldn't get this far), so if the base key is a flat key, then\n\t\t\t// the transposed key must be higher. Likewise, if the transposed key is sharp, then the base key must be lower. And one\n\t\t\t// of those two things must be true because they are not both natural.\n\t\t\tif (baseKey[1] === '#' ||  transposedKey[1] === 'b')\n\t\t\t\tdistance += 7;\n\t\t}\n\t} else if (multilineVars.localTranspose < 0) {\n\t\tif (distance > 0)\n\t\t\tdistance -= 7;\n\t\telse if (distance === 0) {\n\t\t\t// There's a funny thing that happens when the key changes only an accidental's distance, for instance, from Ab to A.\n\t\t\t// If the distance is negative (we are dropping pitch), and the change is lower (that is, A -> Ab), then drop an octave.\n\t\t\tif (baseKey[1] === 'b' ||  transposedKey[1] === '#')\n\t\t\t\tdistance -= 7;\n\t\t}\n\t}\n\n\tif (multilineVars.localTranspose > 0)\n\t\tmultilineVars.localTransposeVerticalMovement = distance + Math.floor(multilineVars.localTranspose / 12) * 7;\n\telse\n\t\tmultilineVars.localTransposeVerticalMovement = distance + Math.ceil(multilineVars.localTranspose / 12) * 7;\n\treturn { accidentals: newKeySig, root: newKeyName[0], acc: newKeyName.length > 1 ? newKeyName[1] : \"\" };\n};\n\nvar sharpChords = [ 'C', 'C♯', 'D', \"D♯\", 'E', 'F', \"F♯\", 'G', 'G♯', 'A', 'A♯', 'B'];\nvar flatChords = [ 'C', 'D♭', 'D', 'E♭', 'E', 'F', 'G♭', 'G', 'A♭', 'A', 'B♭', 'B'];\nvar sharpChordsFree = [ 'C', 'C#', 'D', \"D#\", 'E', 'F', \"F#\", 'G', 'G#', 'A', 'A#', 'B'];\nvar flatChordsFree = [ 'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\n\ntranspose.chordName = function(multilineVars, chord) {\n\tif (multilineVars.localTranspose && (multilineVars.localTranspose % 12 !== 0)) { // The chords are the same if it is an exact octave change.\n\t\tvar transposeFactor = multilineVars.localTranspose;\n\t\twhile (transposeFactor < 0) transposeFactor += 12;\n\t\tif (transposeFactor > 11) transposeFactor = transposeFactor % 12;\n\t\tif (multilineVars.freegchord) {\n\t\t\tchord = chord.replace(/Cb/g, \"`~11`\");\n\t\t\tchord = chord.replace(/Db/g, \"`~1`\");\n\t\t\tchord = chord.replace(/Eb/g, \"`~3`\");\n\t\t\tchord = chord.replace(/Fb/g, \"`~4`\");\n\t\t\tchord = chord.replace(/Gb/g, \"`~6`\");\n\t\t\tchord = chord.replace(/Ab/g, \"`~8`\");\n\t\t\tchord = chord.replace(/Bb/g, \"`~10`\");\n\t\t\tchord = chord.replace(/C#/g, \"`~1`\");\n\t\t\tchord = chord.replace(/D#/g, \"`~3`\");\n\t\t\tchord = chord.replace(/E#/g, \"`~5`\");\n\t\t\tchord = chord.replace(/F#/g, \"`~6`\");\n\t\t\tchord = chord.replace(/G#/g, \"`~8`\");\n\t\t\tchord = chord.replace(/A#/g, \"`~10`\");\n\t\t\tchord = chord.replace(/B#/g, \"`~0`\");\n\t\t} else {\n\t\t\tchord = chord.replace(/C♭/g, \"`~11`\");\n\t\t\tchord = chord.replace(/D♭/g, \"`~1`\");\n\t\t\tchord = chord.replace(/E♭/g, \"`~3`\");\n\t\t\tchord = chord.replace(/F♭/g, \"`~4`\");\n\t\t\tchord = chord.replace(/G♭/g, \"`~6`\");\n\t\t\tchord = chord.replace(/A♭/g, \"`~8`\");\n\t\t\tchord = chord.replace(/B♭/g, \"`~10`\");\n\t\t\tchord = chord.replace(/C♯/g, \"`~1`\");\n\t\t\tchord = chord.replace(/D♯/g, \"`~3`\");\n\t\t\tchord = chord.replace(/E♯/g, \"`~5`\");\n\t\t\tchord = chord.replace(/F♯/g, \"`~6`\");\n\t\t\tchord = chord.replace(/G♯/g, \"`~8`\");\n\t\t\tchord = chord.replace(/A♯/g, \"`~10`\");\n\t\t\tchord = chord.replace(/B♯/g, \"`~0`\");\n\t\t}\n\t\tchord = chord.replace(/C/g, \"`~0`\");\n\t\tchord = chord.replace(/D/g, \"`~2`\");\n\t\tchord = chord.replace(/E/g, \"`~4`\");\n\t\tchord = chord.replace(/F/g, \"`~5`\");\n\t\tchord = chord.replace(/G/g, \"`~7`\");\n\t\tchord = chord.replace(/A/g, \"`~9`\");\n\t\tchord = chord.replace(/B/g, \"`~11`\");\n\t\tvar arr = chord.split(\"`\");\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (arr[i][0] === '~') {\n\t\t\t\tvar chordNum = parseInt(arr[i].substr(1),10);\n\t\t\t\tchordNum += transposeFactor;\n\t\t\t\tif (chordNum > 11) chordNum -= 12;\n\t\t\t\tif (multilineVars.freegchord)\n\t\t\t\t\tarr[i] = multilineVars.localTransposePreferFlats ? flatChordsFree[chordNum] : sharpChordsFree[chordNum];\n\t\t\t\telse\n\t\t\t\t\tarr[i] = multilineVars.localTransposePreferFlats ? flatChords[chordNum] : sharpChords[chordNum];\n\t\t\t}\n\t\t}\n\t\tchord = arr.join(\"\");\n\t}\n\treturn chord;\n};\n\nvar pitchToLetter = [ 'c', 'd', 'e', 'f', 'g', 'a', 'b' ];\nfunction accidentalChange(origPitch, newPitch, accidental, origKeySig, newKeySig) {\n\tvar origPitchLetter = pitchToLetter[(origPitch + 49) % 7]; // Make sure it is a positive pitch before normalizing.\n\tvar origAccidental = 0;\n\tfor (var i = 0; i < origKeySig.length; i++) {\n\t\tif (origKeySig[i].note.toLowerCase() === origPitchLetter)\n\t\t\torigAccidental = accidentals[origKeySig[i].acc];\n\t}\n\n\tvar currentAccidental = accidentals[accidental];\n\tvar delta = currentAccidental - origAccidental;\n\n\tvar newPitchLetter = pitchToLetter[(newPitch + 49) % 7]; // Make sure it is a positive pitch before normalizing.\n\tvar newAccidental = 0;\n\tfor (var j = 0; j < newKeySig.accidentals.length; j++) {\n\t\tif (newKeySig.accidentals[j].note.toLowerCase() === newPitchLetter)\n\t\t\tnewAccidental = accidentals[newKeySig.accidentals[j].acc];\n\t}\n\tvar calcAccidental = delta + newAccidental;\n\tif (calcAccidental < -2) {\n\t\tnewPitch--;\n\t\tcalcAccidental += (newPitchLetter === 'c' || newPitchLetter === 'f') ? 1 : 2;\n\t}\n\tif (calcAccidental > 2) {\n\t\tnewPitch++;\n\t\tcalcAccidental -= (newPitchLetter === 'b' || newPitchLetter === 'e') ? 1 : 2;\n\t}\n\treturn [newPitch, calcAccidental];\n}\n\nvar accidentals = {\n\tdblflat: -2,\n\tflat: -1,\n\tnatural: 0,\n\tsharp: 1,\n\tdblsharp: 2\n};\nvar accidentals2 = {\n\t\"-2\": \"dblflat\",\n\t\"-1\": \"flat\",\n\t\"0\": \"natural\",\n\t\"1\": \"sharp\",\n\t\"2\": \"dblsharp\"\n};\ntranspose.note = function(multilineVars, el) {\n\t// the \"el\" that is passed in has el.accidental, and el.pitch. \"pitch\" is the vertical position (0=middle C)\n\t// localTranspose is the number of half steps\n\t// localTransposeVerticalMovement is the vertical distance to move.\n\tif (!multilineVars.localTranspose || multilineVars.clef.type === \"perc\")\n\t\treturn;\n\tvar origPitch = el.pitch;\n\tel.pitch = el.pitch + multilineVars.localTransposeVerticalMovement;\n\n\tif (el.accidental) {\n\t\tvar ret = accidentalChange(origPitch, el.pitch, el.accidental, multilineVars.globalTransposeOrigKeySig, multilineVars.targetKey);\n\t\tel.pitch = ret[0];\n\t\tel.accidental = accidentals2[ret[1]];\n\t}\n\n};\n\nmodule.exports = transpose;\n"},"lineCount":217}},"error":null,"hash":"f034298897ddc7884dfcd2a0fcb0a8ca","cacheData":{"env":{}}}