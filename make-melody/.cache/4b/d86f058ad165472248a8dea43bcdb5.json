{"id":"node_modules/abcjs/src/parse/tune-builder.js","dependencies":[{"name":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\package.json","includedInParent":true,"mtime":1649031657578},{"name":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\package.json","includedInParent":true,"mtime":1649031653004},{"name":"../parse/abc_parse_key_voice","loc":{"line":1,"column":28,"index":28},"parent":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\src\\parse\\tune-builder.js","resolved":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\src\\parse\\abc_parse_key_voice.js"},{"name":"../parse/abc_common","loc":{"line":2,"column":26,"index":87},"parent":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\src\\parse\\tune-builder.js","resolved":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\src\\parse\\abc_common.js"}],"generated":{"js":"var parseKeyVoice = require('../parse/abc_parse_key_voice');\nvar parseCommon = require('../parse/abc_common');\n\nvar TuneBuilder = function(tune) {\n\tvar self = this;\n\n\tthis.setVisualTranspose = function(visualTranspose) {\n\t\tif (visualTranspose)\n\t\t\ttune.visualTranspose = visualTranspose;\n\t};\n\n\tthis.resolveOverlays = function() {\n\t\tvar madeChanges = false;\n\t\tvar durationsPerLines = [];\n\t\tfor (var i = 0; i < tune.lines.length; i++) {\n\t\t\tvar line = tune.lines[i];\n\t\t\tif (line.staff) {\n\t\t\t\tfor (var j = 0; j < line.staff.length; j++) {\n\t\t\t\t\tvar staff = line.staff[j];\n\t\t\t\t\tvar overlayVoice = [];\n\t\t\t\t\tfor (var k = 0; k < staff.voices.length; k++) {\n\t\t\t\t\t\tvar voice = staff.voices[k];\n\t\t\t\t\t\toverlayVoice.push({ hasOverlay: false, voice: [], snip: []});\n\t\t\t\t\t\tdurationsPerLines[i] = 0;\n\t\t\t\t\t\tvar durationThisBar = 0;\n\t\t\t\t\t\tvar inOverlay = false;\n\t\t\t\t\t\tvar overlayDuration = 0;\n\t\t\t\t\t\tvar snipStart = -1;\n\t\t\t\t\t\tfor (var kk = 0; kk < voice.length; kk++) {\n\t\t\t\t\t\t\tvar event = voice[kk];\n\t\t\t\t\t\t\tif (event.el_type === \"overlay\" && !inOverlay) {\n\t\t\t\t\t\t\t\tmadeChanges = true;\n\t\t\t\t\t\t\t\tinOverlay = true;\n\t\t\t\t\t\t\t\tsnipStart = kk;\n\t\t\t\t\t\t\t\toverlayVoice[k].hasOverlay = true;\n\t\t\t\t\t\t\t\tif (overlayDuration === 0)\n\t\t\t\t\t\t\t\t\toverlayDuration = durationsPerLines[i];\n\t\t\t\t\t\t\t\t// If this isn't the first line, we also need invisible rests on the previous lines.\n\t\t\t\t\t\t\t\t// So, if the next voice doesn't appear in a previous line, create it\n\t\t\t\t\t\t\t\tfor (var ii = 0; ii < i; ii++) {\n\t\t\t\t\t\t\t\t\tif (durationsPerLines[ii] && tune.lines[ii].staff && staff.voices.length >= tune.lines[ii].staff[0].voices.length) {\n\t\t\t\t\t\t\t\t\t\ttune.lines[ii].staff[0].voices.push([{\n\t\t\t\t\t\t\t\t\t\t\tel_type: \"note\",\n\t\t\t\t\t\t\t\t\t\t\tduration: durationsPerLines[ii],\n\t\t\t\t\t\t\t\t\t\t\trest: {type: \"invisible\"},\n\t\t\t\t\t\t\t\t\t\t\tstartChar: event.startChar,\n\t\t\t\t\t\t\t\t\t\t\tendChar: event.endChar\n\t\t\t\t\t\t\t\t\t\t}]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (event.el_type === \"bar\") {\n\t\t\t\t\t\t\t\tif (inOverlay) {\n\t\t\t\t\t\t\t\t\t// delete the overlay events from this array without messing up this loop.\n\t\t\t\t\t\t\t\t\tinOverlay = false;\n\t\t\t\t\t\t\t\t\toverlayVoice[k].snip.push({ start: snipStart, len: kk - snipStart});\n\t\t\t\t\t\t\t\t\toverlayVoice[k].voice.push(event); // Also end the overlay with the barline.\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// This keeps the voices lined up: if the overlay isn't in the first measure then we need a bunch of invisible rests.\n\t\t\t\t\t\t\t\t\tif (durationThisBar > 0)\n\t\t\t\t\t\t\t\t\t\toverlayVoice[k].voice.push({ el_type: \"note\", duration: durationThisBar, rest: {type: \"invisible\"}, startChar: event.startChar, endChar: event.endChar });\n\t\t\t\t\t\t\t\t\toverlayVoice[k].voice.push(event);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdurationThisBar = 0;\n\t\t\t\t\t\t\t} else if (event.el_type === \"note\") {\n\t\t\t\t\t\t\t\tif (inOverlay) {\n\t\t\t\t\t\t\t\t\toverlayVoice[k].voice.push(event);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdurationThisBar += event.duration;\n\t\t\t\t\t\t\t\t\tdurationsPerLines[i] += event.duration;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (event.el_type === \"scale\" || event.el_type === \"stem\" || event.el_type === \"overlay\" || event.el_type === \"style\" || event.el_type === \"transpose\") {\n\t\t\t\t\t\t\t\t// These types of events are duplicated on the overlay layer.\n\t\t\t\t\t\t\t\toverlayVoice[k].voice.push(event);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (overlayVoice[k].hasOverlay && overlayVoice[k].snip.length === 0) {\n\t\t\t\t\t\t\t// there was no closing bar, so we didn't set the snip amount.\n\t\t\t\t\t\t\toverlayVoice[k].snip.push({ start: snipStart, len: voice.length - snipStart});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (k = 0; k < overlayVoice.length; k++) {\n\t\t\t\t\t\tvar ov = overlayVoice[k];\n\t\t\t\t\t\tif (ov.hasOverlay) {\n\t\t\t\t\t\t\tov.voice.splice(0, 0, {el_type: \"stem\", direction: \"down\"})\n\t\t\t\t\t\t\tstaff.voices.push(ov.voice);\n\t\t\t\t\t\t\tfor (var kkk = ov.snip.length-1; kkk >= 0; kkk--) {\n\t\t\t\t\t\t\t\tvar snip = ov.snip[kkk];\n\t\t\t\t\t\t\t\tstaff.voices[k].splice(snip.start, snip.len);\n\t\t\t\t\t\t\t\tstaff.voices[k].splice(snip.start+1, 0, { el_type: \"stem\", direction: \"auto\" });\n\t\t\t\t\t\t\t\tvar indexOfLastBar = findLastBar(staff.voices[k], snip.start);\n\t\t\t\t\t\t\t\tstaff.voices[k].splice(indexOfLastBar, 0, { el_type: \"stem\", direction: \"up\" });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// remove ending marks from the overlay voice so they are not repeated\n\t\t\t\t\t\t\tfor (kkk = 0; kkk < staff.voices[staff.voices.length-1].length; kkk++) {\n\t\t\t\t\t\t\t\tstaff.voices[staff.voices.length-1][kkk] = parseCommon.clone(staff.voices[staff.voices.length-1][kkk]);\n\t\t\t\t\t\t\t\tvar el = staff.voices[staff.voices.length-1][kkk];\n\t\t\t\t\t\t\t\tif (el.el_type === 'bar' && el.startEnding) {\n\t\t\t\t\t\t\t\t\tdelete el.startEnding;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (el.el_type === 'bar' && el.endEnding)\n\t\t\t\t\t\t\t\t\tdelete el.endEnding;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn madeChanges;\n\t};\n\n\tfunction findLastBar(voice, start) {\n\t\tfor (var i = start-1; i > 0 && voice[i].el_type !== \"bar\"; i--) {\n\n\t\t}\n\t\treturn i;\n\t}\n\tfunction fixTitles(lines) {\n\t\t// We might have name and subname defined. We now know what line everything is on, so we can determine which to use.\n\t\tvar firstMusicLine = true;\n\t\tfor (var i = 0; i < lines.length; i++) {\n\t\t\tvar line = lines[i];\n\t\t\tif (line.staff) {\n\t\t\t\tfor (var j = 0; j < line.staff.length; j++) {\n\t\t\t\t\tvar staff = line.staff[j];\n\t\t\t\t\tif (staff.title) {\n\t\t\t\t\t\tvar hasATitle = false;\n\t\t\t\t\t\tfor (var k = 0; k < staff.title.length; k++) {\n\t\t\t\t\t\t\tif (staff.title[k]) {\n\t\t\t\t\t\t\t\tstaff.title[k] = (firstMusicLine) ? staff.title[k].name : staff.title[k].subname;\n\t\t\t\t\t\t\t\tif (staff.title[k])\n\t\t\t\t\t\t\t\t\thasATitle = true;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tstaff.title[k] = '';\n\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\tstaff.title[k] = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!hasATitle)\n\t\t\t\t\t\t\tdelete staff.title;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfirstMusicLine = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.cleanUp = function(barsperstaff, staffnonote, currSlur) {\n\t\tthis.closeLine();\t// Close the last line.\n\t\tdelete tune.runningFonts;\n\n\t\t// If the tempo was created with a string like \"Allegro\", then the duration of a beat needs to be set at the last moment, when it is most likely known.\n\t\tif (tune.metaText.tempo && tune.metaText.tempo.bpm && !tune.metaText.tempo.duration)\n\t\t\ttune.metaText.tempo.duration = [ tune.getBeatLength() ];\n\n\t\t// Remove any blank lines\n\t\tvar anyDeleted = false;\n\t\tvar i, s, v;\n\t\tfor (i = 0; i < tune.lines.length; i++) {\n\t\t\tif (tune.lines[i].staff !== undefined) {\n\t\t\t\tvar hasAny = false;\n\t\t\t\tfor (s = 0; s < tune.lines[i].staff.length; s++) {\n\t\t\t\t\tif (tune.lines[i].staff[s] === undefined) {\n\t\t\t\t\t\tanyDeleted = true;\n\t\t\t\t\t\ttune.lines[i].staff[s] = null;\n\t\t\t\t\t\t//tune.lines[i].staff[s] = { voices: []};\t// TODO-PER: There was a part missing in the abc music. How should we recover?\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (v = 0; v < tune.lines[i].staff[s].voices.length; v++) {\n\t\t\t\t\t\t\tif (tune.lines[i].staff[s].voices[v] === undefined)\n\t\t\t\t\t\t\t\ttune.lines[i].staff[s].voices[v] = [];\t// TODO-PER: There was a part missing in the abc music. How should we recover?\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tif (this.containsNotes(tune.lines[i].staff[s].voices[v])) hasAny = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!hasAny) {\n\t\t\t\t\ttune.lines[i] = null;\n\t\t\t\t\tanyDeleted = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (anyDeleted) {\n\t\t\ttune.lines = parseCommon.compact(tune.lines);\n\t\t\tparseCommon.each(tune.lines, function(line) {\n\t\t\t\tif (line.staff)\n\t\t\t\t\tline.staff = parseCommon.compact(line.staff);\n\t\t\t});\n\t\t}\n\n\t\t// if we exceeded the number of bars allowed on a line, then force a new line\n\t\tif (barsperstaff) {\n\t\t\twhile (wrapMusicLines(tune.lines, barsperstaff)) {\n\t\t\t\t// This will keep wrapping until the end of the piece.\n\t\t\t}\n\t\t}\n\n\t\t// If we were passed staffnonote, then we want to get rid of all staffs that contain only rests.\n\t\tif (staffnonote) {\n\t\t\tanyDeleted = false;\n\t\t\tfor (i = 0; i < tune.lines.length; i++) {\n\t\t\t\tif (tune.lines[i].staff !== undefined) {\n\t\t\t\t\tfor (s = 0; s < tune.lines[i].staff.length; s++) {\n\t\t\t\t\t\tvar keepThis = false;\n\t\t\t\t\t\tfor (v = 0; v < tune.lines[i].staff[s].voices.length; v++) {\n\t\t\t\t\t\t\tif (this.containsNotesStrict(tune.lines[i].staff[s].voices[v])) {\n\t\t\t\t\t\t\t\tkeepThis = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!keepThis) {\n\t\t\t\t\t\t\tanyDeleted = true;\n\t\t\t\t\t\t\ttune.lines[i].staff[s] = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (anyDeleted) {\n\t\t\t\tparseCommon.each(tune.lines, function(line) {\n\t\t\t\t\tif (line.staff)\n\t\t\t\t\t\tline.staff = parseCommon.compact(line.staff);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfixTitles(tune.lines);\n\n\t\t// Remove the temporary working variables\n\t\tfor (i = 0; i < tune.lines.length; i++) {\n\t\t\tif (tune.lines[i].staff) {\n\t\t\t\tfor (s = 0; s < tune.lines[i].staff.length; s++)\n\t\t\t\t\tdelete tune.lines[i].staff[s].workingClef;\n\t\t\t}\n\t\t}\n\n\t\t// If there are overlays, create new voices for them.\n\t\twhile (this.resolveOverlays()) {\n\t\t\t// keep resolving overlays as long as any are found.\n\t\t}\n\n\t\tfunction cleanUpSlursInLine(line, staffNum, voiceNum) {\n\t\t\tif (!currSlur[staffNum])\n\t\t\t\tcurrSlur[staffNum] = [];\n\t\t\tif (!currSlur[staffNum][voiceNum])\n\t\t\t\tcurrSlur[staffNum][voiceNum] = [];\n\t\t\tvar x;\n//\t\t\tvar lyr = null;\t// TODO-PER: debugging.\n\n\t\t\tvar addEndSlur = function(obj, num, chordPos) {\n\t\t\t\tif (currSlur[staffNum][voiceNum][chordPos] === undefined) {\n\t\t\t\t\t// There isn't an exact match for note position, but we'll take any other open slur.\n\t\t\t\t\tfor (x = 0; x < currSlur[staffNum][voiceNum].length; x++) {\n\t\t\t\t\t\tif (currSlur[staffNum][voiceNum][x] !== undefined) {\n\t\t\t\t\t\t\tchordPos = x;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (currSlur[staffNum][voiceNum][chordPos] === undefined) {\n\t\t\t\t\t\tvar offNum = chordPos*100+1;\n\t\t\t\t\t\tparseCommon.each(obj.endSlur, function(x) { if (offNum === x) --offNum; });\n\t\t\t\t\t\tcurrSlur[staffNum][voiceNum][chordPos] = [offNum];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar slurNum;\n\t\t\t\tfor (var i = 0; i < num; i++) {\n\t\t\t\t\tslurNum = currSlur[staffNum][voiceNum][chordPos].pop();\n\t\t\t\t\tobj.endSlur.push(slurNum);\n//\t\t\t\t\tlyr.syllable += '<' + slurNum;\t// TODO-PER: debugging\n\t\t\t\t}\n\t\t\t\tif (currSlur[staffNum][voiceNum][chordPos].length === 0)\n\t\t\t\t\tdelete currSlur[staffNum][voiceNum][chordPos];\n\t\t\t\treturn slurNum;\n\t\t\t};\n\n\t\t\tvar addStartSlur = function(obj, num, chordPos, usedNums) {\n\t\t\t\tobj.startSlur = [];\n\t\t\t\tif (currSlur[staffNum][voiceNum][chordPos] === undefined) {\n\t\t\t\t\tcurrSlur[staffNum][voiceNum][chordPos] = [];\n\t\t\t\t}\n\t\t\t\tvar nextNum = chordPos*100+1;\n\t\t\t\tfor (var i = 0; i < num; i++) {\n\t\t\t\t\tif (usedNums) {\n\t\t\t\t\t\tparseCommon.each(usedNums, function(x) { if (nextNum === x) ++nextNum; });\n\t\t\t\t\t\tparseCommon.each(usedNums, function(x) { if (nextNum === x) ++nextNum; });\n\t\t\t\t\t\tparseCommon.each(usedNums, function(x) { if (nextNum === x) ++nextNum; });\n\t\t\t\t\t}\n\t\t\t\t\tparseCommon.each(currSlur[staffNum][voiceNum][chordPos], function(x) { if (nextNum === x) ++nextNum; });\n\t\t\t\t\tparseCommon.each(currSlur[staffNum][voiceNum][chordPos], function(x) { if (nextNum === x) ++nextNum; });\n\n\t\t\t\t\tcurrSlur[staffNum][voiceNum][chordPos].push(nextNum);\n\t\t\t\t\tobj.startSlur.push({ label: nextNum });\n\t\t\t\t\tif (obj.dottedSlur) {\n\t\t\t\t\t\tobj.startSlur[obj.startSlur.length-1].style = 'dotted';\n\t\t\t\t\t\tdelete obj.dottedSlur;\n\t\t\t\t\t}\n//\t\t\t\t\tlyr.syllable += ' ' + nextNum + '>';\t// TODO-PER:debugging\n\t\t\t\t\tnextNum++;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfor (var i = 0; i < line.length; i++) {\n\t\t\t\tvar el = line[i];\n//\t\t\t\tif (el.lyric === undefined)\t// TODO-PER: debugging\n//\t\t\t\t\tel.lyric = [{ divider: '-' }];\t// TODO-PER: debugging\n//\t\t\t\tlyr = el.lyric[0];\t// TODO-PER: debugging\n//\t\t\t\tlyr.syllable = '';\t// TODO-PER: debugging\n\t\t\t\tif (el.el_type === 'note') {\n\t\t\t\t\tif (el.gracenotes) {\n\t\t\t\t\t\tfor (var g = 0; g < el.gracenotes.length; g++) {\n\t\t\t\t\t\t\tif (el.gracenotes[g].endSlur) {\n\t\t\t\t\t\t\t\tvar gg = el.gracenotes[g].endSlur;\n\t\t\t\t\t\t\t\tel.gracenotes[g].endSlur = [];\n\t\t\t\t\t\t\t\tfor (var ggg = 0; ggg < gg; ggg++)\n\t\t\t\t\t\t\t\t\taddEndSlur(el.gracenotes[g], 1, 20);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (el.gracenotes[g].startSlur) {\n\t\t\t\t\t\t\t\tx = el.gracenotes[g].startSlur;\n\t\t\t\t\t\t\t\taddStartSlur(el.gracenotes[g], x, 20);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (el.endSlur) {\n\t\t\t\t\t\tx = el.endSlur;\n\t\t\t\t\t\tel.endSlur = [];\n\t\t\t\t\t\taddEndSlur(el, x, 0);\n\t\t\t\t\t}\n\t\t\t\t\tif (el.startSlur) {\n\t\t\t\t\t\tx = el.startSlur;\n\t\t\t\t\t\taddStartSlur(el, x, 0);\n\t\t\t\t\t}\n\t\t\t\t\tif (el.pitches) {\n\t\t\t\t\t\tvar usedNums = [];\n\t\t\t\t\t\tfor (var p = 0; p < el.pitches.length; p++) {\n\t\t\t\t\t\t\tif (el.pitches[p].endSlur) {\n\t\t\t\t\t\t\t\tvar k = el.pitches[p].endSlur;\n\t\t\t\t\t\t\t\tel.pitches[p].endSlur = [];\n\t\t\t\t\t\t\t\tfor (var j = 0; j < k; j++) {\n\t\t\t\t\t\t\t\t\tvar slurNum = addEndSlur(el.pitches[p], 1, p+1);\n\t\t\t\t\t\t\t\t\tusedNums.push(slurNum);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (p = 0; p < el.pitches.length; p++) {\n\t\t\t\t\t\t\tif (el.pitches[p].startSlur) {\n\t\t\t\t\t\t\t\tx = el.pitches[p].startSlur;\n\t\t\t\t\t\t\t\taddStartSlur(el.pitches[p], x, p+1, usedNums);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Correct for the weird gracenote case where ({g}a) should match.\n\t\t\t\t\t\t// The end slur was already assigned to the note, and needs to be moved to the first note of the graces.\n\t\t\t\t\t\tif (el.gracenotes && el.pitches[0].endSlur && el.pitches[0].endSlur[0] === 100 && el.pitches[0].startSlur) {\n\t\t\t\t\t\t\tif (el.gracenotes[0].endSlur)\n\t\t\t\t\t\t\t\tel.gracenotes[0].endSlur.push(el.pitches[0].startSlur[0].label);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tel.gracenotes[0].endSlur = [el.pitches[0].startSlur[0].label];\n\t\t\t\t\t\t\tif (el.pitches[0].endSlur.length === 1)\n\t\t\t\t\t\t\t\tdelete el.pitches[0].endSlur;\n\t\t\t\t\t\t\telse if (el.pitches[0].endSlur[0] === 100)\n\t\t\t\t\t\t\t\tel.pitches[0].endSlur.shift();\n\t\t\t\t\t\t\telse if (el.pitches[0].endSlur[el.pitches[0].endSlur.length-1] === 100)\n\t\t\t\t\t\t\t\tel.pitches[0].endSlur.pop();\n\t\t\t\t\t\t\tif (currSlur[staffNum][voiceNum][1].length === 1)\n\t\t\t\t\t\t\t\tdelete currSlur[staffNum][voiceNum][1];\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tcurrSlur[staffNum][voiceNum][1].pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO-PER: This could be done faster as we go instead of as the last step.\n\t\tfunction fixClefPlacement(el) {\n\t\t\tparseKeyVoice.fixClef(el);\n\t\t}\n\n\t\tfunction wrapMusicLines(lines, barsperstaff) {\n\t\t\tfor (i = 0; i < lines.length; i++) {\n\t\t\t\tif (lines[i].staff !== undefined) {\n\t\t\t\t\tfor (s = 0; s < lines[i].staff.length; s++) {\n\t\t\t\t\t\tvar permanentItems = [];\n\t\t\t\t\t\tfor (v = 0; v < lines[i].staff[s].voices.length; v++) {\n\t\t\t\t\t\t\tvar voice = lines[i].staff[s].voices[v];\n\t\t\t\t\t\t\tvar barNumThisLine = 0;\n\t\t\t\t\t\t\tfor (var n = 0; n < voice.length; n++) {\n\t\t\t\t\t\t\t\tif (voice[n].el_type === 'bar') {\n\t\t\t\t\t\t\t\t\tbarNumThisLine++;\n\t\t\t\t\t\t\t\t\tif (barNumThisLine >= barsperstaff) {\n\t\t\t\t\t\t\t\t\t\t// push everything else to the next line, if there is anything else,\n\t\t\t\t\t\t\t\t\t\t// and there is a next line. If there isn't a next line, create one.\n\t\t\t\t\t\t\t\t\t\tif (n < voice.length - 1) {\n\t\t\t\t\t\t\t\t\t\t\tvar nextLine = getNextMusicLine(lines, i);\n\t\t\t\t\t\t\t\t\t\t\tif (!nextLine) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar cp = JSON.parse(JSON.stringify(lines[i]));\n\t\t\t\t\t\t\t\t\t\t\t\tlines.push(parseCommon.clone(cp));\n\t\t\t\t\t\t\t\t\t\t\t\tnextLine = lines[lines.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\tfor (var ss = 0; ss < nextLine.staff.length; ss++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (var vv = 0; vv < nextLine.staff[ss].voices.length; vv++)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnextLine.staff[ss].voices[vv] = [];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tvar startElement = n + 1;\n\t\t\t\t\t\t\t\t\t\t\tvar section = lines[i].staff[s].voices[v].slice(startElement);\n\t\t\t\t\t\t\t\t\t\t\tlines[i].staff[s].voices[v] = lines[i].staff[s].voices[v].slice(0, startElement);\n\t\t\t\t\t\t\t\t\t\t\tnextLine.staff[s].voices[v] = permanentItems.concat(section.concat(nextLine.staff[s].voices[v]));\n\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (!voice[n].duration) {\n\t\t\t\t\t\t\t\t\tpermanentItems.push(voice[n]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction getNextMusicLine(lines, currentLine) {\n\t\t\tcurrentLine++;\n\t\t\twhile (lines.length > currentLine) {\n\t\t\t\tif (lines[currentLine].staff)\n\t\t\t\t\treturn lines[currentLine];\n\t\t\t\tcurrentLine++;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (tune.lineNum = 0; tune.lineNum < tune.lines.length; tune.lineNum++) {\n\t\t\tvar staff = tune.lines[tune.lineNum].staff;\n\t\t\tif (staff) {\n\t\t\t\tfor (tune.staffNum = 0; tune.staffNum < staff.length; tune.staffNum++) {\n\t\t\t\t\tif (staff[tune.staffNum].clef)\n\t\t\t\t\t\tfixClefPlacement(staff[tune.staffNum].clef);\n\t\t\t\t\tfor (tune.voiceNum = 0; tune.voiceNum < staff[tune.staffNum].voices.length; tune.voiceNum++) {\n\t\t\t\t\t\tvar voice = staff[tune.staffNum].voices[tune.voiceNum];\n\t\t\t\t\t\tcleanUpSlursInLine(voice, tune.staffNum, tune.voiceNum);\n\t\t\t\t\t\tfor (var j = 0; j < voice.length; j++) {\n\t\t\t\t\t\t\tif (voice[j].el_type === 'clef')\n\t\t\t\t\t\t\t\tfixClefPlacement(voice[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (voice.length > 0 && voice[voice.length-1].barNumber) {\n\t\t\t\t\t\t\t// Don't hang a bar number on the last bar line: it should go on the next line.\n\t\t\t\t\t\t\tvar nextLine = getNextMusicLine(tune.lines, tune.lineNum);\n\t\t\t\t\t\t\tif (nextLine)\n\t\t\t\t\t\t\t\tnextLine.staff[0].barNumber = voice[voice.length-1].barNumber;\n\t\t\t\t\t\t\tdelete voice[voice.length-1].barNumber;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remove temporary variables that the outside doesn't need to know about\n\t\tdelete tune.staffNum;\n\t\tdelete tune.voiceNum;\n\t\tdelete tune.lineNum;\n\t\tdelete tune.potentialStartBeam;\n\t\tdelete tune.potentialEndBeam;\n\t\tdelete tune.vskipPending;\n\n\t\treturn currSlur;\n\t};\n\n\ttune.reset();\n\n\tthis.getLastNote = function() {\n\t\tif (tune.lines[tune.lineNum] && tune.lines[tune.lineNum].staff && tune.lines[tune.lineNum].staff[tune.staffNum] &&\n\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum]) {\n\t\t\tfor (var i = tune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum].length-1; i >= 0; i--) {\n\t\t\t\tvar el = tune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum][i];\n\t\t\t\tif (el.el_type === 'note') {\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tthis.addTieToLastNote = function(dottedTie) {\n\t\t// TODO-PER: if this is a chord, which note?\n\t\tvar el = this.getLastNote();\n\t\tif (el && el.pitches && el.pitches.length > 0) {\n\t\t\tel.pitches[0].startTie = {};\n\t\t\tif (dottedTie)\n\t\t\t\tel.pitches[0].startTie.style = 'dotted';\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tthis.getDuration = function(el) {\n\t\tif (el.duration) return el.duration;\n\t\t//if (el.pitches && el.pitches.length > 0) return el.pitches[0].duration;\n\t\treturn 0;\n\t};\n\n\tthis.closeLine = function() {\n\t\tif (tune.potentialStartBeam && tune.potentialEndBeam) {\n\t\t\ttune.potentialStartBeam.startBeam = true;\n\t\t\ttune.potentialEndBeam.endBeam = true;\n\t\t}\n\t\tdelete tune.potentialStartBeam;\n\t\tdelete tune.potentialEndBeam;\n\t};\n\n\tthis.appendElement = function(type, startChar, endChar, hashParams)\n\t{\n\t\tvar This = tune;\n\t\tvar pushNote = function(hp) {\n\t\t\tvar currStaff = This.lines[This.lineNum].staff[This.staffNum];\n\t\t\tif (!currStaff) {\n\t\t\t\t// TODO-PER: This prevents a crash, but it drops the element. Need to figure out how to start a new line, or delay adding this.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (hp.pitches !== undefined) {\n\t\t\t\tvar mid = currStaff.workingClef.verticalPos;\n\t\t\t\tparseCommon.each(hp.pitches, function(p) { p.verticalPos = p.pitch - mid; });\n\t\t\t}\n\t\t\tif (hp.gracenotes !== undefined) {\n\t\t\t\tvar mid2 = currStaff.workingClef.verticalPos;\n\t\t\t\tparseCommon.each(hp.gracenotes, function(p) { p.verticalPos = p.pitch - mid2; });\n\t\t\t}\n\t\t\tcurrStaff.voices[This.voiceNum].push(hp);\n\t\t};\n\t\thashParams.el_type = type;\n\t\tif (startChar !== null)\n\t\t\thashParams.startChar = startChar;\n\t\tif (endChar !== null)\n\t\t\thashParams.endChar = endChar;\n\t\tvar endBeamHere = function() {\n\t\t\tThis.potentialStartBeam.startBeam = true;\n\t\t\thashParams.endBeam = true;\n\t\t\tdelete This.potentialStartBeam;\n\t\t\tdelete This.potentialEndBeam;\n\t\t};\n\t\tvar endBeamLast = function() {\n\t\t\tif (This.potentialStartBeam !== undefined && This.potentialEndBeam !== undefined) {\t// Do we have a set of notes to beam?\n\t\t\t\tThis.potentialStartBeam.startBeam = true;\n\t\t\t\tThis.potentialEndBeam.endBeam = true;\n\t\t\t}\n\t\t\tdelete This.potentialStartBeam;\n\t\t\tdelete This.potentialEndBeam;\n\t\t};\n\t\tif (type === 'note') { // && (hashParams.rest !== undefined || hashParams.end_beam === undefined)) {\n\t\t\t// Now, add the startBeam and endBeam where it is needed.\n\t\t\t// end_beam is already set on the places where there is a forced end_beam. We'll remove that here after using that info.\n\t\t\t// this.potentialStartBeam either points to null or the start beam.\n\t\t\t// this.potentialEndBeam either points to null or the start beam.\n\t\t\t// If we have a beam break (note is longer than a quarter, or an end_beam is on this element), then set the beam if we have one.\n\t\t\t// reset the variables for the next notes.\n\t\t\tvar dur = self.getDuration(hashParams);\n\t\t\tif (dur >= 0.25) {\t// The beam ends on the note before this.\n\t\t\t\tendBeamLast();\n\t\t\t} else if (hashParams.force_end_beam_last && This.potentialStartBeam !== undefined) {\n\t\t\t\tendBeamLast();\n\t\t\t} else if (hashParams.end_beam && This.potentialStartBeam !== undefined) {\t// the beam is forced to end on this note, probably because of a space in the ABC\n\t\t\t\tif (hashParams.rest === undefined)\n\t\t\t\t\tendBeamHere();\n\t\t\t\telse\n\t\t\t\t\tendBeamLast();\n\t\t\t} else if (hashParams.rest === undefined) {\t// this a short note and we aren't about to end the beam\n\t\t\t\tif (This.potentialStartBeam === undefined) {\t// We aren't collecting notes for a beam, so start here.\n\t\t\t\t\tif (!hashParams.end_beam) {\n\t\t\t\t\t\tThis.potentialStartBeam = hashParams;\n\t\t\t\t\t\tdelete This.potentialEndBeam;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tThis.potentialEndBeam = hashParams;\t// Continue the beaming, look for the end next note.\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//  end_beam goes on rests and notes which precede rests _except_ when a rest (or set of adjacent rests) has normal notes on both sides (no spaces)\n//\t\t\tif (hashParams.rest !== undefined)\n//\t\t\t{\n//\t\t\t\thashParams.end_beam = true;\n//\t\t\t\tvar el2 = this.getLastNote();\n//\t\t\t\tif (el2) el2.end_beam = true;\n//\t\t\t\t// TODO-PER: implement exception mentioned in the comment.\n//\t\t\t}\n\t\t} else {\t// It's not a note, so there definitely isn't beaming after it.\n\t\t\tendBeamLast();\n\t\t}\n\t\tdelete hashParams.end_beam;\t// We don't want this temporary variable hanging around.\n\t\tdelete hashParams.force_end_beam_last;\t// We don't want this temporary variable hanging around.\n\t\tpushNote(hashParams);\n\t};\n\n\tthis.appendStartingElement = function(type, startChar, endChar, hashParams2)\n\t{\n\t\t// If we're in the middle of beaming, then end the beam.\n\t\tthis.closeLine();\n\n\t\t// We only ever want implied naturals the first time.\n\t\tvar impliedNaturals;\n\t\tif (type === 'key') {\n\t\t\timpliedNaturals = hashParams2.impliedNaturals;\n\t\t\tdelete hashParams2.impliedNaturals;\n\t\t\tdelete hashParams2.explicitAccidentals;\n\t\t}\n\n\t\t// Clone the object because it will be sticking around for the next line and we don't want the extra fields in it.\n\t\tvar hashParams = parseCommon.clone(hashParams2);\n\n\t\tif (tune.lines[tune.lineNum] && tune.lines[tune.lineNum].staff) { // be sure that we are on a music type line before doing the following.\n\t\t\t// If tune is the first item in tune staff, then we might have to initialize the staff, first.\n\t\t\tif (tune.lines[tune.lineNum].staff.length <= tune.staffNum) {\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum] = {};\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].clef = parseCommon.clone(tune.lines[tune.lineNum].staff[0].clef);\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].key = parseCommon.clone(tune.lines[tune.lineNum].staff[0].key);\n\t\t\t\tif (tune.lines[tune.lineNum].staff[0].meter)\n\t\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].meter = parseCommon.clone(tune.lines[tune.lineNum].staff[0].meter);\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].workingClef = parseCommon.clone(tune.lines[tune.lineNum].staff[0].workingClef);\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].voices = [[]];\n\t\t\t}\n\t\t\t// If tune is a clef type, then we replace the working clef on the line. This is kept separate from\n\t\t\t// the clef in case there is an inline clef field. We need to know what the current position for\n\t\t\t// the note is.\n\t\t\tif (type === 'clef') {\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].workingClef = hashParams;\n\t\t\t}\n\n\t\t\t// These elements should not be added twice, so if the element exists on tune line without a note or bar before it, just replace the staff version.\n\t\t\tvar voice = tune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum];\n\t\t\tfor (var i = 0; i < voice.length; i++) {\n\t\t\t\tif (voice[i].el_type === 'note' || voice[i].el_type === 'bar') {\n\t\t\t\t\thashParams.el_type = type;\n\t\t\t\t\thashParams.startChar = startChar;\n\t\t\t\t\thashParams.endChar = endChar;\n\t\t\t\t\tif (impliedNaturals)\n\t\t\t\t\t\thashParams.accidentals = impliedNaturals.concat(hashParams.accidentals);\n\t\t\t\t\tvoice.push(hashParams);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (voice[i].el_type === type) {\n\t\t\t\t\thashParams.el_type = type;\n\t\t\t\t\thashParams.startChar = startChar;\n\t\t\t\t\thashParams.endChar = endChar;\n\t\t\t\t\tif (impliedNaturals)\n\t\t\t\t\t\thashParams.accidentals = impliedNaturals.concat(hashParams.accidentals);\n\t\t\t\t\tvoice[i] = hashParams;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// We didn't see either that type or a note, so replace the element to the staff.\n\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum][type] = hashParams2;\n\t\t}\n\t};\n\n\tthis.pushLine = function(hash) {\n\t\tif (tune.vskipPending) {\n\t\t\thash.vskip = tune.vskipPending;\n\t\t\tdelete tune.vskipPending;\n\t\t}\n\t\ttune.lines.push(hash);\n\t};\n\n\tthis.addSubtitle = function(str, info) {\n\t\tthis.pushLine({subtitle: { text: str, startChar: info.startChar, endChar: info.endChar}});\n\t};\n\n\tthis.addSpacing = function(num) {\n\t\ttune.vskipPending = num;\n\t};\n\n\tthis.addNewPage = function(num) {\n\t\tthis.pushLine({newpage: num});\n\t};\n\n\tthis.addSeparator = function(spaceAbove, spaceBelow, lineLength, info) {\n\t\tthis.pushLine({separator: {spaceAbove: Math.round(spaceAbove), spaceBelow: Math.round(spaceBelow), lineLength: Math.round(lineLength), startChar: info.startChar, endChar: info.endChar}});\n\t};\n\n\tthis.addText = function(str, info) {\n\t\tthis.pushLine({text: { text: str, startChar: info.startChar, endChar: info.endChar}});\n\t};\n\n\tthis.addCentered = function(str) {\n\t\tthis.pushLine({text: [{text: str, center: true }]});\n\t};\n\n\tthis.containsNotes = function(voice) {\n\t\tfor (var i = 0; i < voice.length; i++) {\n\t\t\tif (voice[i].el_type === 'note' || voice[i].el_type === 'bar')\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tthis.containsNotesStrict = function(voice) {\n\t\tfor (var i = 0; i < voice.length; i++) {\n\t\t\tif (voice[i].el_type === 'note' && (voice[i].rest === undefined || voice[i].chord !== undefined))\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t//\tanyVoiceContainsNotes: function(line) {\n//\t\tfor (var i = 0; i < line.staff.voices.length; i++) {\n//\t\t\tif (this.containsNotes(line.staff.voices[i]))\n//\t\t\t\treturn true;\n//\t\t}\n//\t\treturn false;\n//\t},\n\tthis.changeVoiceScale = function(scale) {\n\t\tself.appendElement('scale', null, null, { size: scale} );\n\t};\n\n\tthis.startNewLine = function(params) {\n\t\t// If the pointed to line doesn't exist, just create that. If the line does exist, but doesn't have any music on it, just use it.\n\t\t// If it does exist and has music, then increment the line number. If the new element doesn't exist, create it.\n\t\tvar This = tune;\n\t\tthis.closeLine();\t// Close the previous line.\n\t\tvar createVoice = function(params) {\n\t\t\tvar thisStaff = This.lines[This.lineNum].staff[This.staffNum];\n\t\t\tthisStaff.voices[This.voiceNum] = [];\n\t\t\tif (!thisStaff.title)\n\t\t\t\tthisStaff.title = [];\n\t\t\tthisStaff.title[This.voiceNum] = { name: params.name, subname: params.subname };\n\t\t\tif (params.style)\n\t\t\t\tself.appendElement('style', null, null, {head: params.style});\n\t\t\tif (params.stem)\n\t\t\t\tself.appendElement('stem', null, null, {direction: params.stem});\n\t\t\telse if (This.voiceNum > 0) {\n\t\t\t\tif (thisStaff.voices[0]!== undefined) {\n\t\t\t\t\tvar found = false;\n\t\t\t\t\tfor (var i = 0; i < thisStaff.voices[0].length; i++) {\n\t\t\t\t\t\tif (thisStaff.voices[0].el_type === 'stem')\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!found) {\n\t\t\t\t\t\tvar stem = { el_type: 'stem', direction: 'up' };\n\t\t\t\t\t\tthisStaff.voices[0].splice(0,0,stem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tself.appendElement('stem', null, null, {direction: 'down'});\n\t\t\t}\n\t\t\tif (params.scale)\n\t\t\t\tself.appendElement('scale', null, null, { size: params.scale} );\n\t\t};\n\t\tvar createStaff = function(params) {\n\t\t\tif (params.key && params.key.impliedNaturals) {\n\t\t\t\tparams.key.accidentals = params.key.accidentals.concat(params.key.impliedNaturals);\n\t\t\t\tdelete params.key.impliedNaturals;\n\t\t\t}\n\n\t\t\tThis.lines[This.lineNum].staff[This.staffNum] = {voices: [ ], clef: params.clef, key: params.key, workingClef: params.clef };\n\t\t\tif (params.stafflines !== undefined) {\n\t\t\t\tThis.lines[This.lineNum].staff[This.staffNum].clef.stafflines = params.stafflines;\n\t\t\t\tThis.lines[This.lineNum].staff[This.staffNum].workingClef.stafflines = params.stafflines;\n\t\t\t}\n\t\t\tif (params.staffscale) {\n\t\t\t\tThis.lines[This.lineNum].staff[This.staffNum].staffscale = params.staffscale;\n\t\t\t}\n\t\t\tif (params.annotationfont) self.setLineFont(\"annotationfont\", params.annotationfont);\n\t\t\tif (params.gchordfont) self.setLineFont(\"gchordfont\", params.gchordfont);\n\t\t\tif (params.tripletfont) self.setLineFont(\"tripletfont\", params.tripletfont);\n\t\t\tif (params.vocalfont) self.setLineFont(\"vocalfont\", params.vocalfont);\n\t\t\tif (params.bracket) This.lines[This.lineNum].staff[This.staffNum].bracket = params.bracket;\n\t\t\tif (params.brace) This.lines[This.lineNum].staff[This.staffNum].brace = params.brace;\n\t\t\tif (params.connectBarLines) This.lines[This.lineNum].staff[This.staffNum].connectBarLines = params.connectBarLines;\n\t\t\tif (params.barNumber) This.lines[This.lineNum].staff[This.staffNum].barNumber = params.barNumber;\n\t\t\tcreateVoice(params);\n\t\t\t// Some stuff just happens for the first voice\n\t\t\tif (params.part)\n\t\t\t\tself.appendElement('part', params.part.startChar, params.part.endChar, {title: params.part.title});\n\t\t\tif (params.meter !== undefined) This.lines[This.lineNum].staff[This.staffNum].meter = params.meter;\n\t\t\tif (This.vskipPending) {\n\t\t\t\tThis.lines[This.lineNum].vskip = This.vskipPending;\n\t\t\t\tdelete This.vskipPending;\n\t\t\t}\n\t\t};\n\t\tvar createLine = function(params) {\n\t\t\tThis.lines[This.lineNum] = {staff: []};\n\t\t\tcreateStaff(params);\n\t\t};\n\t\tif (tune.lines[tune.lineNum] === undefined) createLine(params);\n\t\telse if (tune.lines[tune.lineNum].staff === undefined) {\n\t\t\ttune.lineNum++;\n\t\t\tthis.startNewLine(params);\n\t\t} else if (tune.lines[tune.lineNum].staff[tune.staffNum] === undefined) createStaff(params);\n\t\telse if (tune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum] === undefined) createVoice(params);\n\t\telse if (!this.containsNotes(tune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum])) {\n\t\t\t// We don't need a new line but we might need to update parts of it.\n\t\t\tif (params.part)\n\t\t\t\tself.appendElement('part', params.part.startChar, params.part.endChar, {title: params.part.title});\n\t\t} else {\n\t\t\ttune.lineNum++;\n\t\t\tthis.startNewLine(params);\n\t\t}\n\t};\n\n\tthis.setRunningFont = function(type, font) {\n\t\t// This is called at tune start to set the current default fonts so we know whether to record a change.\n\t\ttune.runningFonts[type] = font;\n\t};\n\n\tthis.setLineFont = function(type, font) {\n\t\t// If we haven't encountered the font type yet then we are using the default font so it doesn't\n\t\t// need to be noted. If we have encountered it, then only record it if it is different from the last time.\n\t\tif (tune.runningFonts[type]) {\n\t\t\tvar isDifferent = false;\n\t\t\tvar keys = Object.keys(font);\n\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\tif (tune.runningFonts[type][keys[i]] !== font[keys[i]])\n\t\t\t\t\tisDifferent = true;\n\t\t\t}\n\t\t\tif (isDifferent) {\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum][type] = font;\n\t\t\t}\n\t\t}\n\t\ttune.runningFonts[type] = font;\n\t}\n\n\tthis.setBarNumberImmediate = function(barNumber) {\n\t\t// If tune is called right at the beginning of a line, then correct the measure number that is already written.\n\t\t// If tune is called at the beginning of a measure, then correct the measure number that was just created.\n\t\t// If tune is called in the middle of a measure, then subtract one from it, because it will be incremented before applied.\n\t\tvar currentVoice = this.getCurrentVoice();\n\t\tif (currentVoice && currentVoice.length > 0) {\n\t\t\tvar lastElement = currentVoice[currentVoice.length-1];\n\t\t\tif (lastElement.el_type === 'bar') {\n\t\t\t\tif (lastElement.barNumber !== undefined) // the measure number might not be written for tune bar, don't override that.\n\t\t\t\t\tlastElement.barNumber = barNumber;\n\t\t\t} else\n\t\t\t\treturn barNumber-1;\n\t\t}\n\t\treturn barNumber;\n\t};\n\n\tthis.hasBeginMusic = function() {\n\t\t// return true if there exists at least one line that contains \"staff\"\n\t\tfor (var i = 0; i < tune.lines.length; i++) {\n\t\t\tif (tune.lines[i].staff)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tthis.isFirstLine = function(index) {\n\t\tfor (var i = index-1; i >= 0; i--) {\n\t\t\tif (tune.lines[i].staff !== undefined) return false;\n\t\t}\n\t\treturn true;\n\t};\n\n\tthis.getCurrentVoice = function() {\n\t\tvar currLine = tune.lines[tune.lineNum];\n\t\tif (!currLine)\n\t\t\treturn null;\n\t\tvar currStaff = currLine.staff[tune.staffNum];\n\t\tif (!currStaff)\n\t\t\treturn null;\n\t\tif (currStaff.voices[tune.voiceNum] !== undefined)\n\t\t\treturn currStaff.voices[tune.voiceNum];\n\t\telse return null;\n\t};\n\n\tthis.setCurrentVoice = function(staffNum, voiceNum) {\n\t\ttune.staffNum = staffNum;\n\t\ttune.voiceNum = voiceNum;\n\t\tfor (var i = 0; i < tune.lines.length; i++) {\n\t\t\tif (tune.lines[i].staff) {\n\t\t\t\tif (tune.lines[i].staff[staffNum] === undefined || tune.lines[i].staff[staffNum].voices[voiceNum] === undefined ||\n\t\t\t\t\t!this.containsNotes(tune.lines[i].staff[staffNum].voices[voiceNum] )) {\n\t\t\t\t\ttune.lineNum =  i;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ttune.lineNum =  i;\n\t};\n\n\tthis.addMetaText = function(key, value, info) {\n\t\tif (tune.metaText[key] === undefined) {\n\t\t\ttune.metaText[key] = value;\n\t\t\ttune.metaTextInfo[key] = info;\n\t\t} else {\n\t\t\ttune.metaText[key] += \"\\n\" + value;\n\t\t\ttune.metaTextInfo[key].endChar = info.endChar;\n\t\t}\n\t};\n\n\tthis.addMetaTextArray = function(key, value, info) {\n\t\tif (tune.metaText[key] === undefined) {\n\t\t\ttune.metaText[key] = [value];\n\t\t\ttune.metaTextInfo[key] = info;\n\t\t} else {\n\t\t\ttune.metaText[key].push(value);\n\t\t\ttune.metaTextInfo[key].endChar = info.endChar;\n\t\t}\n\t};\n\tthis.addMetaTextObj = function(key, value, info) {\n\t\ttune.metaText[key] = value;\n\t\ttune.metaTextInfo[key] = info;\n\t};\n};\n\nmodule.exports = TuneBuilder;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/abcjs/src/parse/tune-builder.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}}],"sources":{"node_modules/abcjs/src/parse/tune-builder.js":"var parseKeyVoice = require('../parse/abc_parse_key_voice');\nvar parseCommon = require('../parse/abc_common');\n\nvar TuneBuilder = function(tune) {\n\tvar self = this;\n\n\tthis.setVisualTranspose = function(visualTranspose) {\n\t\tif (visualTranspose)\n\t\t\ttune.visualTranspose = visualTranspose;\n\t};\n\n\tthis.resolveOverlays = function() {\n\t\tvar madeChanges = false;\n\t\tvar durationsPerLines = [];\n\t\tfor (var i = 0; i < tune.lines.length; i++) {\n\t\t\tvar line = tune.lines[i];\n\t\t\tif (line.staff) {\n\t\t\t\tfor (var j = 0; j < line.staff.length; j++) {\n\t\t\t\t\tvar staff = line.staff[j];\n\t\t\t\t\tvar overlayVoice = [];\n\t\t\t\t\tfor (var k = 0; k < staff.voices.length; k++) {\n\t\t\t\t\t\tvar voice = staff.voices[k];\n\t\t\t\t\t\toverlayVoice.push({ hasOverlay: false, voice: [], snip: []});\n\t\t\t\t\t\tdurationsPerLines[i] = 0;\n\t\t\t\t\t\tvar durationThisBar = 0;\n\t\t\t\t\t\tvar inOverlay = false;\n\t\t\t\t\t\tvar overlayDuration = 0;\n\t\t\t\t\t\tvar snipStart = -1;\n\t\t\t\t\t\tfor (var kk = 0; kk < voice.length; kk++) {\n\t\t\t\t\t\t\tvar event = voice[kk];\n\t\t\t\t\t\t\tif (event.el_type === \"overlay\" && !inOverlay) {\n\t\t\t\t\t\t\t\tmadeChanges = true;\n\t\t\t\t\t\t\t\tinOverlay = true;\n\t\t\t\t\t\t\t\tsnipStart = kk;\n\t\t\t\t\t\t\t\toverlayVoice[k].hasOverlay = true;\n\t\t\t\t\t\t\t\tif (overlayDuration === 0)\n\t\t\t\t\t\t\t\t\toverlayDuration = durationsPerLines[i];\n\t\t\t\t\t\t\t\t// If this isn't the first line, we also need invisible rests on the previous lines.\n\t\t\t\t\t\t\t\t// So, if the next voice doesn't appear in a previous line, create it\n\t\t\t\t\t\t\t\tfor (var ii = 0; ii < i; ii++) {\n\t\t\t\t\t\t\t\t\tif (durationsPerLines[ii] && tune.lines[ii].staff && staff.voices.length >= tune.lines[ii].staff[0].voices.length) {\n\t\t\t\t\t\t\t\t\t\ttune.lines[ii].staff[0].voices.push([{\n\t\t\t\t\t\t\t\t\t\t\tel_type: \"note\",\n\t\t\t\t\t\t\t\t\t\t\tduration: durationsPerLines[ii],\n\t\t\t\t\t\t\t\t\t\t\trest: {type: \"invisible\"},\n\t\t\t\t\t\t\t\t\t\t\tstartChar: event.startChar,\n\t\t\t\t\t\t\t\t\t\t\tendChar: event.endChar\n\t\t\t\t\t\t\t\t\t\t}]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (event.el_type === \"bar\") {\n\t\t\t\t\t\t\t\tif (inOverlay) {\n\t\t\t\t\t\t\t\t\t// delete the overlay events from this array without messing up this loop.\n\t\t\t\t\t\t\t\t\tinOverlay = false;\n\t\t\t\t\t\t\t\t\toverlayVoice[k].snip.push({ start: snipStart, len: kk - snipStart});\n\t\t\t\t\t\t\t\t\toverlayVoice[k].voice.push(event); // Also end the overlay with the barline.\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// This keeps the voices lined up: if the overlay isn't in the first measure then we need a bunch of invisible rests.\n\t\t\t\t\t\t\t\t\tif (durationThisBar > 0)\n\t\t\t\t\t\t\t\t\t\toverlayVoice[k].voice.push({ el_type: \"note\", duration: durationThisBar, rest: {type: \"invisible\"}, startChar: event.startChar, endChar: event.endChar });\n\t\t\t\t\t\t\t\t\toverlayVoice[k].voice.push(event);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdurationThisBar = 0;\n\t\t\t\t\t\t\t} else if (event.el_type === \"note\") {\n\t\t\t\t\t\t\t\tif (inOverlay) {\n\t\t\t\t\t\t\t\t\toverlayVoice[k].voice.push(event);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdurationThisBar += event.duration;\n\t\t\t\t\t\t\t\t\tdurationsPerLines[i] += event.duration;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (event.el_type === \"scale\" || event.el_type === \"stem\" || event.el_type === \"overlay\" || event.el_type === \"style\" || event.el_type === \"transpose\") {\n\t\t\t\t\t\t\t\t// These types of events are duplicated on the overlay layer.\n\t\t\t\t\t\t\t\toverlayVoice[k].voice.push(event);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (overlayVoice[k].hasOverlay && overlayVoice[k].snip.length === 0) {\n\t\t\t\t\t\t\t// there was no closing bar, so we didn't set the snip amount.\n\t\t\t\t\t\t\toverlayVoice[k].snip.push({ start: snipStart, len: voice.length - snipStart});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (k = 0; k < overlayVoice.length; k++) {\n\t\t\t\t\t\tvar ov = overlayVoice[k];\n\t\t\t\t\t\tif (ov.hasOverlay) {\n\t\t\t\t\t\t\tov.voice.splice(0, 0, {el_type: \"stem\", direction: \"down\"})\n\t\t\t\t\t\t\tstaff.voices.push(ov.voice);\n\t\t\t\t\t\t\tfor (var kkk = ov.snip.length-1; kkk >= 0; kkk--) {\n\t\t\t\t\t\t\t\tvar snip = ov.snip[kkk];\n\t\t\t\t\t\t\t\tstaff.voices[k].splice(snip.start, snip.len);\n\t\t\t\t\t\t\t\tstaff.voices[k].splice(snip.start+1, 0, { el_type: \"stem\", direction: \"auto\" });\n\t\t\t\t\t\t\t\tvar indexOfLastBar = findLastBar(staff.voices[k], snip.start);\n\t\t\t\t\t\t\t\tstaff.voices[k].splice(indexOfLastBar, 0, { el_type: \"stem\", direction: \"up\" });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// remove ending marks from the overlay voice so they are not repeated\n\t\t\t\t\t\t\tfor (kkk = 0; kkk < staff.voices[staff.voices.length-1].length; kkk++) {\n\t\t\t\t\t\t\t\tstaff.voices[staff.voices.length-1][kkk] = parseCommon.clone(staff.voices[staff.voices.length-1][kkk]);\n\t\t\t\t\t\t\t\tvar el = staff.voices[staff.voices.length-1][kkk];\n\t\t\t\t\t\t\t\tif (el.el_type === 'bar' && el.startEnding) {\n\t\t\t\t\t\t\t\t\tdelete el.startEnding;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (el.el_type === 'bar' && el.endEnding)\n\t\t\t\t\t\t\t\t\tdelete el.endEnding;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn madeChanges;\n\t};\n\n\tfunction findLastBar(voice, start) {\n\t\tfor (var i = start-1; i > 0 && voice[i].el_type !== \"bar\"; i--) {\n\n\t\t}\n\t\treturn i;\n\t}\n\tfunction fixTitles(lines) {\n\t\t// We might have name and subname defined. We now know what line everything is on, so we can determine which to use.\n\t\tvar firstMusicLine = true;\n\t\tfor (var i = 0; i < lines.length; i++) {\n\t\t\tvar line = lines[i];\n\t\t\tif (line.staff) {\n\t\t\t\tfor (var j = 0; j < line.staff.length; j++) {\n\t\t\t\t\tvar staff = line.staff[j];\n\t\t\t\t\tif (staff.title) {\n\t\t\t\t\t\tvar hasATitle = false;\n\t\t\t\t\t\tfor (var k = 0; k < staff.title.length; k++) {\n\t\t\t\t\t\t\tif (staff.title[k]) {\n\t\t\t\t\t\t\t\tstaff.title[k] = (firstMusicLine) ? staff.title[k].name : staff.title[k].subname;\n\t\t\t\t\t\t\t\tif (staff.title[k])\n\t\t\t\t\t\t\t\t\thasATitle = true;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tstaff.title[k] = '';\n\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\tstaff.title[k] = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!hasATitle)\n\t\t\t\t\t\t\tdelete staff.title;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfirstMusicLine = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.cleanUp = function(barsperstaff, staffnonote, currSlur) {\n\t\tthis.closeLine();\t// Close the last line.\n\t\tdelete tune.runningFonts;\n\n\t\t// If the tempo was created with a string like \"Allegro\", then the duration of a beat needs to be set at the last moment, when it is most likely known.\n\t\tif (tune.metaText.tempo && tune.metaText.tempo.bpm && !tune.metaText.tempo.duration)\n\t\t\ttune.metaText.tempo.duration = [ tune.getBeatLength() ];\n\n\t\t// Remove any blank lines\n\t\tvar anyDeleted = false;\n\t\tvar i, s, v;\n\t\tfor (i = 0; i < tune.lines.length; i++) {\n\t\t\tif (tune.lines[i].staff !== undefined) {\n\t\t\t\tvar hasAny = false;\n\t\t\t\tfor (s = 0; s < tune.lines[i].staff.length; s++) {\n\t\t\t\t\tif (tune.lines[i].staff[s] === undefined) {\n\t\t\t\t\t\tanyDeleted = true;\n\t\t\t\t\t\ttune.lines[i].staff[s] = null;\n\t\t\t\t\t\t//tune.lines[i].staff[s] = { voices: []};\t// TODO-PER: There was a part missing in the abc music. How should we recover?\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (v = 0; v < tune.lines[i].staff[s].voices.length; v++) {\n\t\t\t\t\t\t\tif (tune.lines[i].staff[s].voices[v] === undefined)\n\t\t\t\t\t\t\t\ttune.lines[i].staff[s].voices[v] = [];\t// TODO-PER: There was a part missing in the abc music. How should we recover?\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tif (this.containsNotes(tune.lines[i].staff[s].voices[v])) hasAny = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!hasAny) {\n\t\t\t\t\ttune.lines[i] = null;\n\t\t\t\t\tanyDeleted = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (anyDeleted) {\n\t\t\ttune.lines = parseCommon.compact(tune.lines);\n\t\t\tparseCommon.each(tune.lines, function(line) {\n\t\t\t\tif (line.staff)\n\t\t\t\t\tline.staff = parseCommon.compact(line.staff);\n\t\t\t});\n\t\t}\n\n\t\t// if we exceeded the number of bars allowed on a line, then force a new line\n\t\tif (barsperstaff) {\n\t\t\twhile (wrapMusicLines(tune.lines, barsperstaff)) {\n\t\t\t\t// This will keep wrapping until the end of the piece.\n\t\t\t}\n\t\t}\n\n\t\t// If we were passed staffnonote, then we want to get rid of all staffs that contain only rests.\n\t\tif (staffnonote) {\n\t\t\tanyDeleted = false;\n\t\t\tfor (i = 0; i < tune.lines.length; i++) {\n\t\t\t\tif (tune.lines[i].staff !== undefined) {\n\t\t\t\t\tfor (s = 0; s < tune.lines[i].staff.length; s++) {\n\t\t\t\t\t\tvar keepThis = false;\n\t\t\t\t\t\tfor (v = 0; v < tune.lines[i].staff[s].voices.length; v++) {\n\t\t\t\t\t\t\tif (this.containsNotesStrict(tune.lines[i].staff[s].voices[v])) {\n\t\t\t\t\t\t\t\tkeepThis = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!keepThis) {\n\t\t\t\t\t\t\tanyDeleted = true;\n\t\t\t\t\t\t\ttune.lines[i].staff[s] = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (anyDeleted) {\n\t\t\t\tparseCommon.each(tune.lines, function(line) {\n\t\t\t\t\tif (line.staff)\n\t\t\t\t\t\tline.staff = parseCommon.compact(line.staff);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfixTitles(tune.lines);\n\n\t\t// Remove the temporary working variables\n\t\tfor (i = 0; i < tune.lines.length; i++) {\n\t\t\tif (tune.lines[i].staff) {\n\t\t\t\tfor (s = 0; s < tune.lines[i].staff.length; s++)\n\t\t\t\t\tdelete tune.lines[i].staff[s].workingClef;\n\t\t\t}\n\t\t}\n\n\t\t// If there are overlays, create new voices for them.\n\t\twhile (this.resolveOverlays()) {\n\t\t\t// keep resolving overlays as long as any are found.\n\t\t}\n\n\t\tfunction cleanUpSlursInLine(line, staffNum, voiceNum) {\n\t\t\tif (!currSlur[staffNum])\n\t\t\t\tcurrSlur[staffNum] = [];\n\t\t\tif (!currSlur[staffNum][voiceNum])\n\t\t\t\tcurrSlur[staffNum][voiceNum] = [];\n\t\t\tvar x;\n//\t\t\tvar lyr = null;\t// TODO-PER: debugging.\n\n\t\t\tvar addEndSlur = function(obj, num, chordPos) {\n\t\t\t\tif (currSlur[staffNum][voiceNum][chordPos] === undefined) {\n\t\t\t\t\t// There isn't an exact match for note position, but we'll take any other open slur.\n\t\t\t\t\tfor (x = 0; x < currSlur[staffNum][voiceNum].length; x++) {\n\t\t\t\t\t\tif (currSlur[staffNum][voiceNum][x] !== undefined) {\n\t\t\t\t\t\t\tchordPos = x;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (currSlur[staffNum][voiceNum][chordPos] === undefined) {\n\t\t\t\t\t\tvar offNum = chordPos*100+1;\n\t\t\t\t\t\tparseCommon.each(obj.endSlur, function(x) { if (offNum === x) --offNum; });\n\t\t\t\t\t\tcurrSlur[staffNum][voiceNum][chordPos] = [offNum];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar slurNum;\n\t\t\t\tfor (var i = 0; i < num; i++) {\n\t\t\t\t\tslurNum = currSlur[staffNum][voiceNum][chordPos].pop();\n\t\t\t\t\tobj.endSlur.push(slurNum);\n//\t\t\t\t\tlyr.syllable += '<' + slurNum;\t// TODO-PER: debugging\n\t\t\t\t}\n\t\t\t\tif (currSlur[staffNum][voiceNum][chordPos].length === 0)\n\t\t\t\t\tdelete currSlur[staffNum][voiceNum][chordPos];\n\t\t\t\treturn slurNum;\n\t\t\t};\n\n\t\t\tvar addStartSlur = function(obj, num, chordPos, usedNums) {\n\t\t\t\tobj.startSlur = [];\n\t\t\t\tif (currSlur[staffNum][voiceNum][chordPos] === undefined) {\n\t\t\t\t\tcurrSlur[staffNum][voiceNum][chordPos] = [];\n\t\t\t\t}\n\t\t\t\tvar nextNum = chordPos*100+1;\n\t\t\t\tfor (var i = 0; i < num; i++) {\n\t\t\t\t\tif (usedNums) {\n\t\t\t\t\t\tparseCommon.each(usedNums, function(x) { if (nextNum === x) ++nextNum; });\n\t\t\t\t\t\tparseCommon.each(usedNums, function(x) { if (nextNum === x) ++nextNum; });\n\t\t\t\t\t\tparseCommon.each(usedNums, function(x) { if (nextNum === x) ++nextNum; });\n\t\t\t\t\t}\n\t\t\t\t\tparseCommon.each(currSlur[staffNum][voiceNum][chordPos], function(x) { if (nextNum === x) ++nextNum; });\n\t\t\t\t\tparseCommon.each(currSlur[staffNum][voiceNum][chordPos], function(x) { if (nextNum === x) ++nextNum; });\n\n\t\t\t\t\tcurrSlur[staffNum][voiceNum][chordPos].push(nextNum);\n\t\t\t\t\tobj.startSlur.push({ label: nextNum });\n\t\t\t\t\tif (obj.dottedSlur) {\n\t\t\t\t\t\tobj.startSlur[obj.startSlur.length-1].style = 'dotted';\n\t\t\t\t\t\tdelete obj.dottedSlur;\n\t\t\t\t\t}\n//\t\t\t\t\tlyr.syllable += ' ' + nextNum + '>';\t// TODO-PER:debugging\n\t\t\t\t\tnextNum++;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfor (var i = 0; i < line.length; i++) {\n\t\t\t\tvar el = line[i];\n//\t\t\t\tif (el.lyric === undefined)\t// TODO-PER: debugging\n//\t\t\t\t\tel.lyric = [{ divider: '-' }];\t// TODO-PER: debugging\n//\t\t\t\tlyr = el.lyric[0];\t// TODO-PER: debugging\n//\t\t\t\tlyr.syllable = '';\t// TODO-PER: debugging\n\t\t\t\tif (el.el_type === 'note') {\n\t\t\t\t\tif (el.gracenotes) {\n\t\t\t\t\t\tfor (var g = 0; g < el.gracenotes.length; g++) {\n\t\t\t\t\t\t\tif (el.gracenotes[g].endSlur) {\n\t\t\t\t\t\t\t\tvar gg = el.gracenotes[g].endSlur;\n\t\t\t\t\t\t\t\tel.gracenotes[g].endSlur = [];\n\t\t\t\t\t\t\t\tfor (var ggg = 0; ggg < gg; ggg++)\n\t\t\t\t\t\t\t\t\taddEndSlur(el.gracenotes[g], 1, 20);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (el.gracenotes[g].startSlur) {\n\t\t\t\t\t\t\t\tx = el.gracenotes[g].startSlur;\n\t\t\t\t\t\t\t\taddStartSlur(el.gracenotes[g], x, 20);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (el.endSlur) {\n\t\t\t\t\t\tx = el.endSlur;\n\t\t\t\t\t\tel.endSlur = [];\n\t\t\t\t\t\taddEndSlur(el, x, 0);\n\t\t\t\t\t}\n\t\t\t\t\tif (el.startSlur) {\n\t\t\t\t\t\tx = el.startSlur;\n\t\t\t\t\t\taddStartSlur(el, x, 0);\n\t\t\t\t\t}\n\t\t\t\t\tif (el.pitches) {\n\t\t\t\t\t\tvar usedNums = [];\n\t\t\t\t\t\tfor (var p = 0; p < el.pitches.length; p++) {\n\t\t\t\t\t\t\tif (el.pitches[p].endSlur) {\n\t\t\t\t\t\t\t\tvar k = el.pitches[p].endSlur;\n\t\t\t\t\t\t\t\tel.pitches[p].endSlur = [];\n\t\t\t\t\t\t\t\tfor (var j = 0; j < k; j++) {\n\t\t\t\t\t\t\t\t\tvar slurNum = addEndSlur(el.pitches[p], 1, p+1);\n\t\t\t\t\t\t\t\t\tusedNums.push(slurNum);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (p = 0; p < el.pitches.length; p++) {\n\t\t\t\t\t\t\tif (el.pitches[p].startSlur) {\n\t\t\t\t\t\t\t\tx = el.pitches[p].startSlur;\n\t\t\t\t\t\t\t\taddStartSlur(el.pitches[p], x, p+1, usedNums);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Correct for the weird gracenote case where ({g}a) should match.\n\t\t\t\t\t\t// The end slur was already assigned to the note, and needs to be moved to the first note of the graces.\n\t\t\t\t\t\tif (el.gracenotes && el.pitches[0].endSlur && el.pitches[0].endSlur[0] === 100 && el.pitches[0].startSlur) {\n\t\t\t\t\t\t\tif (el.gracenotes[0].endSlur)\n\t\t\t\t\t\t\t\tel.gracenotes[0].endSlur.push(el.pitches[0].startSlur[0].label);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tel.gracenotes[0].endSlur = [el.pitches[0].startSlur[0].label];\n\t\t\t\t\t\t\tif (el.pitches[0].endSlur.length === 1)\n\t\t\t\t\t\t\t\tdelete el.pitches[0].endSlur;\n\t\t\t\t\t\t\telse if (el.pitches[0].endSlur[0] === 100)\n\t\t\t\t\t\t\t\tel.pitches[0].endSlur.shift();\n\t\t\t\t\t\t\telse if (el.pitches[0].endSlur[el.pitches[0].endSlur.length-1] === 100)\n\t\t\t\t\t\t\t\tel.pitches[0].endSlur.pop();\n\t\t\t\t\t\t\tif (currSlur[staffNum][voiceNum][1].length === 1)\n\t\t\t\t\t\t\t\tdelete currSlur[staffNum][voiceNum][1];\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tcurrSlur[staffNum][voiceNum][1].pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO-PER: This could be done faster as we go instead of as the last step.\n\t\tfunction fixClefPlacement(el) {\n\t\t\tparseKeyVoice.fixClef(el);\n\t\t}\n\n\t\tfunction wrapMusicLines(lines, barsperstaff) {\n\t\t\tfor (i = 0; i < lines.length; i++) {\n\t\t\t\tif (lines[i].staff !== undefined) {\n\t\t\t\t\tfor (s = 0; s < lines[i].staff.length; s++) {\n\t\t\t\t\t\tvar permanentItems = [];\n\t\t\t\t\t\tfor (v = 0; v < lines[i].staff[s].voices.length; v++) {\n\t\t\t\t\t\t\tvar voice = lines[i].staff[s].voices[v];\n\t\t\t\t\t\t\tvar barNumThisLine = 0;\n\t\t\t\t\t\t\tfor (var n = 0; n < voice.length; n++) {\n\t\t\t\t\t\t\t\tif (voice[n].el_type === 'bar') {\n\t\t\t\t\t\t\t\t\tbarNumThisLine++;\n\t\t\t\t\t\t\t\t\tif (barNumThisLine >= barsperstaff) {\n\t\t\t\t\t\t\t\t\t\t// push everything else to the next line, if there is anything else,\n\t\t\t\t\t\t\t\t\t\t// and there is a next line. If there isn't a next line, create one.\n\t\t\t\t\t\t\t\t\t\tif (n < voice.length - 1) {\n\t\t\t\t\t\t\t\t\t\t\tvar nextLine = getNextMusicLine(lines, i);\n\t\t\t\t\t\t\t\t\t\t\tif (!nextLine) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar cp = JSON.parse(JSON.stringify(lines[i]));\n\t\t\t\t\t\t\t\t\t\t\t\tlines.push(parseCommon.clone(cp));\n\t\t\t\t\t\t\t\t\t\t\t\tnextLine = lines[lines.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\tfor (var ss = 0; ss < nextLine.staff.length; ss++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (var vv = 0; vv < nextLine.staff[ss].voices.length; vv++)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnextLine.staff[ss].voices[vv] = [];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tvar startElement = n + 1;\n\t\t\t\t\t\t\t\t\t\t\tvar section = lines[i].staff[s].voices[v].slice(startElement);\n\t\t\t\t\t\t\t\t\t\t\tlines[i].staff[s].voices[v] = lines[i].staff[s].voices[v].slice(0, startElement);\n\t\t\t\t\t\t\t\t\t\t\tnextLine.staff[s].voices[v] = permanentItems.concat(section.concat(nextLine.staff[s].voices[v]));\n\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (!voice[n].duration) {\n\t\t\t\t\t\t\t\t\tpermanentItems.push(voice[n]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction getNextMusicLine(lines, currentLine) {\n\t\t\tcurrentLine++;\n\t\t\twhile (lines.length > currentLine) {\n\t\t\t\tif (lines[currentLine].staff)\n\t\t\t\t\treturn lines[currentLine];\n\t\t\t\tcurrentLine++;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (tune.lineNum = 0; tune.lineNum < tune.lines.length; tune.lineNum++) {\n\t\t\tvar staff = tune.lines[tune.lineNum].staff;\n\t\t\tif (staff) {\n\t\t\t\tfor (tune.staffNum = 0; tune.staffNum < staff.length; tune.staffNum++) {\n\t\t\t\t\tif (staff[tune.staffNum].clef)\n\t\t\t\t\t\tfixClefPlacement(staff[tune.staffNum].clef);\n\t\t\t\t\tfor (tune.voiceNum = 0; tune.voiceNum < staff[tune.staffNum].voices.length; tune.voiceNum++) {\n\t\t\t\t\t\tvar voice = staff[tune.staffNum].voices[tune.voiceNum];\n\t\t\t\t\t\tcleanUpSlursInLine(voice, tune.staffNum, tune.voiceNum);\n\t\t\t\t\t\tfor (var j = 0; j < voice.length; j++) {\n\t\t\t\t\t\t\tif (voice[j].el_type === 'clef')\n\t\t\t\t\t\t\t\tfixClefPlacement(voice[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (voice.length > 0 && voice[voice.length-1].barNumber) {\n\t\t\t\t\t\t\t// Don't hang a bar number on the last bar line: it should go on the next line.\n\t\t\t\t\t\t\tvar nextLine = getNextMusicLine(tune.lines, tune.lineNum);\n\t\t\t\t\t\t\tif (nextLine)\n\t\t\t\t\t\t\t\tnextLine.staff[0].barNumber = voice[voice.length-1].barNumber;\n\t\t\t\t\t\t\tdelete voice[voice.length-1].barNumber;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remove temporary variables that the outside doesn't need to know about\n\t\tdelete tune.staffNum;\n\t\tdelete tune.voiceNum;\n\t\tdelete tune.lineNum;\n\t\tdelete tune.potentialStartBeam;\n\t\tdelete tune.potentialEndBeam;\n\t\tdelete tune.vskipPending;\n\n\t\treturn currSlur;\n\t};\n\n\ttune.reset();\n\n\tthis.getLastNote = function() {\n\t\tif (tune.lines[tune.lineNum] && tune.lines[tune.lineNum].staff && tune.lines[tune.lineNum].staff[tune.staffNum] &&\n\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum]) {\n\t\t\tfor (var i = tune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum].length-1; i >= 0; i--) {\n\t\t\t\tvar el = tune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum][i];\n\t\t\t\tif (el.el_type === 'note') {\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tthis.addTieToLastNote = function(dottedTie) {\n\t\t// TODO-PER: if this is a chord, which note?\n\t\tvar el = this.getLastNote();\n\t\tif (el && el.pitches && el.pitches.length > 0) {\n\t\t\tel.pitches[0].startTie = {};\n\t\t\tif (dottedTie)\n\t\t\t\tel.pitches[0].startTie.style = 'dotted';\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tthis.getDuration = function(el) {\n\t\tif (el.duration) return el.duration;\n\t\t//if (el.pitches && el.pitches.length > 0) return el.pitches[0].duration;\n\t\treturn 0;\n\t};\n\n\tthis.closeLine = function() {\n\t\tif (tune.potentialStartBeam && tune.potentialEndBeam) {\n\t\t\ttune.potentialStartBeam.startBeam = true;\n\t\t\ttune.potentialEndBeam.endBeam = true;\n\t\t}\n\t\tdelete tune.potentialStartBeam;\n\t\tdelete tune.potentialEndBeam;\n\t};\n\n\tthis.appendElement = function(type, startChar, endChar, hashParams)\n\t{\n\t\tvar This = tune;\n\t\tvar pushNote = function(hp) {\n\t\t\tvar currStaff = This.lines[This.lineNum].staff[This.staffNum];\n\t\t\tif (!currStaff) {\n\t\t\t\t// TODO-PER: This prevents a crash, but it drops the element. Need to figure out how to start a new line, or delay adding this.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (hp.pitches !== undefined) {\n\t\t\t\tvar mid = currStaff.workingClef.verticalPos;\n\t\t\t\tparseCommon.each(hp.pitches, function(p) { p.verticalPos = p.pitch - mid; });\n\t\t\t}\n\t\t\tif (hp.gracenotes !== undefined) {\n\t\t\t\tvar mid2 = currStaff.workingClef.verticalPos;\n\t\t\t\tparseCommon.each(hp.gracenotes, function(p) { p.verticalPos = p.pitch - mid2; });\n\t\t\t}\n\t\t\tcurrStaff.voices[This.voiceNum].push(hp);\n\t\t};\n\t\thashParams.el_type = type;\n\t\tif (startChar !== null)\n\t\t\thashParams.startChar = startChar;\n\t\tif (endChar !== null)\n\t\t\thashParams.endChar = endChar;\n\t\tvar endBeamHere = function() {\n\t\t\tThis.potentialStartBeam.startBeam = true;\n\t\t\thashParams.endBeam = true;\n\t\t\tdelete This.potentialStartBeam;\n\t\t\tdelete This.potentialEndBeam;\n\t\t};\n\t\tvar endBeamLast = function() {\n\t\t\tif (This.potentialStartBeam !== undefined && This.potentialEndBeam !== undefined) {\t// Do we have a set of notes to beam?\n\t\t\t\tThis.potentialStartBeam.startBeam = true;\n\t\t\t\tThis.potentialEndBeam.endBeam = true;\n\t\t\t}\n\t\t\tdelete This.potentialStartBeam;\n\t\t\tdelete This.potentialEndBeam;\n\t\t};\n\t\tif (type === 'note') { // && (hashParams.rest !== undefined || hashParams.end_beam === undefined)) {\n\t\t\t// Now, add the startBeam and endBeam where it is needed.\n\t\t\t// end_beam is already set on the places where there is a forced end_beam. We'll remove that here after using that info.\n\t\t\t// this.potentialStartBeam either points to null or the start beam.\n\t\t\t// this.potentialEndBeam either points to null or the start beam.\n\t\t\t// If we have a beam break (note is longer than a quarter, or an end_beam is on this element), then set the beam if we have one.\n\t\t\t// reset the variables for the next notes.\n\t\t\tvar dur = self.getDuration(hashParams);\n\t\t\tif (dur >= 0.25) {\t// The beam ends on the note before this.\n\t\t\t\tendBeamLast();\n\t\t\t} else if (hashParams.force_end_beam_last && This.potentialStartBeam !== undefined) {\n\t\t\t\tendBeamLast();\n\t\t\t} else if (hashParams.end_beam && This.potentialStartBeam !== undefined) {\t// the beam is forced to end on this note, probably because of a space in the ABC\n\t\t\t\tif (hashParams.rest === undefined)\n\t\t\t\t\tendBeamHere();\n\t\t\t\telse\n\t\t\t\t\tendBeamLast();\n\t\t\t} else if (hashParams.rest === undefined) {\t// this a short note and we aren't about to end the beam\n\t\t\t\tif (This.potentialStartBeam === undefined) {\t// We aren't collecting notes for a beam, so start here.\n\t\t\t\t\tif (!hashParams.end_beam) {\n\t\t\t\t\t\tThis.potentialStartBeam = hashParams;\n\t\t\t\t\t\tdelete This.potentialEndBeam;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tThis.potentialEndBeam = hashParams;\t// Continue the beaming, look for the end next note.\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//  end_beam goes on rests and notes which precede rests _except_ when a rest (or set of adjacent rests) has normal notes on both sides (no spaces)\n//\t\t\tif (hashParams.rest !== undefined)\n//\t\t\t{\n//\t\t\t\thashParams.end_beam = true;\n//\t\t\t\tvar el2 = this.getLastNote();\n//\t\t\t\tif (el2) el2.end_beam = true;\n//\t\t\t\t// TODO-PER: implement exception mentioned in the comment.\n//\t\t\t}\n\t\t} else {\t// It's not a note, so there definitely isn't beaming after it.\n\t\t\tendBeamLast();\n\t\t}\n\t\tdelete hashParams.end_beam;\t// We don't want this temporary variable hanging around.\n\t\tdelete hashParams.force_end_beam_last;\t// We don't want this temporary variable hanging around.\n\t\tpushNote(hashParams);\n\t};\n\n\tthis.appendStartingElement = function(type, startChar, endChar, hashParams2)\n\t{\n\t\t// If we're in the middle of beaming, then end the beam.\n\t\tthis.closeLine();\n\n\t\t// We only ever want implied naturals the first time.\n\t\tvar impliedNaturals;\n\t\tif (type === 'key') {\n\t\t\timpliedNaturals = hashParams2.impliedNaturals;\n\t\t\tdelete hashParams2.impliedNaturals;\n\t\t\tdelete hashParams2.explicitAccidentals;\n\t\t}\n\n\t\t// Clone the object because it will be sticking around for the next line and we don't want the extra fields in it.\n\t\tvar hashParams = parseCommon.clone(hashParams2);\n\n\t\tif (tune.lines[tune.lineNum] && tune.lines[tune.lineNum].staff) { // be sure that we are on a music type line before doing the following.\n\t\t\t// If tune is the first item in tune staff, then we might have to initialize the staff, first.\n\t\t\tif (tune.lines[tune.lineNum].staff.length <= tune.staffNum) {\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum] = {};\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].clef = parseCommon.clone(tune.lines[tune.lineNum].staff[0].clef);\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].key = parseCommon.clone(tune.lines[tune.lineNum].staff[0].key);\n\t\t\t\tif (tune.lines[tune.lineNum].staff[0].meter)\n\t\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].meter = parseCommon.clone(tune.lines[tune.lineNum].staff[0].meter);\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].workingClef = parseCommon.clone(tune.lines[tune.lineNum].staff[0].workingClef);\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].voices = [[]];\n\t\t\t}\n\t\t\t// If tune is a clef type, then we replace the working clef on the line. This is kept separate from\n\t\t\t// the clef in case there is an inline clef field. We need to know what the current position for\n\t\t\t// the note is.\n\t\t\tif (type === 'clef') {\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].workingClef = hashParams;\n\t\t\t}\n\n\t\t\t// These elements should not be added twice, so if the element exists on tune line without a note or bar before it, just replace the staff version.\n\t\t\tvar voice = tune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum];\n\t\t\tfor (var i = 0; i < voice.length; i++) {\n\t\t\t\tif (voice[i].el_type === 'note' || voice[i].el_type === 'bar') {\n\t\t\t\t\thashParams.el_type = type;\n\t\t\t\t\thashParams.startChar = startChar;\n\t\t\t\t\thashParams.endChar = endChar;\n\t\t\t\t\tif (impliedNaturals)\n\t\t\t\t\t\thashParams.accidentals = impliedNaturals.concat(hashParams.accidentals);\n\t\t\t\t\tvoice.push(hashParams);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (voice[i].el_type === type) {\n\t\t\t\t\thashParams.el_type = type;\n\t\t\t\t\thashParams.startChar = startChar;\n\t\t\t\t\thashParams.endChar = endChar;\n\t\t\t\t\tif (impliedNaturals)\n\t\t\t\t\t\thashParams.accidentals = impliedNaturals.concat(hashParams.accidentals);\n\t\t\t\t\tvoice[i] = hashParams;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// We didn't see either that type or a note, so replace the element to the staff.\n\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum][type] = hashParams2;\n\t\t}\n\t};\n\n\tthis.pushLine = function(hash) {\n\t\tif (tune.vskipPending) {\n\t\t\thash.vskip = tune.vskipPending;\n\t\t\tdelete tune.vskipPending;\n\t\t}\n\t\ttune.lines.push(hash);\n\t};\n\n\tthis.addSubtitle = function(str, info) {\n\t\tthis.pushLine({subtitle: { text: str, startChar: info.startChar, endChar: info.endChar}});\n\t};\n\n\tthis.addSpacing = function(num) {\n\t\ttune.vskipPending = num;\n\t};\n\n\tthis.addNewPage = function(num) {\n\t\tthis.pushLine({newpage: num});\n\t};\n\n\tthis.addSeparator = function(spaceAbove, spaceBelow, lineLength, info) {\n\t\tthis.pushLine({separator: {spaceAbove: Math.round(spaceAbove), spaceBelow: Math.round(spaceBelow), lineLength: Math.round(lineLength), startChar: info.startChar, endChar: info.endChar}});\n\t};\n\n\tthis.addText = function(str, info) {\n\t\tthis.pushLine({text: { text: str, startChar: info.startChar, endChar: info.endChar}});\n\t};\n\n\tthis.addCentered = function(str) {\n\t\tthis.pushLine({text: [{text: str, center: true }]});\n\t};\n\n\tthis.containsNotes = function(voice) {\n\t\tfor (var i = 0; i < voice.length; i++) {\n\t\t\tif (voice[i].el_type === 'note' || voice[i].el_type === 'bar')\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tthis.containsNotesStrict = function(voice) {\n\t\tfor (var i = 0; i < voice.length; i++) {\n\t\t\tif (voice[i].el_type === 'note' && (voice[i].rest === undefined || voice[i].chord !== undefined))\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t//\tanyVoiceContainsNotes: function(line) {\n//\t\tfor (var i = 0; i < line.staff.voices.length; i++) {\n//\t\t\tif (this.containsNotes(line.staff.voices[i]))\n//\t\t\t\treturn true;\n//\t\t}\n//\t\treturn false;\n//\t},\n\tthis.changeVoiceScale = function(scale) {\n\t\tself.appendElement('scale', null, null, { size: scale} );\n\t};\n\n\tthis.startNewLine = function(params) {\n\t\t// If the pointed to line doesn't exist, just create that. If the line does exist, but doesn't have any music on it, just use it.\n\t\t// If it does exist and has music, then increment the line number. If the new element doesn't exist, create it.\n\t\tvar This = tune;\n\t\tthis.closeLine();\t// Close the previous line.\n\t\tvar createVoice = function(params) {\n\t\t\tvar thisStaff = This.lines[This.lineNum].staff[This.staffNum];\n\t\t\tthisStaff.voices[This.voiceNum] = [];\n\t\t\tif (!thisStaff.title)\n\t\t\t\tthisStaff.title = [];\n\t\t\tthisStaff.title[This.voiceNum] = { name: params.name, subname: params.subname };\n\t\t\tif (params.style)\n\t\t\t\tself.appendElement('style', null, null, {head: params.style});\n\t\t\tif (params.stem)\n\t\t\t\tself.appendElement('stem', null, null, {direction: params.stem});\n\t\t\telse if (This.voiceNum > 0) {\n\t\t\t\tif (thisStaff.voices[0]!== undefined) {\n\t\t\t\t\tvar found = false;\n\t\t\t\t\tfor (var i = 0; i < thisStaff.voices[0].length; i++) {\n\t\t\t\t\t\tif (thisStaff.voices[0].el_type === 'stem')\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!found) {\n\t\t\t\t\t\tvar stem = { el_type: 'stem', direction: 'up' };\n\t\t\t\t\t\tthisStaff.voices[0].splice(0,0,stem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tself.appendElement('stem', null, null, {direction: 'down'});\n\t\t\t}\n\t\t\tif (params.scale)\n\t\t\t\tself.appendElement('scale', null, null, { size: params.scale} );\n\t\t};\n\t\tvar createStaff = function(params) {\n\t\t\tif (params.key && params.key.impliedNaturals) {\n\t\t\t\tparams.key.accidentals = params.key.accidentals.concat(params.key.impliedNaturals);\n\t\t\t\tdelete params.key.impliedNaturals;\n\t\t\t}\n\n\t\t\tThis.lines[This.lineNum].staff[This.staffNum] = {voices: [ ], clef: params.clef, key: params.key, workingClef: params.clef };\n\t\t\tif (params.stafflines !== undefined) {\n\t\t\t\tThis.lines[This.lineNum].staff[This.staffNum].clef.stafflines = params.stafflines;\n\t\t\t\tThis.lines[This.lineNum].staff[This.staffNum].workingClef.stafflines = params.stafflines;\n\t\t\t}\n\t\t\tif (params.staffscale) {\n\t\t\t\tThis.lines[This.lineNum].staff[This.staffNum].staffscale = params.staffscale;\n\t\t\t}\n\t\t\tif (params.annotationfont) self.setLineFont(\"annotationfont\", params.annotationfont);\n\t\t\tif (params.gchordfont) self.setLineFont(\"gchordfont\", params.gchordfont);\n\t\t\tif (params.tripletfont) self.setLineFont(\"tripletfont\", params.tripletfont);\n\t\t\tif (params.vocalfont) self.setLineFont(\"vocalfont\", params.vocalfont);\n\t\t\tif (params.bracket) This.lines[This.lineNum].staff[This.staffNum].bracket = params.bracket;\n\t\t\tif (params.brace) This.lines[This.lineNum].staff[This.staffNum].brace = params.brace;\n\t\t\tif (params.connectBarLines) This.lines[This.lineNum].staff[This.staffNum].connectBarLines = params.connectBarLines;\n\t\t\tif (params.barNumber) This.lines[This.lineNum].staff[This.staffNum].barNumber = params.barNumber;\n\t\t\tcreateVoice(params);\n\t\t\t// Some stuff just happens for the first voice\n\t\t\tif (params.part)\n\t\t\t\tself.appendElement('part', params.part.startChar, params.part.endChar, {title: params.part.title});\n\t\t\tif (params.meter !== undefined) This.lines[This.lineNum].staff[This.staffNum].meter = params.meter;\n\t\t\tif (This.vskipPending) {\n\t\t\t\tThis.lines[This.lineNum].vskip = This.vskipPending;\n\t\t\t\tdelete This.vskipPending;\n\t\t\t}\n\t\t};\n\t\tvar createLine = function(params) {\n\t\t\tThis.lines[This.lineNum] = {staff: []};\n\t\t\tcreateStaff(params);\n\t\t};\n\t\tif (tune.lines[tune.lineNum] === undefined) createLine(params);\n\t\telse if (tune.lines[tune.lineNum].staff === undefined) {\n\t\t\ttune.lineNum++;\n\t\t\tthis.startNewLine(params);\n\t\t} else if (tune.lines[tune.lineNum].staff[tune.staffNum] === undefined) createStaff(params);\n\t\telse if (tune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum] === undefined) createVoice(params);\n\t\telse if (!this.containsNotes(tune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum])) {\n\t\t\t// We don't need a new line but we might need to update parts of it.\n\t\t\tif (params.part)\n\t\t\t\tself.appendElement('part', params.part.startChar, params.part.endChar, {title: params.part.title});\n\t\t} else {\n\t\t\ttune.lineNum++;\n\t\t\tthis.startNewLine(params);\n\t\t}\n\t};\n\n\tthis.setRunningFont = function(type, font) {\n\t\t// This is called at tune start to set the current default fonts so we know whether to record a change.\n\t\ttune.runningFonts[type] = font;\n\t};\n\n\tthis.setLineFont = function(type, font) {\n\t\t// If we haven't encountered the font type yet then we are using the default font so it doesn't\n\t\t// need to be noted. If we have encountered it, then only record it if it is different from the last time.\n\t\tif (tune.runningFonts[type]) {\n\t\t\tvar isDifferent = false;\n\t\t\tvar keys = Object.keys(font);\n\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\tif (tune.runningFonts[type][keys[i]] !== font[keys[i]])\n\t\t\t\t\tisDifferent = true;\n\t\t\t}\n\t\t\tif (isDifferent) {\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum][type] = font;\n\t\t\t}\n\t\t}\n\t\ttune.runningFonts[type] = font;\n\t}\n\n\tthis.setBarNumberImmediate = function(barNumber) {\n\t\t// If tune is called right at the beginning of a line, then correct the measure number that is already written.\n\t\t// If tune is called at the beginning of a measure, then correct the measure number that was just created.\n\t\t// If tune is called in the middle of a measure, then subtract one from it, because it will be incremented before applied.\n\t\tvar currentVoice = this.getCurrentVoice();\n\t\tif (currentVoice && currentVoice.length > 0) {\n\t\t\tvar lastElement = currentVoice[currentVoice.length-1];\n\t\t\tif (lastElement.el_type === 'bar') {\n\t\t\t\tif (lastElement.barNumber !== undefined) // the measure number might not be written for tune bar, don't override that.\n\t\t\t\t\tlastElement.barNumber = barNumber;\n\t\t\t} else\n\t\t\t\treturn barNumber-1;\n\t\t}\n\t\treturn barNumber;\n\t};\n\n\tthis.hasBeginMusic = function() {\n\t\t// return true if there exists at least one line that contains \"staff\"\n\t\tfor (var i = 0; i < tune.lines.length; i++) {\n\t\t\tif (tune.lines[i].staff)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tthis.isFirstLine = function(index) {\n\t\tfor (var i = index-1; i >= 0; i--) {\n\t\t\tif (tune.lines[i].staff !== undefined) return false;\n\t\t}\n\t\treturn true;\n\t};\n\n\tthis.getCurrentVoice = function() {\n\t\tvar currLine = tune.lines[tune.lineNum];\n\t\tif (!currLine)\n\t\t\treturn null;\n\t\tvar currStaff = currLine.staff[tune.staffNum];\n\t\tif (!currStaff)\n\t\t\treturn null;\n\t\tif (currStaff.voices[tune.voiceNum] !== undefined)\n\t\t\treturn currStaff.voices[tune.voiceNum];\n\t\telse return null;\n\t};\n\n\tthis.setCurrentVoice = function(staffNum, voiceNum) {\n\t\ttune.staffNum = staffNum;\n\t\ttune.voiceNum = voiceNum;\n\t\tfor (var i = 0; i < tune.lines.length; i++) {\n\t\t\tif (tune.lines[i].staff) {\n\t\t\t\tif (tune.lines[i].staff[staffNum] === undefined || tune.lines[i].staff[staffNum].voices[voiceNum] === undefined ||\n\t\t\t\t\t!this.containsNotes(tune.lines[i].staff[staffNum].voices[voiceNum] )) {\n\t\t\t\t\ttune.lineNum =  i;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ttune.lineNum =  i;\n\t};\n\n\tthis.addMetaText = function(key, value, info) {\n\t\tif (tune.metaText[key] === undefined) {\n\t\t\ttune.metaText[key] = value;\n\t\t\ttune.metaTextInfo[key] = info;\n\t\t} else {\n\t\t\ttune.metaText[key] += \"\\n\" + value;\n\t\t\ttune.metaTextInfo[key].endChar = info.endChar;\n\t\t}\n\t};\n\n\tthis.addMetaTextArray = function(key, value, info) {\n\t\tif (tune.metaText[key] === undefined) {\n\t\t\ttune.metaText[key] = [value];\n\t\t\ttune.metaTextInfo[key] = info;\n\t\t} else {\n\t\t\ttune.metaText[key].push(value);\n\t\t\ttune.metaTextInfo[key].endChar = info.endChar;\n\t\t}\n\t};\n\tthis.addMetaTextObj = function(key, value, info) {\n\t\ttune.metaText[key] = value;\n\t\ttune.metaTextInfo[key] = info;\n\t};\n};\n\nmodule.exports = TuneBuilder;\n"},"lineCount":897}},"error":null,"hash":"89c33d222d0a78b652417f1b508d9fec","cacheData":{"env":{}}}