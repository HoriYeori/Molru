{"id":"node_modules/abcjs/src/synth/download-buffer.js","dependencies":[{"name":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\package.json","includedInParent":true,"mtime":1648705913118},{"name":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\package.json","includedInParent":true,"mtime":1648703408663}],"generated":{"js":"var downloadBuffer = function(buffer) {\n\treturn window.URL.createObjectURL(bufferToWave(buffer.audioBuffers));\n};\n\n// Convert an AudioBuffer to a Blob using WAVE representation\nfunction bufferToWave(audioBuffers) {\n\tvar audioBuffer = audioBuffers[0];\n\tvar numOfChan = audioBuffer.numberOfChannels;\n\tvar length = audioBuffer.length * numOfChan * 2 + 44;\n\tvar buffer = new ArrayBuffer(length);\n\tvar view = new DataView(buffer);\n\tvar channels = [];\n\tvar i;\n\tvar sample;\n\tvar offset = 0;\n\tvar pos = 0;\n\n\t// write WAVE header\n\tsetUint32(0x46464952);                         // \"RIFF\"\n\tsetUint32(length - 8);                         // file length - 8\n\tsetUint32(0x45564157);                         // \"WAVE\"\n\n\tsetUint32(0x20746d66);                         // \"fmt \" chunk\n\tsetUint32(16);                                 // length = 16\n\tsetUint16(1);                                  // PCM (uncompressed)\n\tsetUint16(numOfChan);\n\tsetUint32(audioBuffer.sampleRate);\n\tsetUint32(audioBuffer.sampleRate * 2 * numOfChan); // avg. bytes/sec\n\tsetUint16(numOfChan * 2);                      // block-align\n\tsetUint16(16);                                 // 16-bit (hardcoded in this demo)\n\n\tsetUint32(0x61746164);                         // \"data\" - chunk\n\tsetUint32(length - pos - 4);                   // chunk length\n\n\t// write interleaved data\n\tfor(i = 0; i < numOfChan; i++)\n\t\tchannels.push(audioBuffer.getChannelData(i));\n\n\twhile(pos < length) {\n\t\tfor(i = 0; i < channels.length; i++) {             // interleave channels\n\t\t\tsample = Math.max(-1, Math.min(1, channels[i][offset])); // clamp\n\t\t\tsample = (0.5 + sample < 0 ? sample * 32768 : sample * 32767)|0; // scale to 16-bit signed int\n\t\t\tview.setInt16(pos, sample, true);          // write 16-bit sample\n\t\t\tpos += 2;\n\t\t}\n\t\toffset++; // next source sample\n\t}\n\n\t// create Blob\n\treturn new Blob([buffer], {type: \"audio/wav\"});\n\n\tfunction setUint16(data) {\n\t\tview.setUint16(pos, data, true);\n\t\tpos += 2;\n\t}\n\n\tfunction setUint32(data) {\n\t\tview.setUint32(pos, data, true);\n\t\tpos += 4;\n\t}\n}\n\nmodule.exports = downloadBuffer;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/abcjs/src/synth/download-buffer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}}],"sources":{"node_modules/abcjs/src/synth/download-buffer.js":"var downloadBuffer = function(buffer) {\n\treturn window.URL.createObjectURL(bufferToWave(buffer.audioBuffers));\n};\n\n// Convert an AudioBuffer to a Blob using WAVE representation\nfunction bufferToWave(audioBuffers) {\n\tvar audioBuffer = audioBuffers[0];\n\tvar numOfChan = audioBuffer.numberOfChannels;\n\tvar length = audioBuffer.length * numOfChan * 2 + 44;\n\tvar buffer = new ArrayBuffer(length);\n\tvar view = new DataView(buffer);\n\tvar channels = [];\n\tvar i;\n\tvar sample;\n\tvar offset = 0;\n\tvar pos = 0;\n\n\t// write WAVE header\n\tsetUint32(0x46464952);                         // \"RIFF\"\n\tsetUint32(length - 8);                         // file length - 8\n\tsetUint32(0x45564157);                         // \"WAVE\"\n\n\tsetUint32(0x20746d66);                         // \"fmt \" chunk\n\tsetUint32(16);                                 // length = 16\n\tsetUint16(1);                                  // PCM (uncompressed)\n\tsetUint16(numOfChan);\n\tsetUint32(audioBuffer.sampleRate);\n\tsetUint32(audioBuffer.sampleRate * 2 * numOfChan); // avg. bytes/sec\n\tsetUint16(numOfChan * 2);                      // block-align\n\tsetUint16(16);                                 // 16-bit (hardcoded in this demo)\n\n\tsetUint32(0x61746164);                         // \"data\" - chunk\n\tsetUint32(length - pos - 4);                   // chunk length\n\n\t// write interleaved data\n\tfor(i = 0; i < numOfChan; i++)\n\t\tchannels.push(audioBuffer.getChannelData(i));\n\n\twhile(pos < length) {\n\t\tfor(i = 0; i < channels.length; i++) {             // interleave channels\n\t\t\tsample = Math.max(-1, Math.min(1, channels[i][offset])); // clamp\n\t\t\tsample = (0.5 + sample < 0 ? sample * 32768 : sample * 32767)|0; // scale to 16-bit signed int\n\t\t\tview.setInt16(pos, sample, true);          // write 16-bit sample\n\t\t\tpos += 2;\n\t\t}\n\t\toffset++; // next source sample\n\t}\n\n\t// create Blob\n\treturn new Blob([buffer], {type: \"audio/wav\"});\n\n\tfunction setUint16(data) {\n\t\tview.setUint16(pos, data, true);\n\t\tpos += 2;\n\t}\n\n\tfunction setUint32(data) {\n\t\tview.setUint32(pos, data, true);\n\t\tpos += 4;\n\t}\n}\n\nmodule.exports = downloadBuffer;\n"},"lineCount":64}},"error":null,"hash":"3e60a634f8b832fabe801fd67583b504","cacheData":{"env":{}}}