{"id":"node_modules/abcjs/src/write/layout/VoiceElements.js","dependencies":[{"name":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\package.json","includedInParent":true,"mtime":1648705913118},{"name":"C:\\Users\\SSAFY\\Documents\\S06P22B107\\make-melody\\node_modules\\abcjs\\package.json","includedInParent":true,"mtime":1648703408663}],"generated":{"js":"var VoiceElement = function VoiceElements() {}\n\nVoiceElement.beginLayout = function (startx, voice) {\n\tvoice.i=0;\n\tvoice.durationindex=0;\n\t//this.ii=this.children.length;\n\tvoice.startx=startx;\n\tvoice.minx=startx; // furthest left to where negatively positioned elements are allowed to go\n\tvoice.nextx=startx; // x position where the next element of this voice should be placed assuming no other voices and no fixed width constraints\n\tvoice.spacingduration=0; // duration left to be laid out in current iteration (omitting additional spacing due to other aspects, such as bars, dots, sharps and flats)\n};\n\nVoiceElement.layoutEnded = function (voice) {\n\treturn (voice.i>=voice.children.length);\n};\n\nVoiceElement.getNextX = function (voice) {\n\treturn Math.max(voice.minx, voice.nextx);\n};\n\n// number of spacing units expected for next positioning\nVoiceElement.getSpacingUnits = function (voice) {\n\treturn Math.sqrt(voice.spacingduration*8);\n};\n\n// Try to layout the element at index this.i\n// x - position to try to layout the element at\n// spacing - base spacing\n// can't call this function more than once per iteration\nVoiceElement.layoutOneItem = function (x, spacing, voice, minPadding, firstVoice) {\n\tvar child = voice.children[voice.i];\n\tif (!child) return 0;\n\tvar er = x - voice.minx; // available extrawidth to the left\n\tvar pad = voice.durationindex + child.duration > 0 ? minPadding : 0; // only add padding to the items that aren't fixed to the left edge.\n\t// See if this item overlaps the item in the first voice. If firstVoice is undefined then there's nothing to compare.\n\tif (child.abcelem.el_type === \"note\" && !child.abcelem.rest && voice.voicenumber !== 0 && firstVoice) {\n\t\tvar firstChild = firstVoice.children[firstVoice.i];\n\t\t// It overlaps if the either the child's top or bottom is inside the firstChild's or at least within 1\n\t\t// A special case is if the element is on the same line then it can share a note head, if the notehead is the same\n\t\tvar overlaps = firstChild &&\n\t\t\t((child.abcelem.maxpitch <= firstChild.abcelem.maxpitch+1 && child.abcelem.maxpitch >= firstChild.abcelem.minpitch-1) ||\n\t\t\t(child.abcelem.minpitch <= firstChild.abcelem.maxpitch+1 && child.abcelem.minpitch >= firstChild.abcelem.minpitch-1))\n\t\t// See if they can share a note head\n\t\tif (overlaps && child.abcelem.minpitch === firstChild.abcelem.minpitch && child.abcelem.maxpitch === firstChild.abcelem.maxpitch &&\n\t\tfirstChild.heads && firstChild.heads.length > 0 && child.heads && child.heads.length > 0 &&\n\t\tfirstChild.heads[0].c === child.heads[0].c)\n\t\t\toverlaps = false;\n\t\t// If this note overlaps the note in the first voice and we haven't moved the note yet (this can be called multiple times)\n\t\tif (overlaps) {\n\t\t\t// I think that firstChild should always have at least one note head, but defensively make sure.\n\t\t\t// There was a problem with this being called more than once so if a value is adjusted then it is saved so it is only adjusted once.\n\t\t\tvar firstChildNoteWidth = firstChild.heads && firstChild.heads.length > 0 ? firstChild.heads[0].realWidth : firstChild.fixed.w;\n\t\t\tif (!child.adjustedWidth)\n\t\t\t\tchild.adjustedWidth = firstChildNoteWidth + child.w;\n\t\t\tchild.w = child.adjustedWidth\n\t\t\tfor (var j = 0; j < child.children.length; j++) {\n\t\t\t\tvar relativeChild = child.children[j];\n\t\t\t\tif (relativeChild.name.indexOf(\"accidental\") < 0) {\n\t\t\t\t\tif (!relativeChild.adjustedWidth)\n\t\t\t\t\t\trelativeChild.adjustedWidth = relativeChild.dx + firstChildNoteWidth;\n\t\t\t\t\trelativeChild.dx = relativeChild.adjustedWidth\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\tvar extraWidth = getExtraWidth(child, pad);\n\tif (er<extraWidth) { // shift right by needed amount\n\t\t// There's an exception if a bar element is after a Part element, there is no shift.\n\t\tif (voice.i === 0 || child.type !== 'bar' || (voice.children[voice.i-1].type !== 'part' && voice.children[voice.i-1].type !== 'tempo') )\n\t\t\tx+=extraWidth-er;\n\t}\n\tchild.setX(x);\n\n\tvoice.spacingduration = child.duration;\n\t//update minx\n\tvoice.minx = x+getMinWidth(child); // add necessary layout space\n\tif (voice.i!==voice.children.length-1) voice.minx+=child.minspacing; // add minimumspacing except on last elem\n\n\tthis.updateNextX(x, spacing, voice);\n\n\t// contribute to staff y position\n\t//this.staff.top = Math.max(child.top,this.staff.top);\n\t//this.staff.bottom = Math.min(child.bottom,this.staff.bottom);\n\n\treturn x; // where we end up having placed the child\n};\n\nVoiceElement.shiftRight = function (dx, voice) {\n\tvar child = voice.children[voice.i];\n\tif (!child) return;\n\tchild.setX(child.x+dx);\n\tvoice.minx+=dx;\n\tvoice.nextx+=dx;\n};\n\n// call when spacingduration has been updated\nVoiceElement.updateNextX = function (x, spacing, voice) {\n\tvoice.nextx= x + (spacing*Math.sqrt(voice.spacingduration*8));\n};\n\nVoiceElement.updateIndices = function (voice) {\n\tif (!this.layoutEnded(voice)) {\n\t\tvoice.durationindex += voice.children[voice.i].duration;\n\t\tif (voice.children[voice.i].type === 'bar') voice.durationindex = Math.round(voice.durationindex*64)/64; // everytime we meet a barline, do rounding to nearest 64th\n\t\tvoice.i++;\n\t}\n};\n\nfunction getExtraWidth(child, minPadding) { // space needed to the left of the note\n\tvar padding = 0;\n\tif (child.type === 'note' || child.type === 'bar')\n\t\tpadding = minPadding;\n\treturn -child.extraw + padding;\n}\n\nfunction getMinWidth(child) { // absolute space taken to the right of the note\n\treturn child.w;\n}\n\nmodule.exports = VoiceElement;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/abcjs/src/write/layout/VoiceElements.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}}],"sources":{"node_modules/abcjs/src/write/layout/VoiceElements.js":"var VoiceElement = function VoiceElements() {}\n\nVoiceElement.beginLayout = function (startx, voice) {\n\tvoice.i=0;\n\tvoice.durationindex=0;\n\t//this.ii=this.children.length;\n\tvoice.startx=startx;\n\tvoice.minx=startx; // furthest left to where negatively positioned elements are allowed to go\n\tvoice.nextx=startx; // x position where the next element of this voice should be placed assuming no other voices and no fixed width constraints\n\tvoice.spacingduration=0; // duration left to be laid out in current iteration (omitting additional spacing due to other aspects, such as bars, dots, sharps and flats)\n};\n\nVoiceElement.layoutEnded = function (voice) {\n\treturn (voice.i>=voice.children.length);\n};\n\nVoiceElement.getNextX = function (voice) {\n\treturn Math.max(voice.minx, voice.nextx);\n};\n\n// number of spacing units expected for next positioning\nVoiceElement.getSpacingUnits = function (voice) {\n\treturn Math.sqrt(voice.spacingduration*8);\n};\n\n// Try to layout the element at index this.i\n// x - position to try to layout the element at\n// spacing - base spacing\n// can't call this function more than once per iteration\nVoiceElement.layoutOneItem = function (x, spacing, voice, minPadding, firstVoice) {\n\tvar child = voice.children[voice.i];\n\tif (!child) return 0;\n\tvar er = x - voice.minx; // available extrawidth to the left\n\tvar pad = voice.durationindex + child.duration > 0 ? minPadding : 0; // only add padding to the items that aren't fixed to the left edge.\n\t// See if this item overlaps the item in the first voice. If firstVoice is undefined then there's nothing to compare.\n\tif (child.abcelem.el_type === \"note\" && !child.abcelem.rest && voice.voicenumber !== 0 && firstVoice) {\n\t\tvar firstChild = firstVoice.children[firstVoice.i];\n\t\t// It overlaps if the either the child's top or bottom is inside the firstChild's or at least within 1\n\t\t// A special case is if the element is on the same line then it can share a note head, if the notehead is the same\n\t\tvar overlaps = firstChild &&\n\t\t\t((child.abcelem.maxpitch <= firstChild.abcelem.maxpitch+1 && child.abcelem.maxpitch >= firstChild.abcelem.minpitch-1) ||\n\t\t\t(child.abcelem.minpitch <= firstChild.abcelem.maxpitch+1 && child.abcelem.minpitch >= firstChild.abcelem.minpitch-1))\n\t\t// See if they can share a note head\n\t\tif (overlaps && child.abcelem.minpitch === firstChild.abcelem.minpitch && child.abcelem.maxpitch === firstChild.abcelem.maxpitch &&\n\t\tfirstChild.heads && firstChild.heads.length > 0 && child.heads && child.heads.length > 0 &&\n\t\tfirstChild.heads[0].c === child.heads[0].c)\n\t\t\toverlaps = false;\n\t\t// If this note overlaps the note in the first voice and we haven't moved the note yet (this can be called multiple times)\n\t\tif (overlaps) {\n\t\t\t// I think that firstChild should always have at least one note head, but defensively make sure.\n\t\t\t// There was a problem with this being called more than once so if a value is adjusted then it is saved so it is only adjusted once.\n\t\t\tvar firstChildNoteWidth = firstChild.heads && firstChild.heads.length > 0 ? firstChild.heads[0].realWidth : firstChild.fixed.w;\n\t\t\tif (!child.adjustedWidth)\n\t\t\t\tchild.adjustedWidth = firstChildNoteWidth + child.w;\n\t\t\tchild.w = child.adjustedWidth\n\t\t\tfor (var j = 0; j < child.children.length; j++) {\n\t\t\t\tvar relativeChild = child.children[j];\n\t\t\t\tif (relativeChild.name.indexOf(\"accidental\") < 0) {\n\t\t\t\t\tif (!relativeChild.adjustedWidth)\n\t\t\t\t\t\trelativeChild.adjustedWidth = relativeChild.dx + firstChildNoteWidth;\n\t\t\t\t\trelativeChild.dx = relativeChild.adjustedWidth\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\tvar extraWidth = getExtraWidth(child, pad);\n\tif (er<extraWidth) { // shift right by needed amount\n\t\t// There's an exception if a bar element is after a Part element, there is no shift.\n\t\tif (voice.i === 0 || child.type !== 'bar' || (voice.children[voice.i-1].type !== 'part' && voice.children[voice.i-1].type !== 'tempo') )\n\t\t\tx+=extraWidth-er;\n\t}\n\tchild.setX(x);\n\n\tvoice.spacingduration = child.duration;\n\t//update minx\n\tvoice.minx = x+getMinWidth(child); // add necessary layout space\n\tif (voice.i!==voice.children.length-1) voice.minx+=child.minspacing; // add minimumspacing except on last elem\n\n\tthis.updateNextX(x, spacing, voice);\n\n\t// contribute to staff y position\n\t//this.staff.top = Math.max(child.top,this.staff.top);\n\t//this.staff.bottom = Math.min(child.bottom,this.staff.bottom);\n\n\treturn x; // where we end up having placed the child\n};\n\nVoiceElement.shiftRight = function (dx, voice) {\n\tvar child = voice.children[voice.i];\n\tif (!child) return;\n\tchild.setX(child.x+dx);\n\tvoice.minx+=dx;\n\tvoice.nextx+=dx;\n};\n\n// call when spacingduration has been updated\nVoiceElement.updateNextX = function (x, spacing, voice) {\n\tvoice.nextx= x + (spacing*Math.sqrt(voice.spacingduration*8));\n};\n\nVoiceElement.updateIndices = function (voice) {\n\tif (!this.layoutEnded(voice)) {\n\t\tvoice.durationindex += voice.children[voice.i].duration;\n\t\tif (voice.children[voice.i].type === 'bar') voice.durationindex = Math.round(voice.durationindex*64)/64; // everytime we meet a barline, do rounding to nearest 64th\n\t\tvoice.i++;\n\t}\n};\n\nfunction getExtraWidth(child, minPadding) { // space needed to the left of the note\n\tvar padding = 0;\n\tif (child.type === 'note' || child.type === 'bar')\n\t\tpadding = minPadding;\n\treturn -child.extraw + padding;\n}\n\nfunction getMinWidth(child) { // absolute space taken to the right of the note\n\treturn child.w;\n}\n\nmodule.exports = VoiceElement;\n"},"lineCount":122}},"error":null,"hash":"0ca3385b1805a2fc1fbacb1e653b9f73","cacheData":{"env":{}}}